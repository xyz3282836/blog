import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as e,o as a}from"./app-DPahT6HO.js";const n={};function i(l,t){return a(),o("div",null,t[0]||(t[0]=[e("h2",{id:"迪米特法则",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#迪米特法则"},[e("span",null,"迪米特法则")])],-1),e("p",null,"迪米特法则(Law of Demeter )又叫做最少知识原则，也就是说，一个对象应当对其他对象尽可能少的了解。不和陌生人说话。英文简写为: LoD。",-1),e("p",null,"迪米特法则的目的在于降低类之间的耦合。由于每个类尽量减少对其他类的依赖，因此，很容易使得系统的功能模块功能独立，相互之间不存在（或很少有）依赖关系。",-1),e("p",null,"迪米特法则不希望类之间建立直接的联系。如果真的有需要建立联系，也希望能通过它的友元类来转达。因此，应用迪米特法则有可能造成的一个后果就是：系统中存在大量的中介类，这些类之所以存在完全是为了传递类之间的相互调用关系——这在一定程度上增加了系统的复杂度。",-1)]))}const s=r(n,[["render",i],["__file","base.html.vue"]]),m=JSON.parse('{"path":"/tech/design-pattern/base.html","title":"设计模式基础","lang":"zh-CN","frontmatter":{"title":"设计模式基础","date":"2024-01-03T03:51:00.000Z","category":"engineer","tag":["design","pattern"],"description":"迪米特法则 迪米特法则(Law of Demeter )又叫做最少知识原则，也就是说，一个对象应当对其他对象尽可能少的了解。不和陌生人说话。英文简写为: LoD。 迪米特法则的目的在于降低类之间的耦合。由于每个类尽量减少对其他类的依赖，因此，很容易使得系统的功能模块功能独立，相互之间不存在（或很少有）依赖关系。 迪米特法则不希望类之间建立直接的联系。如...","head":[["meta",{"property":"og:url","content":"https://blog.ruizhou.cf/tech/design-pattern/base.html"}],["meta",{"property":"og:site_name","content":"rz blog"}],["meta",{"property":"og:title","content":"设计模式基础"}],["meta",{"property":"og:description","content":"迪米特法则 迪米特法则(Law of Demeter )又叫做最少知识原则，也就是说，一个对象应当对其他对象尽可能少的了解。不和陌生人说话。英文简写为: LoD。 迪米特法则的目的在于降低类之间的耦合。由于每个类尽量减少对其他类的依赖，因此，很容易使得系统的功能模块功能独立，相互之间不存在（或很少有）依赖关系。 迪米特法则不希望类之间建立直接的联系。如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-26T16:16:19.000Z"}],["meta",{"property":"article:tag","content":"design"}],["meta",{"property":"article:tag","content":"pattern"}],["meta",{"property":"article:published_time","content":"2024-01-03T03:51:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-26T16:16:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-03T03:51:00.000Z\\",\\"dateModified\\":\\"2024-01-26T16:16:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ruizhou\\",\\"url\\":\\"https://blog.ruizhou.cf\\"}]}"]]},"headers":[{"level":2,"title":"迪米特法则","slug":"迪米特法则","link":"#迪米特法则","children":[]}],"git":{"createdTime":1706285779000,"updatedTime":1706285779000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"tech/design-pattern/base.md","localizedDate":"2024年1月3日","excerpt":"","autoDesc":true}');export{s as comp,m as data};
