<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://blog.ruizhou.cf/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://blog.ruizhou.cf/</id>
  <title>rz blog</title>
  <subtitle>blog for it tech</subtitle>
  <icon>https://blog.ruizhou.cf/favicon.ico</icon>
  <rights>MIT 协议</rights>
  <updated>2024-10-09T02:08:51.774Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://blog.ruizhou.cf/atom.xml"/>
  <link rel="alternate" href="https://blog.ruizhou.cf/"/>
  <category term="go"/>
  <category term="cpu"/>
  <category term="money"/>
  <category term="harmony"/>
  <category term="linux"/>
  <category term="英文"/>
  <category term="web"/>
  <category term="engineering"/>
  <category term="ai"/>
  <category term="硬件"/>
  <category term="软件"/>
  <category term="技术"/>
  <category term="Git"/>
  <category term="VS Code"/>
  <category term="Go"/>
  <category term="yaml"/>
  <category term="YAML"/>
  <contributor>
    <name>李欣桐</name>
  </contributor>
  <contributor>
    <name>廖雪峰</name>
  </contributor>
  <contributor>
    <name>Mr.Hope &amp; 廖雪峰</name>
  </contributor>
  <contributor>
    <name>沈启民</name>
  </contributor>
  <entry>
    <title type="text">gmp</title>
    <id>https://blog.ruizhou.cf/tech/go/gmp.html</id>
    <link href="https://blog.ruizhou.cf/tech/go/gmp.html"/>
    <updated>2024-10-09T02:08:51.790Z</updated>
    <summary type="html"><![CDATA[<h3>reference</h3>
<p>https://mp.weixin.qq.com/s/9rBFZGlu8Kt5W8VgdoQkow</p>
<p>https://www.luozhiyun.com/archives/506</p>
]]></summary>
    <content type="html"><![CDATA[<h3>reference</h3>
<p>https://mp.weixin.qq.com/s/9rBFZGlu8Kt5W8VgdoQkow</p>
<p>https://www.luozhiyun.com/archives/506</p>
]]></content>
    <category term="go"/>
    <published>2025-07-13T07:30:00.000Z</published>
  </entry>
  <entry>
    <title type="text">现代cpu性能分析与优化</title>
    <id>https://blog.ruizhou.cf/tech/book/%E7%8E%B0%E4%BB%A3cpu%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96.html</id>
    <link href="https://blog.ruizhou.cf/tech/book/%E7%8E%B0%E4%BB%A3cpu%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96.html"/>
    <updated>2024-10-09T02:08:51.794Z</updated>
    <summary type="html"><![CDATA[<h2>现代cpu性能分析</h2>
<h3>cpu微架构</h3>
<h4>流水线</h4>
<ul>
<li>取址-IF</li>
<li>译码-ID</li>
<li>执行-EXE</li>
<li>访存-MEM</li>
<li>回写-WB</li>
</ul>
<h4>指令集并行</h4>
<ul>
<li>程序中的大多数指令是独立的，所以都适合流水线化和并行执行</li>
<li>ILP-instruction level parallelism</li>
<li>指令在最终执行时称为退休</li>
<li>乱序执行OOO-out of order</li>
<li>大多数CPU可以一个时钟周期发射多个指令</li>
<li>投机执行
<ul>
<li>预测分支执行</li>
<li>投机执行的结果必须被制止和丢弃。这被称为分支预测错误惩罚</li>
</ul>
</li>
<li>线程并行
<ul>
<li>也就是常见的多线程或者多进程，通过切换上下文来跟踪线程或者进程的状态</li>
</ul>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<h2>现代cpu性能分析</h2>
<h3>cpu微架构</h3>
<h4>流水线</h4>
<ul>
<li>取址-IF</li>
<li>译码-ID</li>
<li>执行-EXE</li>
<li>访存-MEM</li>
<li>回写-WB</li>
</ul>
<h4>指令集并行</h4>
<ul>
<li>程序中的大多数指令是独立的，所以都适合流水线化和并行执行</li>
<li>ILP-instruction level parallelism</li>
<li>指令在最终执行时称为退休</li>
<li>乱序执行OOO-out of order</li>
<li>大多数CPU可以一个时钟周期发射多个指令</li>
<li>投机执行
<ul>
<li>预测分支执行</li>
<li>投机执行的结果必须被制止和丢弃。这被称为分支预测错误惩罚</li>
</ul>
</li>
<li>线程并行
<ul>
<li>也就是常见的多线程或者多进程，通过切换上下文来跟踪线程或者进程的状态</li>
</ul>
</li>
</ul>
<h4>存储</h4>
<ul>
<li>主存-位于高速缓存的下游，支持大容量且成本合适的DRAM（动态RAM）
<ul>
<li>主存三属性
<ul>
<li>延迟</li>
<li>带宽</li>
<li>容量</li>
</ul>
</li>
<li>大多数CPU都支持的主流DRAM技术是DDR（Double Data Rate，双倍数据速率）DRAM技术</li>
</ul>
</li>
</ul>
<h4>cpu前端</h4>
<ul>
<li>将准备好的指令送入CPU后端</li>
</ul>
<h4>cpu后端</h4>
<ul>
<li>CPU后端采用乱序(Out-Of-Order)引擎来执行指令并存储结果</li>
</ul>
<h4>性能监控单元</h4>
<ul>
<li>PMU-performance monitoring unit</li>
</ul>
<h3>性能分析专业术语</h3>
<ul>
<li>退休指令与执行指令
<ul>
<li>PMC-性能监控计数器
<ul>
<li>perf stat -e instructions ./bin</li>
</ul>
</li>
</ul>
</li>
<li>CPI-每指令周期数
<ul>
<li>1/IPC</li>
</ul>
</li>
<li>IPC-每周期指令数</li>
<li>微操作
<ul>
<li>x86架构微处理器把复杂类CISC指令转化为简单类RISC微操作（microoperation，简称μop或uop）</li>
</ul>
</li>
<li>缓存未命中
<ul>
<li>指令缓存未命中被归类为前端停滞</li>
<li>数据缓存未命中被归类为后端停滞</li>
</ul>
</li>
<li>分支预测错误
<ul>
<li>perf stat -e branches,branch-misses -- bin</li>
</ul>
</li>
</ul>
<h3>性能分析方法</h3>
<h4>代码插桩</h4>
<ul>
<li>手动插桩</li>
<li>自动插桩
<ul>
<li>最广为人知的用例是代码覆盖度分析和基于剖析文件的编译优化</li>
</ul>
</li>
<li>二进制插桩
<ul>
<li>静态插桩（提前完成）</li>
<li>动态插桩（在程序执行时按需插入插桩代码）</li>
<li>Intel Pin是非常流行的二进制插桩工具之一</li>
</ul>
</li>
</ul>
<h4>跟踪</h4>
<ul>
<li>跟踪依赖于程序外部依赖项的现有插桩
<ul>
<li>strace工具可以跟踪系统调用，可以被认为是Linux内核的插桩</li>
</ul>
</li>
</ul>
<h4>采样</h4>
<ul>
<li>linux perf收集调用栈
<ul>
<li>帧指针</li>
<li>DWARF</li>
<li>最后分支特性 lbr</li>
</ul>
</li>
<li>火焰图</li>
</ul>
<h4>屋顶线性能模型</h4>
<ul>
<li>硬件有两个主要限制
<ul>
<li>计算速度（峰值计算性能，FLOPS）</li>
<li>数据搬移速度（峰值内存带宽，GB/s）</li>
</ul>
</li>
<li>应用程序的最大性能受峰值计算性能（水平线）和平台带宽与算术强度乘积（对角线）之间的最小值的限制</li>
<li>在屋顶线图上，我们可以绘制标量单核、SIMD单核和SIMD多核性能的理论最大值，这可以让我们了解应用程序性能的提高空间
<ul>
<li>如果发现应用程序是计算密集型的（即具有较高的算术强度）并且性能低于峰值标量单核性能，则应该考虑强制向量化（见8.2.3节）并利用多个线程分配工作</li>
<li>如果应用程序的算术强度较低，则应该寻找改善内存访问的方法</li>
</ul>
</li>
<li>使用屋顶线模型优化性能的最终目标是将点向上移动
<ul>
<li>向量化和线程化将点向上移动</li>
<li>通过增加算术强度优化内存访问将点向右移动同时还可能提高性能</li>
</ul>
</li>
<li>静态性能分析</li>
</ul>
<h4>性能分析相关cpu特性</h4>
<h5>TMA</h5>
<ul>
<li>
<p>前端绑定 front bound</p>
<ul>
<li>读取延迟 fe latency</li>
<li>读取带宽 fe bandwidth</li>
</ul>
</li>
<li>
<p>后端绑定 backend bound</p>
<ul>
<li>核绑定 core bound</li>
<li>内存绑定 memory bound
<ul>
<li>L1 bound</li>
<li>L2 bound</li>
<li>L3 bound</li>
<li>DRAM bound</li>
<li>stroe bound</li>
</ul>
</li>
</ul>
</li>
<li>
<p>退休 retiring</p>
<ul>
<li>轻量微操作 base</li>
<li>微码序列器 microcode sequencer</li>
</ul>
</li>
<li>
<p>错误投机 bad speculation</p>
<ul>
<li>分支预测错误 brach mispred</li>
<li>机器清理 machine clears</li>
</ul>
</li>
<li>
<p>linux perf中TMA，获取TMA第1层指标</p>
<ul>
<li>perf stat --topdown -a -- taskset -c 0 ./exec b
<ul>
<li>--topdown可以查看TMA指标</li>
<li>taskset -c 0可以绑定core 0</li>
</ul>
</li>
</ul>
</li>
<li>
<p>toplev可以获取TMA的第2，3层指标</p>
<ul>
<li>
<p>python实现，通过封装和调用linux perf工具实现</p>
</li>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>toplev.py --core S0-C0 -l1 -v --no-desc -c 0 ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>后端绑定53.43%</li>
</ul>
</li>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>toplev.py --core S0-C0 -l2 -v --no-desc -c 0 ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>内存绑定44.59%</li>
</ul>
</li>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>toplev.py --core S0-C0 -l3 -v --no-desc -c 0 ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>DRAM绑定47.11%</li>
<li>Skylake CPU架构，DRAM_Bound指标是通过CYCLE_ACTIVITY.STALLS_L3_MISS性能事件计算的</li>
</ul>
</li>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>perf stat -e cycles,cycle_activity.stalls_l3_miss -- ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>统计了当L3缓存未命中未完成预期加载而导致执行阻塞的CPU周期数</li>
</ul>
</li>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>perf record -e cpu/event=0xd1,umask=0x20,name=MEM_LOAD_RETIRED.L3_MISS/PPP ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ul>
</li>
</ul>
<h4>最后分支记录</h4>
<ul>
<li>
<p>利用该特性可以持续地记录大量已经执行的分支跳转指令</p>
<ul>
<li>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>perf record -b -e cycles ./exec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ul>
</li>
<li>
<p>分析分支预测错误率</p>
</li>
</ul>
<h2>基于源代码的cpu调优</h2>
<h3>cpu前端优化</h3>
<p>前端不能给执行单元提供指令的原因有很多，不过通常被归结为<code>缓存利用率</code>和<code>无法从内存中获取指令</code>两类</p>
<figure><figcaption>image_0099</figcaption></figure>
<ul>
<li>基本块布局</li>
<li>基本块对齐</li>
<li>函数拆分</li>
<li>函数分组</li>
</ul>
<h3>cpu后端优化</h3>
<p>内存绑定，几种策略优化</p>
<ul>
<li>缓存友好的数据结构</li>
<li>按顺序访问数据</li>
</ul>
<h3>优化错误投机</h3>
<p>当经常发生分支预测错误时，会导致显著的性能劣化</p>
<p>通常，现代CPU发生分支预测错误时会有15～20个时钟周期的开销</p>
<p>对于常规应用程序，有5%～10%的“错误投机”率是正常的</p>
<p>可以直接解决分支预测错误问题的方法就是消除分支本身</p>
<ul>
<li>用查表替换分支</li>
<li>用断言替换分支</li>
</ul>
<p>当CPU分支预测器难以预测分支输出模式时，应用程序的性能可能会受到影响。在这种场景下，无分支版本的算法会更好。</p>
<h3>其他调优</h3>
<ul>
<li>编译时计算</li>
<li>编译器内建函数</li>
<li>缓存预热</li>
<li>减少慢速浮点运算
<ul>
<li>对于有浮点值运算的应用程序，当浮点数值非规范时，可能会遇到异常场景。对非规范的数值进行运算，很容易就会变得非常慢。当CPU处理尝试对非规范浮点值运算的指令时，需要对这个场景进行特殊处理。因为是异常场景，CPU需要请求微码协助[插图]。微码序列器只读存储器将会为流水线提供大量微操作。</li>
</ul>
</li>
</ul>
<h3>优化多线程应用程序</h3>
<h4>性能扩展和开销</h4>
<p>阿姆达尔定律</p>
<p>该定律表明并行程序的加速效果被它的串行组件所限制</p>
<figure><figcaption>image_0167</figcaption></figure>
<p>进一步给系统添加计算单元可能会产生负加速效果。Neil Gunther将这种效应解释为通用可伸缩性定律(Universal Scalability Law，USL)，它是阿姆达尔定律的扩展。通用可伸缩性定律将计算单元（线程）之间的通信描述为影响性能的另一个门控因素。随着系统规模的扩大，开销将阻碍性能。超过某个临界点，系统性能开始下降。通用可伸缩性定律被广泛地应用于系统容量和扩展性的建模。</p>
<figure><figcaption>image_0169</figcaption></figure>
<h4>并行效率指标</h4>
<p>有效CPU利用率</p>
<h4>使用Linux perf进行分析</h4>
<h4>使用Coz进行分析</h4>
<p>Coz是一个新型的剖析工具，它可以解决这类问题并填补传统软件剖析工具的短板。它使用了一种名为“因果剖析”的新技术，该技术在应用程序运行时进行实验，通过模拟加快代码段的速度来预测某些优化的总体效果。它通过对其他同步运行的代码插入暂停动作，以实现“模拟加速”(Curtsinger&amp;Berger，2015)。</p>
<h4>使用eBPF和GAPP进行分析</h4>
<p>eBPF是基于运行在内核中的沙箱虚拟机的，这使得在内核中安全、高效地执行用户自定义程序成为可能。用C语言开发用户自定义的程序，然后用准备好的BCC编译器[插图]将其编译成BPF字节码，以便在内核虚拟机中进行加载。这些BPF程序可以设计为在某个内核事件执行时启动，然后通过不同方式把原始或处理过的数据返回用户空间。</p>
<p>开源社区提供了很多通用的eBPF程序，其中一个叫通用自动并行剖析工具(Generic Automatic Parallel Profiler，GAPP)，它有助于跟踪多线程竞争问题。GAPP通过eBPF对已识别的序列化瓶颈的紧急程度进行排序并收集被阻塞的线程和导致阻塞的线程的堆栈，来跟踪多线程应用程序的竞争开销。GAPP的好处是它不需要进行代码更改、代码插桩，也不需要重新编译。</p>
<h4>检测一致性问题</h4>
<p>缓存一致性协议</p>
<p>最著名的一个缓存一致性协议是MESI（Modified Exclusive Shared Invalid，修改、独有、共享、无效），它支持如现代CPU中使用的缓存回写。</p>
<ul>
<li>修改(Modified)—缓存行只在当前缓存出现，其值相对内存中的值已经发生变化</li>
<li>独有(Exclusive)—缓存行只在当前缓存出现，其值与内存中的值一致</li>
<li>共享(Shared)—缓存行出现在当前缓存和其他缓存，并且值都与内存中的值一致</li>
<li>无效(Invalid)—缓存行没有被使用（例如，不包含任何内存地址的内容）</li>
</ul>
<p>实际上，CPU厂商通常会实现稍加改进的MESI变体。例如，Intel使用MESIF，它增添加了一个转发(Forwarding，F)状态；而AMD使用MOESI，它增加了一个持有(Owning，O)状态。</p>
<figure><figcaption>image_0187</figcaption></figure>
<h5>真共享</h5>
<p>当处理器访问相同变量时，称为“真共享”</p>
<h5>伪共享</h5>
<p>当两个不同的处理器修改恰巧位于同一缓存行的不同变量时，称为“伪共享”</p>
<p>伪共享是多线程应用程序性能问题的主要来源，因此现代分析工具都支持这种场景的检测。TMA把有真共享和伪共享问题的应用程序表征为内存绑定类型。在这种场景下，通常可以看到比较高的竞争访问(Contested Access)指标。</p>
]]></content>
    <category term="cpu"/>
    <published>2024-09-29T08:45:00.000Z</published>
  </entry>
  <entry>
    <title type="text">财经</title>
    <id>https://blog.ruizhou.cf/tech/book/money.html</id>
    <link href="https://blog.ruizhou.cf/tech/book/money.html"/>
    <updated>2024-10-09T02:08:51.829Z</updated>
    <summary type="html"><![CDATA[<h2>有钱人和你想的不一样</h2>
<p>金钱观，从父母那边耳濡目染，其实本身就是错的</p>
<p>行动起来，宇宙都会帮你</p>
<p>创业，不是抛弃所有，而是要更加安全的创业，软着陆</p>
<h2>富爸爸穷爸爸</h2>
<ul>
<li>恐惧</li>
<li>欲望</li>
<li>无知，需要不断学习</li>
</ul>
<p>按部就班，努力学习，考好大学，顺利找了一份朝九晚五的工作，渐渐你会依赖这种模式，滋生<code>恐惧</code>，一旦没工作就没有收入，而一旦升职加薪，消费提升，<code>贪婪</code>心态作祟，更加依赖这种模式</p>
<p><code>无知</code>导致了恐惧和欲望</p>]]></summary>
    <content type="html"><![CDATA[<h2>有钱人和你想的不一样</h2>
<p>金钱观，从父母那边耳濡目染，其实本身就是错的</p>
<p>行动起来，宇宙都会帮你</p>
<p>创业，不是抛弃所有，而是要更加安全的创业，软着陆</p>
<h2>富爸爸穷爸爸</h2>
<ul>
<li>恐惧</li>
<li>欲望</li>
<li>无知，需要不断学习</li>
</ul>
<p>按部就班，努力学习，考好大学，顺利找了一份朝九晚五的工作，渐渐你会依赖这种模式，滋生<code>恐惧</code>，一旦没工作就没有收入，而一旦升职加薪，消费提升，<code>贪婪</code>心态作祟，更加依赖这种模式</p>
<p><code>无知</code>导致了恐惧和欲望</p>
<p>让感情跟随思想，不能任由感情控制人</p>
<p>不求回报的工作，很快就可以发现比拿工资更挣钱的方法。</p>
]]></content>
    <category term="money"/>
    <published>2024-07-07T13:08:00.000Z</published>
  </entry>
  <entry>
    <title type="text">鸿蒙</title>
    <id>https://blog.ruizhou.cf/tech/other/harmony.html</id>
    <link href="https://blog.ruizhou.cf/tech/other/harmony.html"/>
    <updated>2024-10-09T02:08:51.829Z</updated>
    <summary type="html"><![CDATA[<h2>diff</h2>
<figure><figcaption>diff</figcaption></figure>
]]></summary>
    <content type="html"><![CDATA[<h2>diff</h2>
<figure><figcaption>diff</figcaption></figure>
]]></content>
    <category term="harmony"/>
    <published>2024-06-25T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">base</title>
    <id>https://blog.ruizhou.cf/tech/linux/base.html</id>
    <link href="https://blog.ruizhou.cf/tech/linux/base.html"/>
    <updated>2024-10-09T02:08:51.830Z</updated>
    <summary type="html"><![CDATA[<h2>系统监控和诊断工具</h2>
<p>sysstat</p>
<p>iotop</p>
<p>pop-system-tools</p>
<h2>网络</h2>
<p>net-tools</p>
<p>freedp</p>
<p>tcpdump</p>
<p>telnet</p>
<p>nmap</p>
<p>mtr</p>
<p>map-ncat</p>
<h2>文件系统与磁盘</h2>
<p>lsof</p>
<p>xfsdump</p>
<p>strace</p>
<p>Boom-boot</p>
<p>smartmontools</p>
<h2>系统管理</h2>
<p>yum-utils</p>]]></summary>
    <content type="html"><![CDATA[<h2>系统监控和诊断工具</h2>
<p>sysstat</p>
<p>iotop</p>
<p>pop-system-tools</p>
<h2>网络</h2>
<p>net-tools</p>
<p>freedp</p>
<p>tcpdump</p>
<p>telnet</p>
<p>nmap</p>
<p>mtr</p>
<p>map-ncat</p>
<h2>文件系统与磁盘</h2>
<p>lsof</p>
<p>xfsdump</p>
<p>strace</p>
<p>Boom-boot</p>
<p>smartmontools</p>
<h2>系统管理</h2>
<p>yum-utils</p>
<p>tmux</p>
<p>psmisc</p>
<p>rsync</p>
<h2>系统日志</h2>
<p>rsyslog</p>
<p>sos</p>
<h2>调试分析</h2>
<p>strace</p>
<p>perf</p>
<p>valgrind</p>
<p>bcc-tools</p>
]]></content>
    <category term="linux"/>
    <published>2024-06-18T04:44:00.000Z</published>
  </entry>
  <entry>
    <title type="text"></title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/03/2404182054.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/03/2404182054.html"/>
    <updated>2024-10-09T02:08:51.831Z</updated>
    <summary type="html"><![CDATA[<p>The script depicted a heroic character standing up against harassment,showcasing the bravery and resilience of individuals in the fact of adversity.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>harassment 骚挠</p>
<p>adversity 逆境（adverse 敌对的；不利的）</p>
<p>resilience 韧性（resile 弹回，有弹力）</p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>The script depicted a heroic character standing up against harassment,showcasing the bravery and resilience of individuals in the fact of adversity.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>harassment 骚挠</p>
<p>adversity 逆境（adverse 敌对的；不利的）</p>
<p>resilience 韧性（resile 弹回，有弹力）</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-04-18T12:54:00.000Z</published>
  </entry>
  <entry>
    <title type="text">csrf</title>
    <id>https://blog.ruizhou.cf/tech/web/csrf.html</id>
    <link href="https://blog.ruizhou.cf/tech/web/csrf.html"/>
    <updated>2024-10-09T02:08:51.832Z</updated>
    <summary type="html"><![CDATA[<h2>CSRF错误配置漏洞修复建议</h2>
<h3>漏洞简介：</h3>
<p>CSRF(Cross-site request forgery) 跨站请求伪造，是用一些欺骗的手段诱导受害者访问一个带攻击代码的第三方网站，带攻击代码的第三方网站向被攻击的网站发起跨站请求。利用受害者已经登陆的权限，进行一些需要登陆的敏感操作。</p>
<h3>两种常见的 CSRF 漏洞利用：</h3>
<ol>
<li>
<h4>GET方法的CSRF</h4>
<p><code>&lt;img src=``"https://xxx.bilibili.com/action?xxx=xxx"</code> <code>&gt;</code></p>
<p>受害者访问带攻击代码的站点时，浏览器会带上 bilibili 域的 Cookie 请求 http://xxx.bilibili.com/action?xxx=xxx 域名</p>
</li>
<li>
<h4>POST方法的CSRF</h4>
<p><code>&lt;form action=``"https://xxx.bilibili.com/action"</code> <code>method=POST&gt;``  ``&lt;input type=``"hidden"</code> <code>name=``"xxx"</code> <code>value=``"xxx"</code> <code>/&gt;``&lt;/form&gt;``&lt;script&gt; document.forms[0].submit(); &lt;/script&gt;</code></p>
</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>CSRF错误配置漏洞修复建议</h2>
<h3>漏洞简介：</h3>
<p>CSRF(Cross-site request forgery) 跨站请求伪造，是用一些欺骗的手段诱导受害者访问一个带攻击代码的第三方网站，带攻击代码的第三方网站向被攻击的网站发起跨站请求。利用受害者已经登陆的权限，进行一些需要登陆的敏感操作。</p>
<h3>两种常见的 CSRF 漏洞利用：</h3>
<ol>
<li>
<h4>GET方法的CSRF</h4>
<p><code>&lt;img src=``"https://xxx.bilibili.com/action?xxx=xxx"</code> <code>&gt;</code></p>
<p>受害者访问带攻击代码的站点时，浏览器会带上 bilibili 域的 Cookie 请求 http://xxx.bilibili.com/action?xxx=xxx 域名</p>
</li>
<li>
<h4>POST方法的CSRF</h4>
<p><code>&lt;form action=``"https://xxx.bilibili.com/action"</code> <code>method=POST&gt;``  ``&lt;input type=``"hidden"</code> <code>name=``"xxx"</code> <code>value=``"xxx"</code> <code>/&gt;``&lt;/form&gt;``&lt;script&gt; document.forms[0].submit(); &lt;/script&gt;</code></p>
</li>
</ol>
<h3>修复建议：</h3>
<ol>
<li>敏感操作避免使用 GET 方法（目前我们有一些业务同时支持 GET、POST 两种方式请求，GET 请求无 CSRF TOKEN 的校验）</li>
<li>POST 请求增加 CSRF TOKEN 校验（第三方站点无法获取用户的Token）</li>
<li>其他建议：也可以增加同源检测</li>
</ol>
]]></content>
    <category term="web"/>
    <published>2024-04-07T10:06:00.000Z</published>
  </entry>
  <entry>
    <title type="text">cors</title>
    <id>https://blog.ruizhou.cf/tech/web/cors.html</id>
    <link href="https://blog.ruizhou.cf/tech/web/cors.html"/>
    <updated>2024-10-09T02:08:51.832Z</updated>
    <summary type="html"><![CDATA[<h2>CORS错误配置漏洞修复建议</h2>
<h3>漏洞简介：</h3>
<p>CORS，跨域资源共享（Cross-origin resource sharing）的本质是由服务端配置的策略指导客户端浏览器，放松同源策略限制，实现跨域资源共享。但是一旦服务器端访问控制策略配置出现错误，信任非预期域名，就会出现浏览器SOP被绕过。攻击者便可以利用CORS误配置漏洞， 从恶意网站跨域读写目标系统中的敏感信息。</p>
<h3>常见的CORS错误配置：</h3>
<ol>
<li>
<h4>反射 Origin头</h4>
<p>最简单地动态生成访问控制策略的方法，就是在Access-Control-Allow-Origin中反射请求的Origin值。例如，下面是一个错误 Nginx 配置示例：</p>
<p>​ add_header "Access-Control-Allow-Origin" $http_origin;</p>
<p>​ add_header “Access-Control-Allow-Credentials” “true”;</p>
<p>这种配置非常危险，相当于信任任意网站，给攻击者网站敞开了大门。任意攻击者网站可以直接跨域读取其资源内容。</p>
</li>
<li>
<h4>Origin 校验错误</h4>
<p>校验Origin头时使用了错误的方式，如：</p>
<ul>
<li>前缀匹配：例如<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>访问，但是只做了前缀匹配，导致同时信任了<a href="http://example.com.attack.com/" target="_blank" rel="noopener noreferrer">example.com.attack.com</a>的访问，而<a href="http://example.com.attack.com/" target="_blank" rel="noopener noreferrer">example.com.attack.com</a> 是攻击者可以控制的网站。</li>
<li>后缀匹配：例如<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>访问，由于后缀匹配出错，导致允许<a href="http://attackexample.com/" target="_blank" rel="noopener noreferrer">attackexample.com</a>访问。</li>
<li>没有转义’.’：例如，<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>想要允许<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 访问时，但正则匹配没有转义’.’，导致允许<a href="http://wwwaexample.com/" target="_blank" rel="noopener noreferrer">wwwaexample.com</a>访问。</li>
<li>包含匹配：例如网站<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许 <a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>，但是Origin校验出错，出现允许<a href="http://ample.com/" target="_blank" rel="noopener noreferrer">ample.com</a>访问。</li>
</ul>
</li>
<li>
<h4>信任null</h4>
<p>​ Access-Control-Allow-Origin: null</p>
<p>​ Access-Control-Allow-Credentials: true</p>
</li>
<li>
<h4>Https域信任Http域</h4>
<p>如果HTTPS网站配置了CORS且信任HTTP域，那么中间人攻击者可以先劫持受信任HTTP域，然后通过这个域发送跨域请求到HTTPS网站，间接读取HTTPS域下的受保护内容。</p>
</li>
<li>
<h4>信任自身全部子域</h4>
<p>如果某个域配置了CORS且信任全部子域，那么攻击者可以利用其他任意子域上XSS漏洞，发送跨域请求到目标重要域网站，从而获取敏感内容。</p>
</li>
<li>
<h4>Origin:*与 Credentials:true 共用</h4>
<p>Access-Control-Allow-Origin: *</p>
<p>Access-Control-Allow-Credentials: true</p>
</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>CORS错误配置漏洞修复建议</h2>
<h3>漏洞简介：</h3>
<p>CORS，跨域资源共享（Cross-origin resource sharing）的本质是由服务端配置的策略指导客户端浏览器，放松同源策略限制，实现跨域资源共享。但是一旦服务器端访问控制策略配置出现错误，信任非预期域名，就会出现浏览器SOP被绕过。攻击者便可以利用CORS误配置漏洞， 从恶意网站跨域读写目标系统中的敏感信息。</p>
<h3>常见的CORS错误配置：</h3>
<ol>
<li>
<h4>反射 Origin头</h4>
<p>最简单地动态生成访问控制策略的方法，就是在Access-Control-Allow-Origin中反射请求的Origin值。例如，下面是一个错误 Nginx 配置示例：</p>
<p>​ add_header "Access-Control-Allow-Origin" $http_origin;</p>
<p>​ add_header “Access-Control-Allow-Credentials” “true”;</p>
<p>这种配置非常危险，相当于信任任意网站，给攻击者网站敞开了大门。任意攻击者网站可以直接跨域读取其资源内容。</p>
</li>
<li>
<h4>Origin 校验错误</h4>
<p>校验Origin头时使用了错误的方式，如：</p>
<ul>
<li>前缀匹配：例如<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>访问，但是只做了前缀匹配，导致同时信任了<a href="http://example.com.attack.com/" target="_blank" rel="noopener noreferrer">example.com.attack.com</a>的访问，而<a href="http://example.com.attack.com/" target="_blank" rel="noopener noreferrer">example.com.attack.com</a> 是攻击者可以控制的网站。</li>
<li>后缀匹配：例如<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>访问，由于后缀匹配出错，导致允许<a href="http://attackexample.com/" target="_blank" rel="noopener noreferrer">attackexample.com</a>访问。</li>
<li>没有转义’.’：例如，<a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>想要允许<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 访问时，但正则匹配没有转义’.’，导致允许<a href="http://wwwaexample.com/" target="_blank" rel="noopener noreferrer">wwwaexample.com</a>访问。</li>
<li>包含匹配：例如网站<a href="http://www.example.com/" target="_blank" rel="noopener noreferrer">www.example.com</a> 想要允许 <a href="http://example.com/" target="_blank" rel="noopener noreferrer">example.com</a>，但是Origin校验出错，出现允许<a href="http://ample.com/" target="_blank" rel="noopener noreferrer">ample.com</a>访问。</li>
</ul>
</li>
<li>
<h4>信任null</h4>
<p>​ Access-Control-Allow-Origin: null</p>
<p>​ Access-Control-Allow-Credentials: true</p>
</li>
<li>
<h4>Https域信任Http域</h4>
<p>如果HTTPS网站配置了CORS且信任HTTP域，那么中间人攻击者可以先劫持受信任HTTP域，然后通过这个域发送跨域请求到HTTPS网站，间接读取HTTPS域下的受保护内容。</p>
</li>
<li>
<h4>信任自身全部子域</h4>
<p>如果某个域配置了CORS且信任全部子域，那么攻击者可以利用其他任意子域上XSS漏洞，发送跨域请求到目标重要域网站，从而获取敏感内容。</p>
</li>
<li>
<h4>Origin:*与 Credentials:true 共用</h4>
<p>Access-Control-Allow-Origin: *</p>
<p>Access-Control-Allow-Credentials: true</p>
</li>
</ol>
<h3>修复建议：</h3>
<ol>
<li>不要盲目反射 Origin头</li>
<li>严格校验 Origin 头，避免出现权限泄露</li>
<li>不要配置 Access-Control-Allow-Origin: null</li>
<li>HTTPS 网站不要信任HTTP 域</li>
<li>不要信任全部自身子域，减少攻击面</li>
<li>不要配置 Origin:*和 Credentials: true</li>
</ol>
]]></content>
    <category term="web"/>
    <published>2024-04-07T10:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Soft Engineering At Google</title>
    <id>https://blog.ruizhou.cf/tech/book/se.html</id>
    <link href="https://blog.ruizhou.cf/tech/book/se.html"/>
    <updated>2024-10-09T02:08:51.834Z</updated>
    <summary type="html"><![CDATA[<h3>设定基调：心理安全</h3>
<p>大型群体的心里安全</p>
<p>向身边的朋友求助询问比问一大群陌生人容易的多。</p>
<p>一个新生向一大群人提问，心里暗示这个问题会被保存很多年，令新人感到害怕。心里安全的需求在大群体中会被放大。小群组的每个成员都需要发挥作用，创作一个安全的环境，确保新人有信心提出问题。后起专家感到有能力帮助新人，不必担心他们的答案收到既有专家的攻击。</p>
<p>实现这种安全友好环境的最重要方式是团队互动，而不是对抗性互动。</p>
<p><strong>团队互动模式</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">推荐模式（合作型）</th>
<th style="text-align:left">反模式(对抗型)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">基本的问题或错误被引导到正确的方向</td>
<td style="text-align:left">基本的问题或错误被挑剔，提问者被责骂</td>
</tr>
<tr>
<td style="text-align:left">解释的目的是为了帮助提问者学习</td>
<td style="text-align:left">解释的目的是为了炫耀自己的知识</td>
</tr>
<tr>
<td style="text-align:left">回应是亲切、耐心、乐于助人的</td>
<td style="text-align:left">回应是居高临下、尖酸刻薄、毫无建设性的</td>
</tr>
<tr>
<td style="text-align:left">互动是寻找解决方案的共享讨论</td>
<td style="text-align:left">互动是 "赢家 "和 "输家 "的争论</td>
</tr>
</tbody>
</table>]]></summary>
    <content type="html"><![CDATA[<h3>设定基调：心理安全</h3>
<p>大型群体的心里安全</p>
<p>向身边的朋友求助询问比问一大群陌生人容易的多。</p>
<p>一个新生向一大群人提问，心里暗示这个问题会被保存很多年，令新人感到害怕。心里安全的需求在大群体中会被放大。小群组的每个成员都需要发挥作用，创作一个安全的环境，确保新人有信心提出问题。后起专家感到有能力帮助新人，不必担心他们的答案收到既有专家的攻击。</p>
<p>实现这种安全友好环境的最重要方式是团队互动，而不是对抗性互动。</p>
<p><strong>团队互动模式</strong></p>
<p>| 推荐模式（合作型）                 | 反模式(对抗型)                         |
| :</p>
]]></content>
    <category term="engineering"/>
    <published>2024-04-06T02:45:00.000Z</published>
  </entry>
  <entry>
    <title type="text">go语言测试</title>
    <id>https://blog.ruizhou.cf/tech/go/test.html</id>
    <link href="https://blog.ruizhou.cf/tech/go/test.html"/>
    <updated>2024-10-09T02:08:51.837Z</updated>
    <summary type="html"><![CDATA[<h2>普通测试</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Testxxx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">匹配</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Testxxx</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<h2>普通测试</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Testxxx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">匹配</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Testxxx</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>必须Test开头</p>
<h2>性能测试</h2>
<p><code>-run</code>一般执行普通测试，性能测试需要<code>-bench</code>开启</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -bench</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> xxx</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>必须<code>Benchmark</code>开头，负责出错</p>
<p>例子：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go test -bench=BenchmarkGenerate$ -benchmem -benchtime=50x -count=3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>-benchmem 展示内存分配信息</p>
<p>-benchtime 50x指执行50次，还可以是5s，表示控制在5s内</p>
<p>-count 3 表示benchmark 3轮</p>
<p>可以通过下面代码，跳过前面的耗时</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>b.ResetTimer() // 重置定时器</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>还可以限制指定范围做压力测试</p>
<div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> BenchmarkBubbleSort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">b</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">testing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">StopTimer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		nums</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generateWithCap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">StartTimer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">		bubbleSort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <category term="go"/>
    <published>2024-04-01T06:26:00.000Z</published>
  </entry>
  <entry>
    <title type="text">常用命令</title>
    <id>https://blog.ruizhou.cf/tech/linux/normal.html</id>
    <link href="https://blog.ruizhou.cf/tech/linux/normal.html"/>
    <updated>2024-10-09T02:08:51.840Z</updated>
    <summary type="html"><![CDATA[<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">top</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pgrep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ','</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">top</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pgrep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ','</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>-c 显示完整命令行</p>
<p>-p 指定进程ID</p>
<p>pgrep 查找匹配条件的进程</p>
<p>-d ',' 指定输出分隔符</p>
<p>-f 进程名称</p>
]]></content>
    <category term="linux"/>
    <published>2024-03-07T13:20:00.000Z</published>
  </entry>
  <entry>
    <title type="text">New Zealand set to scrap world-first tobacco ban</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402280601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402280601.html"/>
    <updated>2024-10-09T02:08:51.840Z</updated>
    <summary type="html"><![CDATA[<p>New Zealand will <code>repeal</code> on Tuesday a world-first law banning <code>tobacco</code> sales for future generations, the government said, even while researchers and <code>campaigners</code> warned of the risk that people could die as a result. Set to take effect from July, the <code>toughest</code> anti-tobacco rules in the world would have banned sales to those born after Jan. 1, 2009, cut <code>nicotine</code> content in smoked tobacco products and reduced the number of tobacco retailers by more than 90%. The new <code>coalition</code> government <code>elected</code> in October confirmed the repeal will happen on Tuesday as a matter of urgency, enabling it to <code>scrap</code> the law without seeking public comment.</p>]]></summary>
    <content type="html"><![CDATA[<p>New Zealand will <code>repeal</code> on Tuesday a world-first law banning <code>tobacco</code> sales for future generations, the government said, even while researchers and <code>campaigners</code> warned of the risk that people could die as a result. Set to take effect from July, the <code>toughest</code> anti-tobacco rules in the world would have banned sales to those born after Jan. 1, 2009, cut <code>nicotine</code> content in smoked tobacco products and reduced the number of tobacco retailers by more than 90%. The new <code>coalition</code> government <code>elected</code> in October confirmed the repeal will happen on Tuesday as a matter of urgency, enabling it to <code>scrap</code> the law without seeking public comment.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>campaign 战役；运动；竞选活动（本意是在旷野中进行军事活动）</p>
<p>campainer 参加相关运动的人</p>
<p>nocotine 尼古丁</p>
<p>tobacco 烟草</p>
<p>repeal 废除；撤销</p>
<p>elect 选举</p>
<p>coalition 联合（联合政府）</p>
<p>scrap 放弃；拆毁；敲碎</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-27T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Decades of research destroyed after freezer fails at Swedish university</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402081901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402081901.html"/>
    <updated>2024-10-09T02:08:51.841Z</updated>
    <summary type="html"><![CDATA[<p>Karolinska Institutet (KI) in Stockholm, a <code>prominent</code> Swedish medical university home to the Nobel Assembly, faced a significant <code>setback</code> as research samples gathered over decades were destroyed due to a freezer <code>malfunction</code> during the Christmas holidays. Stored in <code>cryogenic</code> tanks cooled with liquid nitrogen at -190°C, the samples were <code>crucial</code> for various research <code>initiatives</code>. Between December 22 and 23, a malfunction occurred in the supply of liquid nitrogen to 16 cryogenic tanks, as reported by the Guardian.</p>]]></summary>
    <content type="html"><![CDATA[<p>Karolinska Institutet (KI) in Stockholm, a <code>prominent</code> Swedish medical university home to the Nobel Assembly, faced a significant <code>setback</code> as research samples gathered over decades were destroyed due to a freezer <code>malfunction</code> during the Christmas holidays. Stored in <code>cryogenic</code> tanks cooled with liquid nitrogen at -190°C, the samples were <code>crucial</code> for various research <code>initiatives</code>. Between December 22 and 23, a malfunction occurred in the supply of liquid nitrogen to 16 cryogenic tanks, as reported by the Guardian.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>setback 挫折</p>
<p>prominent 卓越的；显著的</p>
<p>malfunction 故障（mal- = bad，坏）</p>
<p>cryogenic 低温的（cryo- = cold，冷）</p>
<p>crucial 决定性的，至关重要的</p>
<p>initiative 主动行动，这里指各种研究项目、计划或倡议</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-08T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Don’t shoot for it: shrinking moon sees hours-long quakes and landslides</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402080601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402080601.html"/>
    <updated>2024-10-09T02:08:51.841Z</updated>
    <summary type="html"><![CDATA[<p>The constancy of the moon in the night sky <code>belies</code> a more <code>volatile</code> reality, researchers said in new Nasa-funded research. As the core of the Earth’s only natural satellite cools, the moon is shrinking, causing it to <code>shrivel</code>. That creates <code>ripples</code> tens of meters high, called <code>thrust</code> faults, across the moon’s surface. In turn, those thrust faults can be the site of hours-long moonquakes and landslides, which could <code>imperil</code> people and robots as humans continue to explore the moon.</p>]]></summary>
    <content type="html"><![CDATA[<p>The constancy of the moon in the night sky <code>belies</code> a more <code>volatile</code> reality, researchers said in new Nasa-funded research. As the core of the Earth’s only natural satellite cools, the moon is shrinking, causing it to <code>shrivel</code>. That creates <code>ripples</code> tens of meters high, called <code>thrust</code> faults, across the moon’s surface. In turn, those thrust faults can be the site of hours-long moonquakes and landslides, which could <code>imperil</code> people and robots as humans continue to explore the moon.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>landslide 山崩</p>
<p>belie 掩饰</p>
<p>volatile 不稳定性的</p>
<p>shrivel 枯萎；干瘪</p>
<p>ripple 涟漪</p>
<p>thrust 冲刺；刺入</p>
<p>fault 这里是“断层”的意思</p>
<p>imperil 使处于危险（peril 危险）</p>
<p>perilous 濒危的</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-07T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Lionel Messi match organiser declines to address demands for ticket refunds in Hong Kong</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402071901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402071901.html"/>
    <updated>2024-10-09T02:08:51.842Z</updated>
    <summary type="html"><![CDATA[<p>The organiser of a football match that superstar Lionel Messi sat out in Hong Kong, disappointing tens of thousands of fans, has <code>withdrawn</code> its application for HK$16 million in government <code>sponsorship</code> for the much-anticipated event in the face of public <code>outrage</code> and official pressure. Tatler Asia also revealed on Monday that Messi was said to be fit to play and included on the team sheet submitted by Inter Miami’s management before the match against a Hong Kong XI on Sunday. But Tatler Asia made no mention of refunds for fans, many from mainland China and some from as far away as Thailand, to see the footballing legend play.</p>]]></summary>
    <content type="html"><![CDATA[<p>The organiser of a football match that superstar Lionel Messi sat out in Hong Kong, disappointing tens of thousands of fans, has <code>withdrawn</code> its application for HK$16 million in government <code>sponsorship</code> for the much-anticipated event in the face of public <code>outrage</code> and official pressure. Tatler Asia also revealed on Monday that Messi was said to be fit to play and included on the team sheet submitted by Inter Miami’s management before the match against a Hong Kong XI on Sunday. But Tatler Asia made no mention of refunds for fans, many from mainland China and some from as far away as Thailand, to see the footballing legend play.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>withdraw 撤回</p>
<p>sponsorship 赞助</p>
<p>sponsor 发起者；赞助者；vt. 发起，赞助</p>
<p>outrage 愤怒💢；暴行</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-07T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">King Charles III diagnosed with cancer, Buckingham Palace says</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402070601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402070601.html"/>
    <updated>2024-10-09T02:08:51.843Z</updated>
    <summary type="html"><![CDATA[<p>King Charles has been diagnosed with a form of cancer, says Buckingham Palace. The type of cancer has not been revealed - it is not <code>prostate</code> cancer, but was discovered during his recent treatment for an enlarged prostate. The King began "regular treatments" on Monday and will <code>postpone</code> public duties during it, the Palace said. The Monarch, 75, "remains wholly positive about his treatment and looks forward to returning to full public duty as soon as possible," it added. No further details are being shared on the stage of cancer or a <code>prognosis</code>.</p>]]></summary>
    <content type="html"><![CDATA[<p>King Charles has been diagnosed with a form of cancer, says Buckingham Palace. The type of cancer has not been revealed - it is not <code>prostate</code> cancer, but was discovered during his recent treatment for an enlarged prostate. The King began "regular treatments" on Monday and will <code>postpone</code> public duties during it, the Palace said. The Monarch, 75, "remains wholly positive about his treatment and looks forward to returning to full public duty as soon as possible," it added. No further details are being shared on the stage of cancer or a <code>prognosis</code>.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>diagnose 诊断</p>
<p>prostate 前列腺</p>
<p>postpone 延迟；推迟（post - = behind，后面；pon- = put，放置）</p>
<p>propone 提议</p>
<p>proponent 支持者</p>
<p>prognosis 预测</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-06T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">A Russian cosmonaut sets a new record for the most time in space</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402061901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402061901.html"/>
    <updated>2024-10-09T02:08:51.843Z</updated>
    <summary type="html"><![CDATA[<p>Russian <code>cosmonaut</code> Oleg Kononenko has broken the world record for the most <code>cumulative</code> time spent in space, Russia’s space agency Roscosmos reported Sunday. The 59-year-old has now spent more than 878 days and 12 hours in space, <code>surpassing</code> fellow Russian Gennady Padalka, who set the previous record of 878 days, 11 hours, 29 minutes, and 48 seconds in 2015. Kononenko has made five journeys to the International Space Station, dating back to 2008.</p>]]></summary>
    <content type="html"><![CDATA[<p>Russian <code>cosmonaut</code> Oleg Kononenko has broken the world record for the most <code>cumulative</code> time spent in space, Russia’s space agency Roscosmos reported Sunday. The 59-year-old has now spent more than 878 days and 12 hours in space, <code>surpassing</code> fellow Russian Gennady Padalka, who set the previous record of 878 days, 11 hours, 29 minutes, and 48 seconds in 2015. Kononenko has made five journeys to the International Space Station, dating back to 2008.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>cosmonaut 一般指的是俄罗斯宇航员</p>
<p>cumulative 累积的</p>
<p>cumulate 堆积</p>
<p>accumulate 堆积</p>
<p>surpass 超过</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-06T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Grammys 2024: Taylor Swift makes history with best album award</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402060601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402060601.html"/>
    <updated>2024-10-09T02:08:51.844Z</updated>
    <summary type="html"><![CDATA[<p>Taylor Swift stole the show at this year's Grammy Awards, becoming the first performer to win the prize for album of the year four times. The superstar had previously been tied on three best album wins with Stevie Wonder, Paul Simon and Frank Sinatra. She received the prize from Celine Dion, who made an unexpected <code>appearance</code>. Swift also used the event to reveal a surprise new album. Miley Cyrus and Billie Eilish took the other top awards at Sunday's ceremony.</p>]]></summary>
    <content type="html"><![CDATA[<p>Taylor Swift stole the show at this year's Grammy Awards, becoming the first performer to win the prize for album of the year four times. The superstar had previously been tied on three best album wins with Stevie Wonder, Paul Simon and Frank Sinatra. She received the prize from Celine Dion, who made an unexpected <code>appearance</code>. Swift also used the event to reveal a surprise new album. Miley Cyrus and Billie Eilish took the other top awards at Sunday's ceremony.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>appearance 出现；露面</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-05T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">China’s wild giant panda population reaches nearly 1,900</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402051901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402051901.html"/>
    <updated>2024-10-09T02:08:51.844Z</updated>
    <summary type="html"><![CDATA[<p>China has implemented measures to enhance the protection of giant pandas and their habitats, <code>yielding</code> remarkable outcomes during recent years, leading to an increase in the total number of wild giant pandas from around 1,100 in the 1980s to nearly 1,900 currently, the National Forestry and Grassland Administration said on Thursday. The Global Times has learnt from the administration's press briefing on Thursday that the protected area for giant pandas has increased from 1.39 million hectares to 2.58 million hectares, effectively safeguarding the safety and sustainable development of the wild population of giant pandas.</p>]]></summary>
    <content type="html"><![CDATA[<p>China has implemented measures to enhance the protection of giant pandas and their habitats, <code>yielding</code> remarkable outcomes during recent years, leading to an increase in the total number of wild giant pandas from around 1,100 in the 1980s to nearly 1,900 currently, the National Forestry and Grassland Administration said on Thursday. The Global Times has learnt from the administration's press briefing on Thursday that the protected area for giant pandas has increased from 1.39 million hectares to 2.58 million hectares, effectively safeguarding the safety and sustainable development of the wild population of giant pandas.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>yield 出产；产量</p>
<p>yield remarkable outcomes 取得好的结果</p>
<p>grassland 草原</p>
<p>sustainable development 可持续发展</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-05T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Scientists found a major clue why 4 of 5 autoimmune patients are women</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402050601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402050601.html"/>
    <updated>2024-10-09T02:08:51.844Z</updated>
    <summary type="html"><![CDATA[<p>An international team led by scientists at Stanford University has discovered a probable explanation for a decades-old biological mystery: why <code>vastly</code> more women than men suffer from <code>autoimmune</code> diseases such as <code>lupus</code> and <code>rheumatoid</code> <code>arthritis</code>. Women account for about 80 percent of the people <code>afflicted</code> with autoimmune diseases, a collection of more than 100 <code>ailments</code> that <code>burden</code> a combined 50 million Americans, according to the nonprofit Autoimmune Association. In a paper published Thursday in the journal Cell, researchers present new evidence that a <code>molecule</code> called Xist — pronounced like the word “exist” and found only in women — is a major <code>culprit</code> in these diseases.</p>]]></summary>
    <content type="html"><![CDATA[<p>An international team led by scientists at Stanford University has discovered a probable explanation for a decades-old biological mystery: why <code>vastly</code> more women than men suffer from <code>autoimmune</code> diseases such as <code>lupus</code> and <code>rheumatoid</code> <code>arthritis</code>. Women account for about 80 percent of the people <code>afflicted</code> with autoimmune diseases, a collection of more than 100 <code>ailments</code> that <code>burden</code> a combined 50 million Americans, according to the nonprofit Autoimmune Association. In a paper published Thursday in the journal Cell, researchers present new evidence that a <code>molecule</code> called Xist — pronounced like the word “exist” and found only in women — is a major <code>culprit</code> in these diseases.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>clue 线索</p>
<p>autoimmune a. 自身免疫的</p>
<p>lupus 狼疮</p>
<p>rheumatoid arthritis 类风湿性关节炎（rheumat- = to flow，流）</p>
<p>afflict 使苦恼；折磨</p>
<p>ailment 疾病；小病</p>
<p>burden 负担；承担</p>
<p>molecule 分子</p>
<p>culprit 引起问题的根因</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-04T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">&amp;quot;Nemo&amp;quot; clownfish drive away species with same stripes, study suggests</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402041901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402041901.html"/>
    <updated>2024-10-09T02:08:51.845Z</updated>
    <summary type="html"><![CDATA[<p>Unlike the star of Disney’s Finding Nemo, real-life common <code>clownfish</code> are not <code>keen</code> on sharing their home with members of their own species. Researchers say they have discovered how they kick unwelcome guests out, by counting the stranger’s vertical white markings. According to previous research, the sea <code>anemones</code> that house common clownfish can also be a temporary home for other species – provided they have horizontal stripes or no stripes at all. However, common clownfish do not tend to <code>cohabit</code> with fish that have vertical markings like their own, instead experiments have shown they are more <code>aggressive</code> towards fish models painted with such patterns.</p>]]></summary>
    <content type="html"><![CDATA[<p>Unlike the star of Disney’s Finding Nemo, real-life common <code>clownfish</code> are not <code>keen</code> on sharing their home with members of their own species. Researchers say they have discovered how they kick unwelcome guests out, by counting the stranger’s vertical white markings. According to previous research, the sea <code>anemones</code> that house common clownfish can also be a temporary home for other species – provided they have horizontal stripes or no stripes at all. However, common clownfish do not tend to <code>cohabit</code> with fish that have vertical markings like their own, instead experiments have shown they are more <code>aggressive</code> towards fish models painted with such patterns.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>clouwn 小丑🤡</p>
<p>keen 热衷于</p>
<p>anemone 海葵</p>
<p>cohabit 同居</p>
<p>habit 习惯（habit- 住）</p>
<p>inhabit 居住于</p>
<p>aggressive 侵略的</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-04T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Spring Festival Travelers Fret as Extreme Weather Arrives</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402040601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402040601.html"/>
    <updated>2024-10-09T02:08:51.845Z</updated>
    <summary type="html"><![CDATA[<p>With the world’s biggest annual human migration underway, Chinese people are <code>bracing</code> for disruption to their travel plans as extreme weather is set to hit almost half of the country over the next few days. Parts of China are likely to face their “most complicated” weather conditions during this year’s <code>Spring Festival travel rush</code>, known as chunyun, since 2008, the China Meteorological Administration said on Tuesday. Central and eastern areas may witness snowstorms and freezing rain until Feb. 5. Henan, Hubei, and Shandong provinces are forecast to see their heaviest snowfall on record for this time of year.</p>]]></summary>
    <content type="html"><![CDATA[<p>With the world’s biggest annual human migration underway, Chinese people are <code>bracing</code> for disruption to their travel plans as extreme weather is set to hit almost half of the country over the next few days. Parts of China are likely to face their “most complicated” weather conditions during this year’s <code>Spring Festival travel rush</code>, known as chunyun, since 2008, the China Meteorological Administration said on Tuesday. Central and eastern areas may witness snowstorms and freezing rain until Feb. 5. Henan, Hubei, and Shandong provinces are forecast to see their heaviest snowfall on record for this time of year.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>fret 烦躁；焦急；腐蚀</p>
<p>brace 支架；一对</p>
<p>bracing 支撑的；令人精神焕发的</p>
<p>Spring Festival travel rush 春运</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-03T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Gen Z boys and men more likely than baby boomers to believe feminism harmful, says poll</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402031901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402031901.html"/>
    <updated>2024-10-09T02:08:51.846Z</updated>
    <summary type="html"><![CDATA[<p>Boys and men from generation Z are more likely than older baby boomers to believe that <code>feminism</code> has done more harm than good, according to research. One in four UK males aged 16 to 29 believe it is harder to be a man than a woman and a fifth now <code>look favourably on</code> the social media influencer Andrew Tate, the polling of over 3,600 people found. Tate, the British-American former kickboxer who has 8.7 million followers on the social media platform X, is facing charges in Romania, which he denies, of human <code>trafficking</code>, <code>rape</code> and forming a criminal <code>gang</code> to sexually <code>exploit</code> women.</p>]]></summary>
    <content type="html"><![CDATA[<p>Boys and men from generation Z are more likely than older baby boomers to believe that <code>feminism</code> has done more harm than good, according to research. One in four UK males aged 16 to 29 believe it is harder to be a man than a woman and a fifth now <code>look favourably on</code> the social media influencer Andrew Tate, the polling of over 3,600 people found. Tate, the British-American former kickboxer who has 8.7 million followers on the social media platform X, is facing charges in Romania, which he denies, of human <code>trafficking</code>, <code>rape</code> and forming a criminal <code>gang</code> to sexually <code>exploit</code> women.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>feminism 女权主义（female 女性；femin- 女人）</p>
<p>look favourably on 看好</p>
<p>polling 是指进行调查或投票</p>
<p>poll 选举投票</p>
<p>traffick traffic派生的动作执行者名词，贩子</p>
<p>rape 掠夺；强奸</p>
<p>gang 帮；成群结队</p>
<p>form a criminal gang 组建犯罪团伙</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-03T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Elmo asks, &amp;quot;How is everybody doing?&amp;quot; and the responses were unexpected</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402030601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402030601.html"/>
    <updated>2024-10-09T02:08:51.846Z</updated>
    <summary type="html"><![CDATA[<p>How is everybody doing? The answer, it seems, is not great. When Elmo, the Muppet, <code>innocently</code> asked people how they were on X (formerly Twitter), thousands of users replied, sharing their <code>grief</code> and despair. The <code>Sesame</code> Street character has now responded, saying he's "glad he asked" and posting the hashtag "#EmotionalWellBeing". US President Joe Biden agreed, posting: "Our friend Elmo is right: We have to be there for each other." It all began with a <code>casual</code> question, posed by the much-loved children's TV character on Monday morning. "Elmo is just checking in! How is everybody doing?" he asked on X.</p>]]></summary>
    <content type="html"><![CDATA[<p>How is everybody doing? The answer, it seems, is not great. When Elmo, the Muppet, <code>innocently</code> asked people how they were on X (formerly Twitter), thousands of users replied, sharing their <code>grief</code> and despair. The <code>Sesame</code> Street character has now responded, saying he's "glad he asked" and posting the hashtag "#EmotionalWellBeing". US President Joe Biden agreed, posting: "Our friend Elmo is right: We have to be there for each other." It all began with a <code>casual</code> question, posed by the much-loved children's TV character on Monday morning. "Elmo is just checking in! How is everybody doing?" he asked on X.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>innocently 无知地；天真的</p>
<p>grief 伤心；悲伤（grav- = heavy，重）</p>
<p>sesame 芝麻</p>
<p>casual 偶然的；不经意的；临时的</p>
<p>casual question 不经意的问题</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-02T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Universal Music to pull songs from TikTok</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402021901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402021901.html"/>
    <updated>2024-10-09T02:08:51.847Z</updated>
    <summary type="html"><![CDATA[<p>Universal Music is set to pull its millions of songs from TikTok after a breakdown in talks over payments. The move would mean the social media platform would no longer have access to songs by artists including Taylor Swift, The Weeknd and Drake. Universal <code>accused</code> TikTok of "<code>bullying</code>" and said it wanted to pay a "<code>fraction</code>" of the rate other social media sites do for access to its vast catalogue. TikTok said Universal was presenting a "false <code>narrative</code> and <code>rhetoric</code>".</p>]]></summary>
    <content type="html"><![CDATA[<p>Universal Music is set to pull its millions of songs from TikTok after a breakdown in talks over payments. The move would mean the social media platform would no longer have access to songs by artists including Taylor Swift, The Weeknd and Drake. Universal <code>accused</code> TikTok of "<code>bullying</code>" and said it wanted to pay a "<code>fraction</code>" of the rate other social media sites do for access to its vast catalogue. TikTok said Universal was presenting a "false <code>narrative</code> and <code>rhetoric</code>".</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>accuse 指控</p>
<p>bully 持强凌弱</p>
<p>fraction 微量</p>
<p>narrate 叙述</p>
<p>narrative 叙事的（narrative fiction 叙事小说）</p>
<p>rhetoric 修辞；雄辩；花言巧语；说辞</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-02T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Meta’s Mark Zuckerberg issues dramatic apology at Senate hearing on child safety</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402020601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402020601.html"/>
    <updated>2024-10-09T02:08:51.867Z</updated>
    <summary type="html"><![CDATA[<p>Meta’s Mark Zuckerberg was pushed to publicly apologise to the families of people who said they had been harmed by his social media platform, a dramatic moment in a heated congressional hearing over child safety online. Zuckerberg, whose Meta is the parent of popular platforms Facebook and Instagram, came under particular fire by <code>irate</code> lawmakers during Wednesday’s hearing before the <code>Senate</code> <code>judiciary</code> committee over whether social media companies have done enough to protect younger users from child <code>predators</code>, <code>pornography</code> and other harmful content.</p>]]></summary>
    <content type="html"><![CDATA[<p>Meta’s Mark Zuckerberg was pushed to publicly apologise to the families of people who said they had been harmed by his social media platform, a dramatic moment in a heated congressional hearing over child safety online. Zuckerberg, whose Meta is the parent of popular platforms Facebook and Instagram, came under particular fire by <code>irate</code> lawmakers during Wednesday’s hearing before the <code>Senate</code> <code>judiciary</code> committee over whether social media companies have done enough to protect younger users from child <code>predators</code>, <code>pornography</code> and other harmful content.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>irate 发怒的（-ire 愤怒💢）</p>
<p>the Senate judiciary committee 参议院司法委员会</p>
<p>senate 参议院；立法机构（sen- = old）</p>
<p>judiciary 司法部</p>
<p>predator 掠夺者</p>
<p>sexual predator 性侵犯者</p>
<p>pornography 色情小说作家</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-01T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Chita Rivera, quintessential Broadway musical star, dies at 91</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402011901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402011901.html"/>
    <updated>2024-10-09T02:08:51.867Z</updated>
    <summary type="html"><![CDATA[<p>Chita Rivera, the vivacious Broadway musical star who <code>originated</code> roles in “West Side Story,” “Bye Bye Birdie,” “Chicago” and “Kiss of the Spider Woman,” won two competitive Tony Awards, and became one of the most honored Latina <code>entertainers</code> of her generation, died Jan. 30 in New York. She was 91. Her daughter, Lisa Mordente, announced the death but did not provide a specific cause. With her <code>raven</code> hair, <code>lithe</code> frame and smoky voice, Ms. Rivera cut a <code>mesmerizing</code> Broadway figure for more than six decades, her name <code>synonymous</code> with <code>vitality</code> and longevity on the musical stage.</p>]]></summary>
    <content type="html"><![CDATA[<p>Chita Rivera, the vivacious Broadway musical star who <code>originated</code> roles in “West Side Story,” “Bye Bye Birdie,” “Chicago” and “Kiss of the Spider Woman,” won two competitive Tony Awards, and became one of the most honored Latina <code>entertainers</code> of her generation, died Jan. 30 in New York. She was 91. Her daughter, Lisa Mordente, announced the death but did not provide a specific cause. With her <code>raven</code> hair, <code>lithe</code> frame and smoky voice, Ms. Rivera cut a <code>mesmerizing</code> Broadway figure for more than six decades, her name <code>synonymous</code> with <code>vitality</code> and longevity on the musical stage.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>broadway 百老汇</p>
<p>entertainment 娱乐</p>
<p>entertainer 艺人</p>
<p>raven 渡鸦；乌黑</p>
<p>lithe 柔软的</p>
<p>mesmerize 施催眠术；迷惑</p>
<p>synonymous 同义的（synonym 同义词）</p>
<p>vitality 生命力；长寿（vital 生命的）</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-02-01T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Toyota warns 50,000 US vehicle owners to stop driving, get immediate repairs</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/02/2402010601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/02/2402010601.html"/>
    <updated>2024-10-09T02:08:51.868Z</updated>
    <summary type="html"><![CDATA[<p>Toyota Motor said it is <code>urging</code> the owners of 50,000 older U.S. vehicles to get immediate recall repairs because an air bag <code>inflator</code> could explode and potentially kill <code>motorists</code>. The Japanese automaker said the "Do Not Drive" <code>advisory</code> covers some 2003-2004 model year Corolla, 2003-2004 Corolla Matrix, and 2004-2005 RAV4s with Takata air bag inflators. More than 30 deaths worldwide, including 26 U.S. deaths, and hundreds of injuries in various automakers' vehicles since 2009 are linked to Takata air bag inflators that can explode, <code>unleashing</code> metal shrapnel inside cars and trucks.</p>]]></summary>
    <content type="html"><![CDATA[<p>Toyota Motor said it is <code>urging</code> the owners of 50,000 older U.S. vehicles to get immediate recall repairs because an air bag <code>inflator</code> could explode and potentially kill <code>motorists</code>. The Japanese automaker said the "Do Not Drive" <code>advisory</code> covers some 2003-2004 model year Corolla, 2003-2004 Corolla Matrix, and 2004-2005 RAV4s with Takata air bag inflators. More than 30 deaths worldwide, including 26 U.S. deaths, and hundreds of injuries in various automakers' vehicles since 2009 are linked to Takata air bag inflators that can explode, <code>unleashing</code> metal shrapnel inside cars and trucks.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>urge 敦促，鼓动</p>
<p>inflator 充气机</p>
<p>motorist 开汽车者</p>
<p>advisory 顾问的；咨询的</p>
<p>unleash 解开；发动</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-31T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Famous &amp;quot;male&amp;quot; giant panda He Ye turns out to be female</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401311901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401311901.html"/>
    <updated>2024-10-09T02:08:51.868Z</updated>
    <summary type="html"><![CDATA[<p>Celebrity giant panda He Ye, who has been believed to be male since it was born in July 2020, is in fact female, according to a post from the Chengdu Research Base of Giant Panda Breeding on Wednesday. “When He Ye was just born, her gender <code>characteristics</code> <code>leaned</code> <code>toward</code> being male. A few months later, she showed more male-like characteristics such as high <code>urination</code>, lively personality, and tall stature, and these convinced everyone that He Ye was a boy,” a breeder surnamed Tan said in a video the base also posted.</p>]]></summary>
    <content type="html"><![CDATA[<p>Celebrity giant panda He Ye, who has been believed to be male since it was born in July 2020, is in fact female, according to a post from the Chengdu Research Base of Giant Panda Breeding on Wednesday. “When He Ye was just born, her gender <code>characteristics</code> <code>leaned</code> <code>toward</code> being male. A few months later, she showed more male-like characteristics such as high <code>urination</code>, lively personality, and tall stature, and these convinced everyone that He Ye was a boy,” a breeder surnamed Tan said in a video the base also posted.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>celetrity 名人；明星</p>
<p>characteristic 特性</p>
<p>lean 瘦的；贫瘠的；倾斜</p>
<p>lean toward 倾向</p>
<p>urination 撒尿</p>
<p>urinate 小便</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-31T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Elon Musk Says Neuralink Has Implanted Brain Chip in Human</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401310601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401310601.html"/>
    <updated>2024-10-09T02:08:51.869Z</updated>
    <summary type="html"><![CDATA[<p>Elon Musk said that the first human received a Neuralink brain <code>implant</code>, a potential milestone in the development of “brain-computer interface” technology that could one day help those suffering from <code>debilitating</code> conditions such as <code>paralysis</code> to interact with their surroundings. Musk tweeted late Monday that the <code>patient</code> received the implant the <code>prior</code> day and is “recovering well,” suggesting that the surgery was completed successfully and that there were no serious technical problems. Musk didn’t disclose details about the patient. When Neuralink announced last September that it was <code>recruiting</code> a trial participant, it said it was looking for someone suffering from <code>quadriplegia</code>.</p>]]></summary>
    <content type="html"><![CDATA[<p>Elon Musk said that the first human received a Neuralink brain <code>implant</code>, a potential milestone in the development of “brain-computer interface” technology that could one day help those suffering from <code>debilitating</code> conditions such as <code>paralysis</code> to interact with their surroundings. Musk tweeted late Monday that the <code>patient</code> received the implant the <code>prior</code> day and is “recovering well,” suggesting that the surgery was completed successfully and that there were no serious technical problems. Musk didn’t disclose details about the patient. When Neuralink announced last September that it was <code>recruiting</code> a trial participant, it said it was looking for someone suffering from <code>quadriplegia</code>.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>implant 【医】植入；嵌入</p>
<p>debilitate 使人衰弱</p>
<p>paralysis 瘫痪；麻痹（paralyse 使麻痹；使瘫痪）</p>
<p>prior 更重要的；较早的；事先的</p>
<p>recurit 新兵；恢复；征募</p>
<p>quadriplegia 四肢瘫痪（quadri- 四；plegia = to strike 击打）</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-30T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Icon of the Seas: World&amp;apos;s largest cruise ship sets sail from Miami</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401301901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401301901.html"/>
    <updated>2024-10-09T02:08:51.869Z</updated>
    <summary type="html"><![CDATA[<p>The world's largest <code>cruise</code> ship has set sail from Miami, Florida, on its <code>maiden</code> <code>voyage</code>, but there are concerns about the <code>vessel</code>'s <code>methane</code> <code>emissions</code>. The 365m-long Icon of the Seas has 20 decks and can house a maximum of 7,600 passengers. It is owned by Royal Caribbean Group. The vessel is going on a seven-day island-<code>hopping</code> voyage in the Caribbean. Environmentalists warn the <code>liquefied</code> natural gas (LNG)-powered ship will <code>leak</code> harmful methane into the air. Built at a shipyard in Turku, Finland, the Bahamas-registered ship has seven swimming pools and six water slides.</p>]]></summary>
    <content type="html"><![CDATA[<p>The world's largest <code>cruise</code> ship has set sail from Miami, Florida, on its <code>maiden</code> <code>voyage</code>, but there are concerns about the <code>vessel</code>'s <code>methane</code> <code>emissions</code>. The 365m-long Icon of the Seas has 20 decks and can house a maximum of 7,600 passengers. It is owned by Royal Caribbean Group. The vessel is going on a seven-day island-<code>hopping</code> voyage in the Caribbean. Environmentalists warn the <code>liquefied</code> natural gas (LNG)-powered ship will <code>leak</code> harmful methane into the air. Built at a shipyard in Turku, Finland, the Bahamas-registered ship has seven swimming pools and six water slides.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>set sail 起航</p>
<p>maiden 年轻未婚女士；初次的</p>
<p>voyage 航行（voy- = way，道路）</p>
<p>vessel 船</p>
<p>methane 甲烷</p>
<p>emission 排放；送出</p>
<p>hop 跳跃</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-30T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Italy&amp;apos;s Jannik Sinner wins Australian Open with 5-set victory over Russia&amp;apos;s Daniil Medvedev</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401300601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401300601.html"/>
    <updated>2024-10-09T02:08:51.870Z</updated>
    <summary type="html"><![CDATA[<p>Jannik Sinner lined up a <code>forehand</code>, drilled it down the line and dropped to the court on his back, giving himself some moments to process how he’d managed to come back from two sets down to win his first <code>Grand Slam</code> title. The 22-year-old Sinner found a way to turn defense into attack in his first major final and take the Australian Open title from Daniil Medvedev 3-6, 3-6, 6-4, 6-4, 6-3 on Sunday. “I like to dance in the pressure storm,” he said.</p>]]></summary>
    <content type="html"><![CDATA[<p>Jannik Sinner lined up a <code>forehand</code>, drilled it down the line and dropped to the court on his back, giving himself some moments to process how he’d managed to come back from two sets down to win his first <code>Grand Slam</code> title. The 22-year-old Sinner found a way to turn defense into attack in his first major final and take the Australian Open title from Daniil Medvedev 3-6, 3-6, 6-4, 6-4, 6-3 on Sunday. “I like to dance in the pressure storm,” he said.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>forehand 正打（网球）</p>
<p>set 盘（网球，排球）</p>
<p>Grand Slam 大满贯</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-29T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Palworld: Pokémon Company to investigate copying claims</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401291901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401291901.html"/>
    <updated>2024-10-09T02:08:51.870Z</updated>
    <summary type="html"><![CDATA[<p>The Pokémon Company says it plans to investigate <code>copycat</code> claims against online multiplayer <code>sensation</code> Palworld. Fans have been pointing out similarities after the new title exploded in popularity this week. In its first statement since, the Pokémon Company said it would take "appropriate action" if it found its copyright had been <code>breached</code>. The boss of Palworld maker Pocketpair has said the game passed legal checks before release. Palworld quickly earned the nickname "Pokémon with guns" when its first <code>trailer</code> was unveiled in 2021. Like the popular Nintendo franchise, it also centres around collecting dozens of strange <code>creatures</code> with different abilities.</p>]]></summary>
    <content type="html"><![CDATA[<p>The Pokémon Company says it plans to investigate <code>copycat</code> claims against online multiplayer <code>sensation</code> Palworld. Fans have been pointing out similarities after the new title exploded in popularity this week. In its first statement since, the Pokémon Company said it would take "appropriate action" if it found its copyright had been <code>breached</code>. The boss of Palworld maker Pocketpair has said the game passed legal checks before release. Palworld quickly earned the nickname "Pokémon with guns" when its first <code>trailer</code> was unveiled in 2021. Like the popular Nintendo franchise, it also centres around collecting dozens of strange <code>creatures</code> with different abilities.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>copycat 模仿者；抄袭者</p>
<p>sensation 感觉；感官</p>
<p>breach 违背；破坏（同break）</p>
<p>trailer 拖车；预告片</p>
<p>first trailer 首支预告片</p>
<p>creature 生物；动物</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-29T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Alabama executes a man with nitrogen gas, the first time the new method has been used</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401290601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401290601.html"/>
    <updated>2024-10-09T02:08:51.870Z</updated>
    <summary type="html"><![CDATA[<p>Alabama executed a <code>convicted</code> murderer with <code>nitrogen</code> gas Thursday, putting him to death with a first-of-its-kind method that once again placed the U.S. at the forefront of the debate over capital punishment. The state said the method would be <code>humane</code>, but critics called it <code>cruel</code> and <code>experimental</code>. Officials said Kenneth Eugene Smith, 58, was <code>pronounced</code> dead at 8:25 p.m. at an Alabama prison after breathing pure nitrogen gas through a face mask to cause oxygen <code>deprivation</code>. It marked the first time that a new execution method has been used in the United States since <code>lethal</code> injection, now the most commonly used method, was introduced in 1982.</p>]]></summary>
    <content type="html"><![CDATA[<p>Alabama executed a <code>convicted</code> murderer with <code>nitrogen</code> gas Thursday, putting him to death with a first-of-its-kind method that once again placed the U.S. at the forefront of the debate over capital punishment. The state said the method would be <code>humane</code>, but critics called it <code>cruel</code> and <code>experimental</code>. Officials said Kenneth Eugene Smith, 58, was <code>pronounced</code> dead at 8:25 p.m. at an Alabama prison after breathing pure nitrogen gas through a face mask to cause oxygen <code>deprivation</code>. It marked the first time that a new execution method has been used in the United States since <code>lethal</code> injection, now the most commonly used method, was introduced in 1982.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>convict 罪犯；vt. 宣告有罪</p>
<p>nitrogen 氮气</p>
<p>oxygen 氧气</p>
<p>humane 有人情味的；人道的</p>
<p>cruel 残忍的（crud- crude 粗糙的；天然的）</p>
<p>experimental 实验的</p>
<p>pronounce 宣告；发音（pronunciation 发音）</p>
<p>deprivation 剥夺；免职</p>
<p>deprive 剥夺</p>
<p>lethal 致命的</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-28T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Tutu skirt takes centre stage in Paris as Chanel channels ballet trend</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401281901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401281901.html"/>
    <updated>2024-10-09T02:08:51.871Z</updated>
    <summary type="html"><![CDATA[<p>Paris fashion has spoken: get ready for the year of the <code>tutu</code> skirt. Chanel has thrown its <code>might</code> behind 2024’s first breakout look, with <code>tulle</code> dancers’ skirts the stars of <code>the haute couture catwalk</code>. Days after the tutu worn by Sarah Jessica Parker in the title sequence of Sex and the City sold for $52,000 in Los Angeles – <code>outstripping</code> the estimate of $8,000-$12,000 expected by auction house Julien’s – Chanel has confirmed ballet as fashion’s new obsession.</p>]]></summary>
    <content type="html"><![CDATA[<p>Paris fashion has spoken: get ready for the year of the <code>tutu</code> skirt. Chanel has thrown its <code>might</code> behind 2024’s first breakout look, with <code>tulle</code> dancers’ skirts the stars of <code>the haute couture catwalk</code>. Days after the tutu worn by Sarah Jessica Parker in the title sequence of Sex and the City sold for $52,000 in Los Angeles – <code>outstripping</code> the estimate of $8,000-$12,000 expected by auction house Julien’s – Chanel has confirmed ballet as fashion’s new obsession.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>tutu 芭蕾舞裙</p>
<p>tulle 薄纱</p>
<p>might 力量；权利</p>
<p>the haute couture catwalk 高级定制T台时装</p>
<ul>
<li>"haute"：法语，意为高级</li>
<li>"couture"：法语，意为定制（通常指高级定制时装）</li>
<li>"catwalk"：步道，T型台，特指时装表演的舞台</li>
</ul>
<p>days after xxx 几天前xxx</p>
<p>the title sequence 片头序列</p>
<p>outstrip 追过；胜过（strip 脱衣舞；剥夺；长条）</p>
<p>obsession 困扰；痴迷</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-28T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">World’s first IVF rhino pregnancy &amp;quot;could save northern white species&amp;quot;</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401280601.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401280601.html"/>
    <updated>2024-10-09T02:08:51.871Z</updated>
    <summary type="html"><![CDATA[<p>The world’s first <code>pregnancy</code> in a <code>rhinoceros</code> through IVF could save the most endangered species on the planet, scientists hope. Northern white rhinos are functionally <code>extinct</code>, with just two females remaining after the last male died in 2018. Now in a major breakthrough an international group of scientists and <code>conservationists</code> has successfully transferred an embryo into a southern white rhino surrogate. Although the mother named Curra died within a few months of <code>conception</code> it marks a proof of concept which opens the door to transferring northern white rhino embryos.</p>]]></summary>
    <content type="html"><![CDATA[<p>The world’s first <code>pregnancy</code> in a <code>rhinoceros</code> through IVF could save the most endangered species on the planet, scientists hope. Northern white rhinos are functionally <code>extinct</code>, with just two females remaining after the last male died in 2018. Now in a major breakthrough an international group of scientists and <code>conservationists</code> has successfully transferred an embryo into a southern white rhino surrogate. Although the mother named Curra died within a few months of <code>conception</code> it marks a proof of concept which opens the door to transferring northern white rhino embryos.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>pregnant 怀孕的</p>
<p>pregnancy 怀孕</p>
<p>rhinoceros 犀牛</p>
<p>rhino 犀牛；现金💰</p>
<p>extinct 灭绝</p>
<p>conservationist 保护主义者</p>
<p>conception 概念；还有受孕的意思</p>
<p>conception 强调的是受精过程的开始阶段，而 pregnancy 则是涵盖了整个怀孕过程，从受精卵着床到分娩</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T22:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Dog with six legs has operation to remove extra limbs</title>
    <id>https://blog.ruizhou.cf/english/everyday/2024/01/2401271901.html</id>
    <link href="https://blog.ruizhou.cf/english/everyday/2024/01/2401271901.html"/>
    <updated>2024-10-09T02:08:51.872Z</updated>
    <summary type="html"><![CDATA[<p>Ariel, the six-legged dog found <code>dumped</code> in a supermarket car park, has had <code>surgery</code> to remove her extra <code>limbs</code>. The 11-week-old spaniel hit the headlines after being abandoned outside a Pembrokeshire branch of B&amp;M in September. About £15,000 was raised by well-wishers all over the world, enabling her to have a life-changing operation. Surgeon Aaron Lutchman managed to save all four of her working limbs after fears one might have to be <code>amputated</code>. "She's doing really well, she's <code>bounced</code> back and she's a happy little dog and we're hoping she's going to go on to lead a <code>fabulous</code> little life," said Mr Lutchman.</p>]]></summary>
    <content type="html"><![CDATA[<p>Ariel, the six-legged dog found <code>dumped</code> in a supermarket car park, has had <code>surgery</code> to remove her extra <code>limbs</code>. The 11-week-old spaniel hit the headlines after being abandoned outside a Pembrokeshire branch of B&amp;M in September. About £15,000 was raised by well-wishers all over the world, enabling her to have a life-changing operation. Surgeon Aaron Lutchman managed to save all four of her working limbs after fears one might have to be <code>amputated</code>. "She's doing really well, she's <code>bounced</code> back and she's a happy little dog and we're hoping she's going to go on to lead a <code>fabulous</code> little life," said Mr Lutchman.</p>
<div class="hint-container tip">
<p class="hint-container-title">tips</p>
<p>hit the headlines 上头条</p>
<p>dump 丢弃；倾倒</p>
<p>limb 肢体</p>
<p>branch 分支；支流；分店；分部</p>
<p>amputate 切断；截肢</p>
<p>bounce 弹跳</p>
<p>bounce back 恢复过来</p>
<p>fabulous 难以置信的；传说的</p>
</div>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T11:01:00.000Z</published>
  </entry>
  <entry>
    <title type="text">AI</title>
    <id>https://blog.ruizhou.cf/ai/</id>
    <link href="https://blog.ruizhou.cf/ai/"/>
    <updated>2024-10-09T02:08:51.872Z</updated>
    <summary type="html"><![CDATA[<p>AI 领域</p>
<h2>Stable Diffusion</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p><strong>Stable Diffusion</strong> is a <a href="https://en.wikipedia.org/wiki/Deep_learning" target="_blank" rel="noopener noreferrer">deep learning</a>, <a href="https://en.wikipedia.org/wiki/Text-to-image_model" target="_blank" rel="noopener noreferrer">text-to-image model</a> released in 2022. It is primarily used to generate detailed images conditioned on text descriptions, though it can also be applied to other tasks such as <a href="https://en.wikipedia.org/wiki/Inpainting" target="_blank" rel="noopener noreferrer">inpainting</a>, outpainting, and generating image-to-image translations guided by a <a href="https://en.wikipedia.org/wiki/Prompt_engineering" target="_blank" rel="noopener noreferrer">text prompt</a>.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-:0-3" target="_blank" rel="noopener noreferrer">3</a> It was developed by the start-up Stability AI in collaboration with a number of academic researchers and non-profit organizations.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-stable-diffusion-launch-4" target="_blank" rel="noopener noreferrer">4</a></p>
<p>Stable Diffusion is a <a href="https://en.wikipedia.org/wiki/Latent_variable_model" target="_blank" rel="noopener noreferrer">latent</a> <a href="https://en.wikipedia.org/wiki/Diffusion_model" target="_blank" rel="noopener noreferrer">diffusion model</a>, a kind of deep generative <a href="https://en.wikipedia.org/wiki/Neural_network" target="_blank" rel="noopener noreferrer">neural network</a>. Its code and model weights have been released <a href="https://en.wikipedia.org/wiki/Source-available_software" target="_blank" rel="noopener noreferrer">publicly</a>,<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-stable-diffusion-github-5" target="_blank" rel="noopener noreferrer">5</a> and it can run on most consumer hardware equipped with a modest <a href="https://en.wikipedia.org/wiki/Graphics_processing_unit" target="_blank" rel="noopener noreferrer">GPU</a> with at least 8 GB <a href="https://en.wikipedia.org/wiki/Video_random_access_memory" target="_blank" rel="noopener noreferrer">VRAM</a>. This marked a departure from previous proprietary text-to-image models such as <a href="https://en.wikipedia.org/wiki/DALL-E" target="_blank" rel="noopener noreferrer">DALL-E</a> and <a href="https://en.wikipedia.org/wiki/Midjourney" target="_blank" rel="noopener noreferrer">Midjourney</a> which were accessible only via <a href="https://en.wikipedia.org/wiki/Cloud_service" target="_blank" rel="noopener noreferrer">cloud services</a>.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-pcworld-6" target="_blank" rel="noopener noreferrer">6</a><a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-verge-7" target="_blank" rel="noopener noreferrer">7</a></p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>AI 领域</p>
<h2>Stable Diffusion</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p><strong>Stable Diffusion</strong> is a <a href="https://en.wikipedia.org/wiki/Deep_learning" target="_blank" rel="noopener noreferrer">deep learning</a>, <a href="https://en.wikipedia.org/wiki/Text-to-image_model" target="_blank" rel="noopener noreferrer">text-to-image model</a> released in 2022. It is primarily used to generate detailed images conditioned on text descriptions, though it can also be applied to other tasks such as <a href="https://en.wikipedia.org/wiki/Inpainting" target="_blank" rel="noopener noreferrer">inpainting</a>, outpainting, and generating image-to-image translations guided by a <a href="https://en.wikipedia.org/wiki/Prompt_engineering" target="_blank" rel="noopener noreferrer">text prompt</a>.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-:0-3" target="_blank" rel="noopener noreferrer">3</a> It was developed by the start-up Stability AI in collaboration with a number of academic researchers and non-profit organizations.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-stable-diffusion-launch-4" target="_blank" rel="noopener noreferrer">4</a></p>
<p>Stable Diffusion is a <a href="https://en.wikipedia.org/wiki/Latent_variable_model" target="_blank" rel="noopener noreferrer">latent</a> <a href="https://en.wikipedia.org/wiki/Diffusion_model" target="_blank" rel="noopener noreferrer">diffusion model</a>, a kind of deep generative <a href="https://en.wikipedia.org/wiki/Neural_network" target="_blank" rel="noopener noreferrer">neural network</a>. Its code and model weights have been released <a href="https://en.wikipedia.org/wiki/Source-available_software" target="_blank" rel="noopener noreferrer">publicly</a>,<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-stable-diffusion-github-5" target="_blank" rel="noopener noreferrer">5</a> and it can run on most consumer hardware equipped with a modest <a href="https://en.wikipedia.org/wiki/Graphics_processing_unit" target="_blank" rel="noopener noreferrer">GPU</a> with at least 8 GB <a href="https://en.wikipedia.org/wiki/Video_random_access_memory" target="_blank" rel="noopener noreferrer">VRAM</a>. This marked a departure from previous proprietary text-to-image models such as <a href="https://en.wikipedia.org/wiki/DALL-E" target="_blank" rel="noopener noreferrer">DALL-E</a> and <a href="https://en.wikipedia.org/wiki/Midjourney" target="_blank" rel="noopener noreferrer">Midjourney</a> which were accessible only via <a href="https://en.wikipedia.org/wiki/Cloud_service" target="_blank" rel="noopener noreferrer">cloud services</a>.<a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-pcworld-6" target="_blank" rel="noopener noreferrer">6</a><a href="https://en.wikipedia.org/wiki/Stable_Diffusion#cite_note-verge-7" target="_blank" rel="noopener noreferrer">7</a></p>
</div>
<ul>
<li><a href="/ai/stable-diffusion/base.html" target="_blank">基础</a></li>
<li><a href="/ai/stable-diffusion/doc.html" target="_blank">文档</a></li>
</ul>
]]></content>
    <category term="ai"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">ruizhou 介绍</title>
    <id>https://blog.ruizhou.cf/about/me.html</id>
    <link href="https://blog.ruizhou.cf/about/me.html"/>
    <updated>2024-10-09T02:08:51.873Z</updated>
    <summary type="html"><![CDATA[<h2>ruizhou 介绍</h2>
<figure><img src="/2233.png" alt="ruizhou" tabindex="0" loading="lazy"><figcaption>ruizhou</figcaption></figure>
<h2>基本信息</h2>
<ul>
<li>blog</li>
<li>英文学校</li>
<li>技术学习</li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<h2>ruizhou 介绍</h2>
<figure><img src="/2233.png" alt="ruizhou" tabindex="0" loading="lazy"><figcaption>ruizhou</figcaption></figure>
<h2>基本信息</h2>
<ul>
<li>blog</li>
<li>英文学校</li>
<li>技术学习</li>
</ul>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">硬件</title>
    <id>https://blog.ruizhou.cf/computer/</id>
    <link href="https://blog.ruizhou.cf/computer/"/>
    <updated>2024-10-09T02:08:51.873Z</updated>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">显卡</title>
    <id>https://blog.ruizhou.cf/computer/graphics-card.html</id>
    <link href="https://blog.ruizhou.cf/computer/graphics-card.html"/>
    <updated>2024-10-09T02:08:51.874Z</updated>
    <summary type="html"><![CDATA[<p>nvidia 有八大合作厂商：微星，华硕，技嘉，七彩虹，影驰，耕升，蓝宝石，铭瑄</p>
<table>
<thead>
<tr>
<th>品牌/定位</th>
<th>信仰</th>
<th>旗舰</th>
<th>次旗舰</th>
<th>高端</th>
<th>低端</th>
<th>丐中丐</th>
</tr>
</thead>
<tbody>
<tr>
<td>微星</td>
<td>闪电</td>
<td>超龙</td>
<td>魔龙 3X</td>
<td>魔龙 2X</td>
<td>万图师</td>
<td>-</td>
</tr>
<tr>
<td>技嘉</td>
<td>水雕</td>
<td>大雕</td>
<td>小雕/超级雕</td>
<td>雪鹰/魔鹰</td>
<td>猎鹰</td>
<td>-</td>
</tr>
<tr>
<td>华硕</td>
<td>骇客</td>
<td>ROG 猛禽</td>
<td>猛禽</td>
<td>TUF 电竞特工</td>
<td>巨齿鲨</td>
<td>-</td>
</tr>
<tr>
<td>七彩虹</td>
<td>九段</td>
<td>火神 X OC</td>
<td>水神</td>
<td>AD OC /ultra</td>
<td>战斧</td>
<td>网驰</td>
</tr>
<tr>
<td>影弛</td>
<td>HOF 名人堂限量版</td>
<td>HOF 名人堂</td>
<td>-</td>
<td>星耀</td>
<td>积木/大将</td>
<td>将系列</td>
</tr>
<tr>
<td>索泰</td>
<td>极光</td>
<td>PGF</td>
<td>AMP</td>
<td>天启</td>
<td>GAMING</td>
<td>毁灭者</td>
</tr>
<tr>
<td>耕升</td>
<td>-</td>
<td>炫光</td>
<td>-</td>
<td>星极</td>
<td>-</td>
<td>追风</td>
</tr>
<tr>
<td>铭瑄</td>
<td>-</td>
<td>MGG(new)</td>
<td>电竞</td>
<td>终结者</td>
<td>巨无霸</td>
<td>-</td>
</tr>
<tr>
<td>映众</td>
<td>-</td>
<td>冰龙寒霜</td>
<td>超级冰龙</td>
<td>黑金</td>
<td>电竞至尊</td>
<td>-</td>
</tr>
<tr>
<td>蓝宝石(A 卡)</td>
<td>毒药</td>
<td>超白金</td>
<td>白金</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>]]></summary>
    <content type="html"><![CDATA[<p>nvidia 有八大合作厂商：微星，华硕，技嘉，七彩虹，影驰，耕升，蓝宝石，铭瑄</p>
<p>| 品牌/定位    | 信仰             | 旗舰       | 次旗舰      | 高端         | 低端      | 丐中丐 |
|</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">水冷</title>
    <id>https://blog.ruizhou.cf/computer/liquid-cooler.html</id>
    <link href="https://blog.ruizhou.cf/computer/liquid-cooler.html"/>
    <updated>2024-10-09T02:08:51.875Z</updated>
    <summary type="html"><![CDATA[<h2>非 360 水冷</h2>
<p>压住游戏，但是超频就压不住</p>
<p>利民 FC140</p>
<p>猫头鹰 D15（非常大）</p>
<h2>360 水冷</h2>
<h3>经济</h3>
<p>利民冰封幻境 360</p>
<h3>风扇好点，质保时间长点，静音效果好些</h3>
<p>瓦尔基里 GL360</p>
<p>利民冰封雅境 360</p>
<h3>升级</h3>
<p>利民冰封聚境 360</p>
<p>瓦尔基里 E360（小屏幕）</p>
<p>雅浚 GA5</p>
<h3>高端</h3>
<p>恩杰 X73</p>
<p>恩杰 Z73</p>
<p>ROG 飞龙二代 360</p>]]></summary>
    <content type="html"><![CDATA[<h2>非 360 水冷</h2>
<p>压住游戏，但是超频就压不住</p>
<p>利民 FC140</p>
<p>猫头鹰 D15（非常大）</p>
<h2>360 水冷</h2>
<h3>经济</h3>
<p>利民冰封幻境 360</p>
<h3>风扇好点，质保时间长点，静音效果好些</h3>
<p>瓦尔基里 GL360</p>
<p>利民冰封雅境 360</p>
<h3>升级</h3>
<p>利民冰封聚境 360</p>
<p>瓦尔基里 E360（小屏幕）</p>
<p>雅浚 GA5</p>
<h3>高端</h3>
<p>恩杰 X73</p>
<p>恩杰 Z73</p>
<p>ROG 飞龙二代 360</p>
<p>ROG 龙神二代 360</p>
<h3>旗舰</h3>
<p>ROG 龙王三代 360（新技术）</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">内存</title>
    <id>https://blog.ruizhou.cf/computer/memory.html</id>
    <link href="https://blog.ruizhou.cf/computer/memory.html"/>
    <updated>2024-10-09T02:08:51.876Z</updated>
    <summary type="html"><![CDATA[<h2>D4</h2>
<h3>经济</h3>
<p><strong>时序，颗粒一般，不能超频</strong></p>
<p>海盗船 复仇者</p>
<p>威刚 XPG</p>
<p>金士顿 野兽</p>
<h3>RGP</h3>
<p>芝奇幻光戟</p>
<p>芝奇皇家戟</p>
<p>科赋雷霆 BOLT</p>
<p>影驰星耀</p>
<p>威刚龙耀 D50</p>
<p>海盗船 PRO 灯条</p>
<p>金百达（新）</p>
<h3>旗舰</h3>
<p>影驰名人堂 HOF EXTREME</p>
<p>宏基掠夺者 Vesta 炫光星舰</p>
<h2>D5</h2>
<p>一定要选择 5600MHz 以上的</p>]]></summary>
    <content type="html"><![CDATA[<h2>D4</h2>
<h3>经济</h3>
<p><strong>时序，颗粒一般，不能超频</strong></p>
<p>海盗船 复仇者</p>
<p>威刚 XPG</p>
<p>金士顿 野兽</p>
<h3>RGP</h3>
<p>芝奇幻光戟</p>
<p>芝奇皇家戟</p>
<p>科赋雷霆 BOLT</p>
<p>影驰星耀</p>
<p>威刚龙耀 D50</p>
<p>海盗船 PRO 灯条</p>
<p>金百达（新）</p>
<h3>旗舰</h3>
<p>影驰名人堂 HOF EXTREME</p>
<p>宏基掠夺者 Vesta 炫光星舰</p>
<h2>D5</h2>
<p>一定要选择 5600MHz 以上的</p>
<p>5200 一般都是镁光的颗粒，5600-6000 很多是三星 b-die 颗粒，再往上海力士颗粒</p>
<p>芝奇幻锋戟（包含全部，5600，6000，7000，8000；C30 6000 以下的都是三星 b-die 颗粒，以上是海力士 A-die 颗粒）</p>
<p>海盗船 铂金统治者</p>
<p>威刚 XPG（性价比，没有特挑颗粒）</p>
<p>宏基掠夺者 Vesta2 炫光星舰</p>
<p>金百达</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">主板</title>
    <id>https://blog.ruizhou.cf/computer/motherboard.html</id>
    <link href="https://blog.ruizhou.cf/computer/motherboard.html"/>
    <updated>2024-10-09T02:08:51.876Z</updated>
    <summary type="html"><![CDATA[<h2>经济型</h2>
<p>华硕 TUF GAMING B760M-PLUS</p>
<p>微星 MAG B760M MORTAR 迫击炮</p>
<p>华硕 760-G 小吹雪</p>
<h2>Z690</h2>
<p>华硕 Z690-P</p>
<p>微星 Z690-A</p>
<h2>2000 档位</h2>
<p>华硕 Z690 吹雪</p>
<p>华硕 TUF Z690-PLUS</p>
<p>微星 MPG Z690 刀锋 TI</p>
<h2>790</h2>
<p>内存支持比 690 更加优秀</p>
<h3>入门级</h3>
<p>华硕 PRIME Z790-P</p>
<p>微星 PRO Z790-P</p>]]></summary>
    <content type="html"><![CDATA[<h2>经济型</h2>
<p>华硕 TUF GAMING B760M-PLUS</p>
<p>微星 MAG B760M MORTAR 迫击炮</p>
<p>华硕 760-G 小吹雪</p>
<h2>Z690</h2>
<p>华硕 Z690-P</p>
<p>微星 Z690-A</p>
<h2>2000 档位</h2>
<p>华硕 Z690 吹雪</p>
<p>华硕 TUF Z690-PLUS</p>
<p>微星 MPG Z690 刀锋 TI</p>
<h2>790</h2>
<p>内存支持比 690 更加优秀</p>
<h3>入门级</h3>
<p>华硕 PRIME Z790-P</p>
<p>微星 PRO Z790-P</p>
<p>小主机：华硕 PRIME Z790M-PLUS</p>
<h3>高级</h3>
<p>微星 MPG Z790 EDGE 刀锋</p>
<p>华硕 TUF GAMING Z790-PLUS</p>
<p>ROG STRIX Z790-A GAMING 吹雪</p>
<h2>纯 D5 高端主板</h2>
<p>ROG STRIX Z790-E GAMING</p>
<p>ROG STRIX Z790-F GAMING</p>
<p>微星 MPG Z790 CARBON 暗黑</p>
<h2>旗舰</h2>
<h3>纯血 ROG</h3>
<p>ROG MAXIMUS Z790 HERO</p>
<p>ROG MAXIMUS Z790 APEX</p>
<p>ROG MAXIMUS Z790 EXTREME</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">电源</title>
    <id>https://blog.ruizhou.cf/computer/power.html</id>
    <link href="https://blog.ruizhou.cf/computer/power.html"/>
    <updated>2024-10-09T02:08:51.877Z</updated>
    <summary type="html"><![CDATA[<h2>一线大牌</h2>
<p>上千打底</p>
<p>海韵 挣华 华硕 海盗船（下坡路，买 MX 系列） 台达</p>
<h3>次点</h3>
<p>长城（噪音略大）</p>
<p>航嘉</p>
<h2>高端</h2>
<p>微星（乔威代工）</p>
<p>威刚（乔威代工）</p>
<p>追风者（号称海韵代工）</p>
<p>安钛克（号称海韵代工）</p>
<h2>一般</h2>
<p>全汉（出过批次问题，跌下神坛）</p>
<h2>往下</h2>
<p>酷冷至尊 SFX 系列</p>
<p>九州风神</p>
<h2>便宜</h2>
<p>骨伽</p>
<p>艾湃电竞</p>
<p>TT</p>]]></summary>
    <content type="html"><![CDATA[<h2>一线大牌</h2>
<p>上千打底</p>
<p>海韵 挣华 华硕 海盗船（下坡路，买 MX 系列） 台达</p>
<h3>次点</h3>
<p>长城（噪音略大）</p>
<p>航嘉</p>
<h2>高端</h2>
<p>微星（乔威代工）</p>
<p>威刚（乔威代工）</p>
<p>追风者（号称海韵代工）</p>
<p>安钛克（号称海韵代工）</p>
<h2>一般</h2>
<p>全汉（出过批次问题，跌下神坛）</p>
<h2>往下</h2>
<p>酷冷至尊 SFX 系列</p>
<p>九州风神</p>
<h2>便宜</h2>
<p>骨伽</p>
<p>艾湃电竞</p>
<p>TT</p>
<p>金河田（主打低端）</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">硬盘</title>
    <id>https://blog.ruizhou.cf/computer/ssd.html</id>
    <link href="https://blog.ruizhou.cf/computer/ssd.html"/>
    <updated>2024-10-09T02:08:51.878Z</updated>
    <summary type="html"><![CDATA[<h2>经济</h2>
<p>威刚 GAMMIX S11 PCIE3</p>
<p>影驰星耀 X4 无缓存 PCIE4</p>
<p>金士顿 NV2 无缓存 PCIE4</p>
<h2>主流</h2>
<p>三星 PM9A1 PCIE4</p>
<p>西数 WD SN770 无缓存 PCIE4</p>
<p>金士顿 KC3000 无缓存 PCIE4</p>
<p>影驰 HOF PRO PCIE4</p>
<h2>旗舰</h2>
<p>980PRO</p>
<p>西数 WD SN850</p>
<p>影驰名人堂 HOF EXTREME</p>
<p>宏基 GM7000</p>
<h2>天花板</h2>]]></summary>
    <content type="html"><![CDATA[<h2>经济</h2>
<p>威刚 GAMMIX S11 PCIE3</p>
<p>影驰星耀 X4 无缓存 PCIE4</p>
<p>金士顿 NV2 无缓存 PCIE4</p>
<h2>主流</h2>
<p>三星 PM9A1 PCIE4</p>
<p>西数 WD SN770 无缓存 PCIE4</p>
<p>金士顿 KC3000 无缓存 PCIE4</p>
<p>影驰 HOF PRO PCIE4</p>
<h2>旗舰</h2>
<p>980PRO</p>
<p>西数 WD SN850</p>
<p>影驰名人堂 HOF EXTREME</p>
<p>宏基 GM7000</p>
<h2>天花板</h2>
<p>三星 990 PRO</p>
]]></content>
    <category term="硬件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">英文学习</title>
    <id>https://blog.ruizhou.cf/english/</id>
    <link href="https://blog.ruizhou.cf/english/"/>
    <updated>2024-10-09T02:08:51.878Z</updated>
    <summary type="html"><![CDATA[<p>英文学习日记</p>
<h2>语法</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p>常用语法，属于技巧类型</p>
</div>
<ul>
<li><a href="/english/grammar.html" target="_blank">语法</a></li>
</ul>
<h2>词汇</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p>词汇时英文学习的基础，需要下功夫</p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>英文学习日记</p>
<h2>语法</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p>常用语法，属于技巧类型</p>
</div>
<ul>
<li><a href="/english/grammar.html" target="_blank">语法</a></li>
</ul>
<h2>词汇</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p>词汇时英文学习的基础，需要下功夫</p>
</div>
<ul>
<li><a href="/english/vocabulary/high-frequency-vocabulary.html" target="_blank">高频词汇</a></li>
<li><a href="/english/vocabulary/root.html" target="_blank">词根词缀</a></li>
</ul>
<h2>每日英语</h2>
<div class="hint-container tip">
<p class="hint-container-title">介绍</p>
<p>每天阅读日常期刊英文读物，是非常必要的，可以验证和复习所学所得</p>
</div>
<ul>
<li><a href="/english/everyday/" target="_blank">点击前往</a></li>
</ul>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">语法</title>
    <id>https://blog.ruizhou.cf/english/grammar.html</id>
    <link href="https://blog.ruizhou.cf/english/grammar.html"/>
    <updated>2024-10-09T02:08:51.879Z</updated>
    <summary type="html"><![CDATA[<h2>简单语法</h2>
<p>这是简单的几种语法</p>
]]></summary>
    <content type="html"><![CDATA[<h2>简单语法</h2>
<p>这是简单的几种语法</p>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">软件教程</title>
    <id>https://blog.ruizhou.cf/software/</id>
    <link href="https://blog.ruizhou.cf/software/"/>
    <updated>2024-10-09T02:08:51.898Z</updated>
    <summary type="html"><![CDATA[<h2>代码编辑器</h2>
<ul>
<li><a href="/software/editor.html" target="_blank">编辑器介绍</a></li>
</ul>
<h2>团队协作</h2>
<p>开发项目的代码版本管理以及多人协作使用 Git 软件</p>
<ul>
<li>
<p><a href="/software/git/" target="_blank">Git 教程</a></p>
</li>
<li>
<p><a href="/code/github/" target="_blank">GitHub 介绍</a></p>
</li>
</ul>
<h2>浏览器</h2>]]></summary>
    <content type="html"><![CDATA[<h2>代码编辑器</h2>
<ul>
<li><a href="/software/editor.html" target="_blank">编辑器介绍</a></li>
</ul>
<h2>团队协作</h2>
<p>开发项目的代码版本管理以及多人协作使用 Git 软件</p>
<ul>
<li>
<p><a href="/software/git/" target="_blank">Git 教程</a></p>
</li>
<li>
<p><a href="/code/github/" target="_blank">GitHub 介绍</a></p>
</li>
</ul>
<h2>浏览器</h2>
<p>在开发中，调试网页推荐使用 Chrome。</p>
<ul>
<li><a href="/software/chrome.html" target="_blank">Chrome 介绍</a></li>
</ul>
<h2>后端</h2>
<h3>Http Server</h3>
<p>网站已经停止使用 Apache Lounge 编译的 httpd Apache。目前迁移到更加轻量，并发性能更好的 Nginx 上。</p>
<ul>
<li>
<p><a href="/software/apache.html" target="_blank">Apache</a> </p>
</li>
<li>
<p><a href="/software/nginx.html" target="_blank">Nginx</a></p>
</li>
</ul>
<h3>抓包与 API 调试</h3>
<ul>
<li><a href="/software/postman.html" target="_blank">Postman</a></li>
</ul>
<h2>工具软件</h2>
<ul>
<li><a href="/software/tool/" target="_blank">查看详情</a></li>
</ul>
<h2>手机 APP</h2>
<h3>soloLearn</h3>
<p>一个代码在线学习社区，只有英文版。由于代码语义贴近英文原生逻辑，十分建议在编辑代码时 “think in English”。</p>
<p>软件中的 code playground 可以在线运行大部分代码，大家在手机上就可以进行练习与尝试。</p>
<h2>Adobe 软件</h2>
<p>Adobe 全系软件的获取，请见 <a href="https://www.weibo.com/vposy" target="_blank" rel="noopener noreferrer">VPosy 的微博</a> 的置顶帖。</p>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">代码编辑器</title>
    <id>https://blog.ruizhou.cf/software/editor.html</id>
    <link href="https://blog.ruizhou.cf/software/editor.html"/>
    <updated>2024-10-09T02:08:51.900Z</updated>
    <summary type="html"><![CDATA[<ul>
<li>
<p><a href="/software/vscode/" target="_blank">VS Code</a></p>
<p>VS Code 的全称是 Visual Studio Code，是一款开源的、免费的、跨平台的、高性能的、轻量级的代码编辑器。它在性能、语言支持、开源社区方面，都做的很不错。</p>
<p>VS Code 具有最大的编辑器社区，插件是所有编辑器里最全的。可以通过安装扩展实现几乎所有的功能，但扩展设置界面对新手不够友好，适合有一定经验的开发者。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>推荐使用轻量的 Visual Studio Code。</p>
</div>
</li>
<li>
<p>其他代码编辑器</p>
<p>在不同领域的开发者可能会偏向不同种类的开发工具。下面列举其他常见的代码编辑器。</p>
<ul>
<li>WebStorm 是专业的 web 开发工具，提供格式化、代码补全等选项。</li>
<li>PhpStorm 是专业的 php 开发工具，提供格式化、代码补全等选项。</li>
<li><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener noreferrer">notepad++</a></li>
<li><a href="https://atom.io/" target="_blank" rel="noopener noreferrer">atom</a></li>
<li><a href="https://www.sublimetext.com/3" target="_blank" rel="noopener noreferrer">sublime text</a></li>
</ul>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<ul>
<li>
<p><a href="/software/vscode/" target="_blank">VS Code</a></p>
<p>VS Code 的全称是 Visual Studio Code，是一款开源的、免费的、跨平台的、高性能的、轻量级的代码编辑器。它在性能、语言支持、开源社区方面，都做的很不错。</p>
<p>VS Code 具有最大的编辑器社区，插件是所有编辑器里最全的。可以通过安装扩展实现几乎所有的功能，但扩展设置界面对新手不够友好，适合有一定经验的开发者。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>推荐使用轻量的 Visual Studio Code。</p>
</div>
</li>
<li>
<p>其他代码编辑器</p>
<p>在不同领域的开发者可能会偏向不同种类的开发工具。下面列举其他常见的代码编辑器。</p>
<ul>
<li>WebStorm 是专业的 web 开发工具，提供格式化、代码补全等选项。</li>
<li>PhpStorm 是专业的 php 开发工具，提供格式化、代码补全等选项。</li>
<li><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener noreferrer">notepad++</a></li>
<li><a href="https://atom.io/" target="_blank" rel="noopener noreferrer">atom</a></li>
<li><a href="https://www.sublimetext.com/3" target="_blank" rel="noopener noreferrer">sublime text</a></li>
</ul>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">IDE 与编辑器</p>
<p>IDE 和编辑器是有区别的:</p>
<ul>
<li>
<p>IDE: 对代码会有较好的智能提示，同时侧重于工程项目，对项目的开发、调试工作有较好的图像化界面的支持，因此比较笨重。比如 Eclipse 的定位就是 IDE。</p>
</li>
<li>
<p>编辑器: 要相对轻量许多，侧重于文本的编辑。比如 Sublime Text 的定位就是编辑器。再比如 Windows 系统自带的「记事本」就是最简单的编辑器。</p>
</li>
</ul>
<p>需要注意的是，VS Code 的定位是编辑器，而非 IDE。但 VS Code 又比一般的编辑器的功能要丰富许多。</p>
</div>
]]></content>
    <category term="软件"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Postman</title>
    <id>https://blog.ruizhou.cf/software/postman.html</id>
    <link href="https://blog.ruizhou.cf/software/postman.html"/>
    <updated>2024-10-09T02:08:51.901Z</updated>
    <summary type="html"><![CDATA[
<p>Postman 是一个强大的抓包与网络调试工具。</p>
]]></summary>
    <content type="html"><![CDATA[
<p>Postman 是一个强大的抓包与网络调试工具。</p>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">技术</title>
    <id>https://blog.ruizhou.cf/tech/</id>
    <link href="https://blog.ruizhou.cf/tech/"/>
    <updated>2024-10-09T02:08:51.901Z</updated>
    <summary type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="/tech/go/" target="_blank">golang</a></li>
<li><a href="/tech/yaml/" target="_blank">yaml</a></li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="/tech/go/" target="_blank">golang</a></li>
<li><a href="/tech/yaml/" target="_blank">yaml</a></li>
</ul>
]]></content>
    <category term="技术"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">基础</title>
    <id>https://blog.ruizhou.cf/ai/stable-diffusion/base.html</id>
    <link href="https://blog.ruizhou.cf/ai/stable-diffusion/base.html"/>
    <updated>2024-10-09T02:08:51.901Z</updated>
    <summary type="html"><![CDATA[<h2>资料</h2>
<p>https://space.bilibili.com/1640056/video</p>
<p>https://space.bilibili.com/250989068/video</p>
<p>https://space.bilibili.com/435304165/video</p>
<h2>后缀</h2>
<ol>
<li>ckpt</li>
<li>pt</li>
<li>pth</li>
<li>safetensors</li>
<li>webui 特殊模型保存方法：PNG、WEBP 图片格式</li>
</ol>
<h3>大模型</h3>
<p>常见格式为 <strong>ckpt</strong>，一个字，大。</p>]]></summary>
    <content type="html"><![CDATA[<h2>资料</h2>
<p>https://space.bilibili.com/1640056/video</p>
<p>https://space.bilibili.com/250989068/video</p>
<p>https://space.bilibili.com/435304165/video</p>
<h2>后缀</h2>
<ol>
<li>ckpt</li>
<li>pt</li>
<li>pth</li>
<li>safetensors</li>
<li>webui 特殊模型保存方法：PNG、WEBP 图片格式</li>
</ol>
<h3>大模型</h3>
<p>常见格式为 <strong>ckpt</strong>，一个字，大。</p>
<p>大小在 GB 级别，常见有 2G、4G、7G 模型。</p>
<p>在 models/stable-diffsuion/</p>
<h3>小模型</h3>
<h4>embedding 模型</h4>
<p>常见格式为 <strong>pt</strong>、png 图片、webp 图片。大小一般在 KB 级别。</p>
<p>在 embeddings/</p>
<p>可训练：画风 √ 人物 √ | 推荐训练：<strong>人物</strong></p>
<p>配置要求：显存 6GB 以上。</p>
<p>训练速度：中等 | 训练难度：中等</p>
<p>综合评价：☆☆☆</p>
<p>评价：比较基础的一种，局限性较大，但是可以用</p>
<h4>hypernetwork</h4>
<p>常见格式为 <strong>pt</strong>。大小一般在几十兆到几百兆不等。由于这种模型可以自定义的参数非常之多，一些离谱的 Hypernetwork 模型可以达到 GB 级别。</p>
<p>在 hypernetworks/</p>
<p>可训练：画风 √ 人物 √ | 推荐训练：<strong>画风</strong></p>
<p>配置要求：显存 6GB 以上。</p>
<p>训练速度：中等 | 训练难度：难</p>
<p>综合评价：☆☆</p>
<p>评价：非常强大的一种模型，但是想训练好很难，不推荐训练。</p>
<h4>LoRA</h4>
<p>常见格式为 <strong>pt</strong>、<strong>ckpt</strong>。大小一般在 8mb~144mb 不等。</p>
<p>在 models/lora/</p>
<p>可训练：画风? 人物 √ 概念 √ | 推荐训练：<strong>人物</strong></p>
<p>配置要求：显存 8GB 以上。</p>
<p>训练速度：快 | 训练难度：简单</p>
<p>综合评价：☆☆☆☆</p>
<p>评价：非常好训练 好出效果的人物训练，配置要求低，图要求少。</p>
<p>备注：LoRA 本身也应该归类到 Dreambooth，但是这里还是分开讲。</p>
<h4>VAE 模型</h4>
<p>常见格式为 <strong>pt</strong></p>
<p>在 models/VAE/</p>
<h4>Dreambooth / Native Train</h4>
<p>可训练：画风 √ 人物 √ 概念 √ | 推荐训练：Dreambooth 推荐人物，Native Train 推荐画风</p>
<p>配置要求：显存 12GB 以上。</p>
<p>训练速度：慢 | 训练难度：可以简单可以很难</p>
<p>综合评价：☆☆☆☆☆</p>
<p>评价：微调大模型，非常强大的训练方式，但是使用上会不那么灵活，推荐训练画风用，人物使用 LoRA 训练。</p>
<h2>训练</h2>
<p>image _ repeat _ epoch / batch_size = total steps</p>
<p>10 张图 _ 20 次 _ 10 个循环 / 2 并行 = 1000 总训练步数</p>
<p>batch_size 和显存大小有关</p>
<p>两者乘积固定的时候，repeat 比 epoch 会更加化时间</p>
<p>20 * 5 = 100，花费 51min</p>
<p>100 * 1 = 100，花费 90min</p>
<p>多 epoch 方案的拟合性更好</p>
<p>![repeat vs epoch](./assets/repeat vs epoch.png)</p>
<p>![lr vs lr](./assets/lr vs lr.png)</p>
<h3>学习率</h3>
<figure><figcaption>lr</figcaption></figure>
<h3>DIM</h3>
<p>表示神经网络的维度，维度越大，模型的表达能力越强，模型的体积也会越大。</p>
<p>network_dimension</p>
<ul>
<li>128，140MB+（现实世界实物，风景，人物 &gt;128）</li>
<li>64，70MB+（人物 32-128）</li>
<li>32，40MB+（二次元）</li>
</ul>
<h3>Optimizer</h3>
<p>AdamW8bit</p>
<p>Dadptation</p>
<p>Lion</p>
<h2>参数建议</h2>
<figure><figcaption>recommend</figcaption></figure>
<h3>案例</h3>
<figure><figcaption>case1</figcaption></figure>
<figure><figcaption>case2</figcaption></figure>
<figure><figcaption>case3</figcaption></figure>
<h3>tag</h3>
<p>期望固化的模型特征，不要打 tag，这样使用中就生存固定特征了，而不会被改变</p>
]]></content>
    <category term="ai"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">文档资料</title>
    <id>https://blog.ruizhou.cf/ai/stable-diffusion/doc.html</id>
    <link href="https://blog.ruizhou.cf/ai/stable-diffusion/doc.html"/>
    <updated>2024-10-09T02:08:51.903Z</updated>
    <summary type="html"><![CDATA[<p>https://lilianweng.github.io/posts/2021-07-11-diffusion-models/</p>
]]></summary>
    <content type="html"><![CDATA[<p>https://lilianweng.github.io/posts/2021-07-11-diffusion-models/</p>
]]></content>
    <category term="ai"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text"></title>
    <id>https://blog.ruizhou.cf/english/news/chaos.html</id>
    <link href="https://blog.ruizhou.cf/english/news/chaos.html"/>
    <updated>2024-10-09T02:08:51.903Z</updated>
    <summary type="html"><![CDATA[<h2>Transcript</h2>
<p>[Rob] Good afternoon, everyone. How you doing? (audience members whoop) That's what I like to hear. It is my honor to welcome you to NFX 303, better known as, The Evolution of Chaos Engineering at Netflix. My name is Rob Hilton, and I'm a Principal Solutions Architect supporting Netflix as a customer.And basically what that means is, I've spent roughly the last four years of my life learning from, and collaborating with all of Netflix's best and brightest engineers, including my friend right over here to my right, Ales Plsek, who's gonna tell you a little bit more about resilience. Netflix is well known as being an innovator in a wide array of different tech spaces.One of the arguably most compelling of those is their contributions to application resilience. Now, that's a huge and widely varying topic, but one of the magic words in that space that's been coined by Netflix, and one of the ones that brings us all together today, is that magic word, chaos. But technology spaces evolve constantly.As Ales knows, one year is roughly 10 years in tech speak. So given the fact that chaos engineering was coined by Netflix over a decade ago, one wonders how they've continued to evolve in that space today. And with that, give it up for Ales, so we can all find out. (audience applauds) - Hi, thank you. Thank you for joining us for The Evolution of Chaos Engineering at Netflix.My name is Ales Plsek. I'm a Senior Software Engineer at Netflix. I'm part of the Resilience Team, and I lead our chaos engineering efforts in this space. And today, I will hopefully be your favorite historian, because we'll be talking for the next hour about history, and evolution of chaos engineering.And there is a lot to talk about. Chaos engineering has been alive for more than a decade. In software engineering years, that's more than 100. So let's get into it, we have a century to cover. First, I would like to talk about the history of chaos engineering at Netflix. We'll talk about some of the turning points and technologies that we've built over the years, and that will hopefully illustrate how our thinking about this discipline has evolved over these years.And then, I would like to show you how the chaos experimentation looks like at Netflix today. And finally, we'll talk about how chaos engineering has grown beyond the scope of its original goal, and how it transformed many phases of our software development lifecycle. And how it impacts the lives of not only SREs or chaos engineers, or resilience engineers, but any software engineer at our company.And it would not be a Netflix presentation without screenshots of some of my colleague software engineers who are hard at work. So let's start with this brief history of chaos. So your Netflix experience, as you may probably know, is largely composed of two large technologies. One, is the cloud, made out of these little instances, and then there's the Open Connect CDNs that we own.And those are running and storing all the video bits that are served to your device when you click play. Once you click play, we call it a stream start. That stream start, we keep number of those, and that we call SPS, Stream Start Per Second. That is the key metric that we monitor. Here is a beautiful vintage graph from our Atlas monitoring system showing how SPS is changing day by day.And focusing on the cloud itself, that one is made of these little tiny instances, and as we all know, they can be quite finicky. They can come and go as they want, they can be impacted by failures, and it's just something that we need to learn to accept. That's kind of this cycle of life, or something like that.And so, when Netflix moved its services into the cloud, there was a need to make sure that the streaming experience is not impacted by these little instances going down or failing. And that's why, originally, we have built Chaos Monkey. Chaos Monkey was used to test the resilience of our streaming infrastructure towards the failures of individual nodes.And the tool would randomly pick a couple of instances in the data center, and would start shutting them down on a pretty fine schedule. And early on in this chaos journey, it was a very simple, yet very effective approach. It helped our services to build in that resiliency towards the nodes failing down. And although it's a very crude tool, it has become a synonym of chaos engineering for many years.In chaos engineering terminology, we can categorize the treatment that Chaos Monkey is serving as a failure. And we say that, that failure is scope to an individual instance. And as you will see, we'll be using this terminology throughout this talk. Today, Chaos Monkey is still used at Netflix, but the value it provides is minimal.The services have simply moved on. They are resilient toward failures of individual nodes. And so we don't really see much benefit of running Chaos Monkey today in the data center. The use of that tool has declined, but it's also because our backend architecture is a lot more complex than just a set of instances.Speaking of which, here can see a visualization of our cloud architecture. (audience members chuckle) And for those of you taking notes, I will pause this for a minute. And here's another, kind of a bird's view of that same diagram. But if we really simplified it, what we have here is, our members and their devices on the right side talking to our Netflix cloud data center, sending the request to our Netflix cloud data center.These requests are entering the cloud through the edge gateway. And then they start propagating through these layers of microservices or applications, or services as we call them, and here represented as individual graphs, individual nodes of that graph. So taking this architecture into account, we wanted to be more resilient than just at the level of individual nodes.Moreover, in 2014, Netflix experienced an outage, a service responsible for managing the subscriber information was experiencing some internal errors. And although this service is very important for the business, for the company, because it's managing the subscriber or it's managing the signup of the new users.It's managing whenever you want to create or modify a profile. It's not really critical for the streaming experience. It's not really demanding that their service needs to be up, because you as a authenticated device, you should still be able to stream your favorite TV show. Yet during this outage, our members were not able to stream their favorite shows.And what happened was that the service was in trouble, and was correctly serving the fallbacks. But the colors of these fallbacks, the colors of the service were not able to process these fallbacks correct correctly. Because this outage never happened before, there was never any time to kind of test that the fallbacks are being properly processed in the layers above this service.And so the streaming architecture was not really resilient towards these failures of an uncritical service, and that's why we had a failure. So we realized that we needed to simulate these kind of scenarios, and we needed to be able to inject failures into the services themselves. And that is why we built FIT.FIT is our Failure Injection Technology. And it allows us to achieve that precision of failure injection. So for any given service in our infrastructure, FIT allows us to define injection points. And those are the points where we will be able to inject these failures. We support many different types of injection points.We have, for example, injection points for the IPC libraries. That's when you when talk through gRPC or REST, or GraphQL. To honor the service, we are able to inject failures either on a server side or client side of the communication. We have database library injection points where you can inject failures into the call that is trying to retrieve a certain data point from your Cassandra key space, and so on.We have injection points for caches or Kafka, S3 buckets and so on. Also, FIT allows us to define the treatment that we wanna inject in that injection point. The treatment will be set by that injection point, and it can be of many different types. Right now we are recognizing the failure. We can either serve the failure delay or both.Both meaning that for that request impacted into the injection point, we would first delay the request, and then we would fail it as well. And then there's the scope. The scope is used to define which injection point's gonna get triggered. So far we have seen scoping to instances, and now we are also able to scope to clusters.And then a scenario. Scenario is a blueprint of are chaos experiment. It defines a set of injection points, set of treatments, and the scope. So, excuse me. So it exactly defines what is gonna happen during that chaos experiment. And finally, if the scenario is a blueprint, the session is a running scenario for that given FIT scenario.And let me show you how that works in practice. So we can create a scenario affecting integration communication between service A and service B. And we can be more precise than that. We can say that injection point is gonna be a gRPC client talking to service B, and we'll scope this to cluster A, and we'll still serve the treatment, which will be the failure.And as you can see, in terms of precision, comparing to Chaos Monkey, that is much better. And this enable us to do game days. During such a day, a team owning a service would gather in a room, they would create a FIT scenario and then they would launch it, and then they would observe how their service is behaving.They would look at the errors for that service, other system metrics, errors in services that are calling their service, and so on. They would also be looking at the SPS graph. And that way, they would be able to emulate a certain outage or certain failures. And we use the game day technique to validate that the subscriber fallback would be properly handled by the clients.We use the game technique, so we created a FIT scenario where the gRPC client, the injection point would be a gRPC client talking to the subscriber. We would scope that to the playback service, which is the service that's handling our streaming functionality. And we would inject the failures. And using this FIT session, we were able to trigger the fallbacks and validate that these fallbacks are either properly or not properly handled.And that way we could file tickets and those issues will be addressed by the engineers. So using that FIT session, we were able to make sure that, that 2014 subscriber outage would never occur again. And game days actually represent another phase of chaos engineering after the Chaos Monkey. But as you can imagine, it is an evolution in a right step direction, but it requires lots of amount of effort and time from many people to sit in that room and manually monitor what is happening with your system.And this is still quite a crude approach because here we are failing all the requests between a service A and service B. And so we decided to increase or improve our scoping ability even more. And to do that we used a request context technology or as we call it, CRR, and let me explain how that works. So for a single request, as you probably know, the single request is composed of headers and a body.And CRR allows us to attach custom tags to every header, every request that we are seeing in our infrastructure. And that way we will be able to mark a certain request with the FIT failures. And as this request is propagating through our services and microservices, this request context information is passed through.And as the request is going through every individual injection point, that injection point will always be able to inspect the headers and see whether that injection point should get triggered for that particular request. And that way we can precisely mark a given request to fail for a certain FIT scenario. So we have dramatically improved our scoping ability going from instance, cluster, to a request.It doesn't get more granular than that. And so we have built FIT filter, and incorporated it into our edge gateway. So FIT filter will actually do this tagging for us. Whenever we see a request we wanna tag, the FIT filter will attach these headers to the request, and then the request is propagating through our infrastructure.Here's another example that we have. If we revisit the scenario, but we wanna fail only those requests coming from this simple, single device. So we still define injection point as gRPC client talking to service B, but in the scope, not only we say the cluster A, but also we define that only the requests coming from the customer ID of this particular customer ID, of this particular device will get the the treatment, which will be the failure.And as these requests are traveling from the device through the edge gateway where they are marked with the FIT tags, these FIT tags get propagated through the infrastructure, and only those requests that are tagged and actually reach that injection point of a gRPC client to service B from cluster A, those will fail.And this is scoped a single device only, only that one device is impacted. And as simple as it is, this was a turning point in our chaos engineering, because it enabled our software developers to just create these FIT sessions and apply chaos testing directly on their own devices. And they would be able to see firsthand how every particular FIT scenario is impacting the customer.And we build this into a simple product, it's called FIT. So we have a UI where any software engineer that company can go create, or select where they want to inject the failure, which scenario they wanna use. And then they would also scope that session to a particular customer id. And once they launch this FIT session, they can see whether it is actually affecting the user experience.And this really proved to be groundbreaking, for the first time ever, the Netflix engineer would be able to go and experiment with chaos without requiring assistance of a chaos engineer or resilience engineer. And they would be able to configure this FIT session, and within seconds they would see if there is an impact or not.One of the examples where this was used very recently was when we were launching this new double thumbs up feature. So we let our users rate any different content that they watched with thumbs down, thumbs up, or double thumbs up. And so, by the way, if you're gonna be using your rating session for this talk, you can use double thumbs up as well, before I forget.So when we launched this feature, this feature is served by the rating service. And again, it's not really a feature that is critical to our streaming experience. It doesn't matter whether you're able to retrieve whatever your rating was for that given content, or whether you are able to set it correctly, you should still be able to press play and the content should start.And so it's really a non-critical feature. And so to validate that, the developer themselves who was launching this feature, was able to create a FIT scenario where they would be injecting failures to the ratings service from the playback session, again, for their certain device. And that way, again, they would be able to validate that there was zero SPS impact.There was zero SPS impact to their device, and that way they can extrapolate that there will be no SPS impact to our members. And that's why they were able to launch the feature safely and correctly. Now, if there was an impact, since for every FIT session that we are running, we are also recording all the traces.So this is a very useful information, because you'll be able to see where the failure was injected, how the system reacted, which fallbacks were triggered, how this failure was returned to callers, and where this experience actually broke. Because many times, the fallback is handled correctly by the immediate color, but as this fallback is propagated back to subsequent colors, this whole experience gets broken.So here the software engineers can just go and see what are the traces for this given failure. And the same interaction is available in our prod and test environments. Soon engineers started actually integrating these FIT headers into their smoke tests and integration tests, and that way the FIT become kind of a part of the regular release life cycle.So this was really a turning point. And even now years later, FIT testing is still a very popular method by our engineers, especially when something breaks, they can very quickly and easily go create a FIT session and see for themselves, kind of like reproduce that back on their own device. So this drum particularly reduces also the lead time to debugging any issue.Around the same time, a different technology was making its debut. So we have realized, as you can see on this footage of one of our engineers deploying to production without any safeguards, (audience members chuckle) that it can be relatively risky or stressful experience. So how do we provide safe methods of deployment without adding extra barriers that would slow the innovation, because Netflix engineers are making hundreds of changes to production every day? So in the face of these overwhelming odds, we were left with only one option.We decided to use science. So that is why we took the randomized control experiment and we applied it to their risking our deployments. It is a very popular experiment design. Let's say you are developing a new drug, and you wanna see what is the effect of the drug. So you take a population of people, users, and let's say, a hundred thousand people, and you split them randomly into two groups, the treatment group, and the control group.And then the treatment group will get the treatment, while the control group gets the placebo or nothing. And then you let the experiment run for a while, and then you follow and collect results. And once you are comparing the results, since these groups were randomly assigned, there should be no bias. And any effect or difference between the results of these two groups can be safely associated to the impact of that treatment that you applied.So we took this approach and we applied it to our infrastructure, and that's why we created this canary strategy, or started using the canary strategy. So when running a canary for a certain service, service A, it means that we set up two additional clusters for that service, baseline cluster and canary cluster.And then these clusters register to take some small and random portion of the traffic in production. And then we observe how these two clusters behave against each other. So we look at system metrics and we evaluate how the system is doing comparing the baseline and canary signals. And this is a very simple, yet very effective technique, and it has become defacto deployment, and deployment standard of practice in the industry.So it was only natural that we decided to marry these two technologies, canary strategy and FIT. So we still created a canary experiment, but also we would create a FIT session for that canary experiment. So that way we would still have the injection point for the gRPC client talking to service B, but the scope would be updated to only affect the cluster, A-canary, that's the canary cluster that we set up.And then we would still be injecting the failure. And that way as the experiment is running, we would be comparing how the canary cluster is behaving in terms of system metrics, error counters, in comparison to the baseline. So this was already our first kind of venture into a large scale chaos experimentation, but automated chaos experimentation, because here we would be able to automatically measure and compare the signals from the baseline and canary clusters.And this was very well, this was a very successful avenue or approach. And canary's in general provide tremendous value to our company. But if you look at the canary itself, you realize that this approach does not tell the complete story. While this approach is very relatively low risk and easy to set up, it does not explicitly tell us what is the member experiencing, what are the member devices experiencing? Because we are focusing only on service level metrics.We look at these two clusters, maybe look at client-side service metrics, but that's all. In reality, servers may be happily serving requests, yet our members may not be able to stream. Let me illustrate it on these two examples. First problem that we can see here is that the request that goes to the canary cluster will fail.And since these requests are randomly assigned to clusters, when we do the retry, randomly, that request can go to the baseline cluster, and succeed. So that will mask this problem that is happening associated with the canary cluster. And the service owner may not even realize that there's something wrong happening because these requests are non-sticky, and they kind of are bouncing back from the canary to the baseline and succeeding.So we may not spot this problem until we actually deploy to production. Second example that we have is, the request succeeds going back from the canary cluster, and it is correctly processed by the caller. But then as this request is then becoming part of the results for the upstream dependencies, it may actually cause a problem to our member device, and fail there.And we would never know because we are looking only at the canary reports for those two clusters. So therefore, we needed a solution that would give us the ability to directly measure member impact. And so to solve the retry problem of the request, we extended our FIT filter, and we added a new type of a header, we added a FIT override header, and that way we would be able to explicitly tell for every request where it's supposed to go.We say that we make the the request sticky, let me show you how that works. So when the requests are being assigned in our edge gateway to a canary or based on population, they get the tag. They get the tag, either they are canary or they are a baseline request. And then as these tags are again propagating through our infrastructure, once they reach the point where they are supposed to go to service A, the VIP override, the override in the tag will kick in and will direct the request either to a canary cluster or a baseline cluster.And even if that request fails and comes back to the client call and retries, the overrides again will kick in and send a request back to the canary cluster. So this is really locking or sticking the request to its population, and to its cluster. So it's creating this strong signal because the request is locked in into this experience for the entire duration of the experiment, and we can clearly see whether it's being impacted.A second improvement we've made was related to the way how we assign requests and members, or users to our experiment. So we extended again our FIT filter with a user allocation algorithm. And that way the user allocation algorithm is implemented as a consistent hashing function. And that way, each time we see a request from a member device, we are able to hash the request into the range.Here on this example, we are assigning 1% of the request to the canary population, 1% to the baseline population. And the rest is just not affected by the experiment. So that way for each request, we can see from which device it came from, and that way we hash the device ID and we get where into the range it is belonging.If it's a canary or a baseline request. And that way we can always consistently look at the request and determine whether it was in the experiment or not. And this is the first step to actually know which devices were in that experiment, and somehow the first step that would enable us to compute that effect of the experiment on these two populations of users.Speaking about measuring and monitoring, running these experiments may not always go as expected, as illustrated here by our chaos engineers from the Umbrella Academy project. That is why we really needed a good monitoring solution. So at Netflix we've been always using our Atlas monitoring system. That is a really good system that is monitoring the system metrics of all our backend services and nodes, and infrastructure.But we have also built a different monitoring system that is more focused on the member experience. Here, if we zoom only on this part of our infrastructure, we are seeing the customer devices, the gateway, and the first tier of services. So we started collecting logs from the devices. And these logs would be describing to us what is exactly happening on the device.So indeed, they would be sent along with the regular requests through our infrastructure to the Zuul gateway, where they would be redirected to our queue processing infrastructure. And these log events would be for example, representing events such as stream start, whenever the device started streaming the content, or stream start error whenever the device attempted to stream and failed, or app crashes and so on.All these events are being collected in real time by our events infrastructure. And similarly, our first year services also collect these member specific events. For example, stream start, again, per each member. And those stream start represent the state for every member as we see it from our backend infrastructure.So that way, collectively these two sources of events collect the full picture about what is happening for any particular device or member device. And since we are sending these requests to our real time queues, we can further process them in real time. So that's why we implemented this experiment monitoring system that only look at these events.So we have constructed this event-based monitoring system. So here we are collecting all the events coming from the devices and from the first tier services, and we filter them down because we have that user allocation algorithm that can help us to filter down only to those events that are coming from the devices in the experiment.So we filter them down, and we do two things with them. First, we push them into elastic search. So later on we can debug to see what was happening for any particular device, but also we turn them into counters, and that way we can monitor these signals in real time. For example, here we have been running an experiment, and this graph represents all the events happening on the devices that led to an SPS error on the client side.And as these events are pushed to our infrastructure and turned into the counters, we can see that the number of events happening for our canary population was larger than the baseline population. You can see there's always some noise where there's always some errors happening in both populations, but as long as there is no deviation, we let the experiment run.But as soon as we detect there is a deviation, there is an increase in canary population errors, we terminate the experiment earlier. And so what is important here to realize is that the signal we are looking at only represents the errors happening on the devices in the experiment. So that is a major difference between this event-based monitoring system, and the generic monitoring systems that we've been using at Netflix.And this data has per second resolution. So as the experiment's progressing, we are looking at these baseline canary population signals that are along many dimensions. For example, we are looking at the SPS errors or SPS access events on both server and client side. And since the experiment is sticky, are not only the requests, but also the users are locked into the experiment for better or worse.So if they're experiencing any kind of pain, they are locked in that experiment. We usually run experiments for 20, 40 minutes to collect enough data so that we can evaluate, get that confidence that the experiment is not, or the change is not impacting our SPS. But we are monitoring the data with per second granularity, because for 40 minutes that user cannot escape the experiment.And that's why each time there's a deviation, we are able to detect that, and within seconds we are able to shut down that experiment. And that brings us to where we are today. From a simple Chaos Monkey, to game days, to that single user FIT session, to an automated chaos experiments. So we got to the point where we can final execute, save, and precise and autonomous chaos experiments.So let's review what were all the technologies that we needed to get here. So in our FIT filter, we are annotating the requests with the proper tags, then our CRR request routing technology lets us route the request where we need them. And then we are using canary strategy, and the FIT scoping and FIT treatment to actually scope the treatment only to the canary cluster.And finally, we are using the user allocation algorithm to assign members to the experiment, and also to filter out the events so that we can monitor how the devices are doing. And all of this is orchestrated by our chaos experimentation platform. And today, so we built this into a tool called CHAP. So today, any software engineer can go in the tool, set up an experiment, pick a certain FIT scenario, and run this experiment randomly in production on a random set of actual production users and see whether there is an impact.And if there is an impact, the experiment's terminated early and the user can then investigate. So what would previously take numerous hours and numerous people sitting in a game day room for all day, can now be done automatically in a couple of minutes. Here we can see we've been running a subscriber experiment for that same outage that happened years ago.So now we are able to run that experiment monthly, and see what is the impact to our members. And if there is any impact, the experiment will shut down as you can see here, within a couple of minutes. And then service owners can go and investigate. And so we have built this, what we believe is an amazing tool that runs chaos experiments.But in doing so, we have discovered something more. We have developed a tool that can precisely measure impact of a failure in a software on our members. But not only that, we can measure impact of any software change on our members. It allows us to measure the butterfly effect of a software change somewhere deep in the infrastructure, on a certain little service, directly on our members.And we can quantify what is the butterfly effect of that change. And we call this a sticky canary, or a sticky experiment. And our engineers quickly noticed. So they have realized that when they run a sticky canary, it is the only way how can they be absolutely sure that there is no negative impact to SPS, to our members, whenever they wanna push a new change or new software change.So over the past decade, in search of this perfect chaos experiment that would only benefit this narrow group of engineers, we have evolved into a tool that can redefine how we measure and deploy all the different changes into our production. And as a result of perfecting chaos, we have developed this precision and safety when manipulating our infrastructure.And chaos has become just one of many tools that we are using in our tool box. And so from chaos experiments we have moved on to infrastructure experimentation. And so this is the term that we use that when we are running these experiments. And over the years we have identified many use cases where infrastructure experimentation can be applied.Let me walk you through some of them. So first, it's the sticky experiment. That's the base experiment that we use to measure effect of a software change. And in this scenario, the treatment is actually a change. Change can be a code change, a property change running on a new instance type, and you can still measure how that impacts our members.Then chaos just becomes one different type of a sticky experiment where the change we are validating is that, that fault injection in that cluster is not impacting our members. And then we have the unscoped chaos. So this is an interesting application of an unscoped experiment where we are actually not scoping the failures or the experimentation to any particular cluster.Excuse me. So, we are still annotating, or we are still assigning member devices to the population, to the experiment. So we have two groups of devices, we have the canary and baseline members, and we still tag their requests with canary or baseline tags, but we do not scope to a single cluster. Instead, we still wanna inject to our gRPC client injection points talking to service B.Which means that as these requests are propagating through the infrastructure, whenever they reach such an injection point and they wanna talk to service B, the error will be injected, and those requests will fail. And that way we can real nicely simulate, for example, scenario where the whole service is experiencing the whole data center wide outage, and it just becomes unavailable for any system call, from wherever it's being called.So this way we can simulate these outages, and we can validate and quickly determine that a certain service is either critical or non-critical to our streaming experience. Last year I've been running this with a user, with our software engineer, and we've been running an unscoped chaos on a simple database, and the owner of the database said, "this is not a critical path, it's gonna be great." And couple of minutes later, a different engineer comes running into the room saying that "Bandersnatch is broken, because we've broken that interactive experience in the Bandersnatch episodes." And that way how we have realized this service is actually critical, and we need to treat it differently.Another type of an experiment that we have here, is a data experiment. Here we have extended the way how the number of treatments that we can serve. In this case the treatment we are serving is the new data file. And what is happening here is that when the canary cluster is trying to access a certain data object, they will be served, for example, a new version of the data object that we are currently canarying.So that is the change that is happening, and that we can measure how that new data object is actually impacting our devices. And then there's the squeeze. Squeeze is another interesting experiment type, because here we are still using the canary strategy, but we have also used that ability that we can precisely control how much traffic we send to every cluster.So as the squeeze experiment is running, it is our kind of a performance evolution tool or experiment where we are increasing how many requests there goes into the canary cluster. And we do that in well-defined steps, where we are every five minutes, we bump up the number of requests that go to the cluster, and then we can still see how that cluster is behaving comparing to the baseline.And that is a very popular expert type because we can look at different performance characteristics of the service. We can tune, concurrence, limit or threat pools. We can for example also tune how your service is behaving when you give it a different number or different container resources. And you can also define or determine what is your max throughput for the given service.And that is valuable information when you do autoscaling or failovers, and cost resizing. So that is also very popular. And then we have the priority load-shedding experiment, which is another type where we actually take the experimentation discipline, and we are not experimenting on anything that is happening in our data center, but we have extended the injection point family with a new injection point, which is the edge.And that way we can serve different treatments in that edge layer. And here we've been able to run experiments that are validating our load-shedding algorithms. We assign users to the experiment, and those that are coming from the canary population, those requests, if they are lower priority requests, then they're throttled, but higher priority requests are still getting through.And that way we can see where that experience is impacting our members. And here's an animation that shows the priority load-shedding in action. It was captured by one of our engineers. Again, they run a FIT session on their device, and they were able to verify that even though the errors are happening for low priority requests and they're not able to fetch some of the information for the content, when they click play, they're still able to initiate that streaming session.Another new avenue that we opened was the orchestration of chaos experiments outside of our backend infrastructure. So if you remember those little open connect boxes that are storing in our catalog. So we started injecting chaos into those, and we were still able to measure how that affects our member experience.And we are for example, still verify that if that single box goes down, the devices can still reconnect through a different box or directly to our data center in AWS. So that way we've been able to exercise fall backs that were happening completely outside of our data center. So as you can see, there's many different types of experiments we have designed over the years, and it's a very modular approach.And when we create these new experiments, the only thing that is changing are these three parameters, treatment, allocation, and scope. And we can mix and match them. And you can see that it's a very modular approach that lets us create many different experiment types and FIT scenarios. So as you can see, for treatments we usually serve changes, failures or data changes.For allocation, we usually have sticky or non-sticky. And for scope, we either scope the experiment to a certain cluster, or we don't scope it at all. And every time our resilience team is approached in designing a new experiment, we are usually able to satisfy those requests by just designing an experiment type that is varying these three parameters.And then the experiment is still able to profit from all that real time monitoring and safety that we have built into the experimentation. Now a few words about adopting chaos engineering at your organizations. So introducing or building chaos engineering at your infrastructure, or that introducing that practice is a journey.It takes time, but no matter where you are on this journey and your where your company is, there's still that one next step that you can take. So, for example, if you feel like you could be affected by individual nodes going down, you can try the Chaos Monkey approach. You can either use Chaos Monkey that is open sourced, or you can shut down instances by yourself.There's a also high chance that by running on Kubernetes, you are probably already resilient toward node failures. And also you could probably use AWS Fault Injection Simulator to simulate these kind of failures. Then the next stage are canaries. I think that is a very good technology by itself that you can use in your organization and really quickly benefit from that technology right away without chaos.We have open source, Spinnaker and Kayenta. So you can really, either there's a canary stage that you can run a canary, and you can use Kayenta to analyze the system metrics. And that way, moving on to a release cycle, where you have the canaries in the pipelines, in the development or deployment workflows, is a great evolution of your organization because you are already measuring signals, comparing baseline and canary signals.So you will develop that muscle that is needed when you want to experiment with chaos. And then tracing is also an important and interesting technology that will bring you forward or closer to where, for example, our chaos experimentation is at Netflix. Because if you are using something like Zipkin, there's a high chance that your headers, request headers are already being propagated through the infrastructure, so that way you would be able to attach custom headers to those requests as well.And finally, fault injection is also something that can be added to the mix. We are as an industry in a much better place than we've been 10 years ago when Netflix was building FIT for the first time. Because with the evolution of service mesh, for example, Envoy is already supporting some kind of basic fault injection technology.And that way for example, the interceptors or site cars are an excellent injection point where you can implement that logic of injecting some kind of a failure or treatment. Also, spring boot fallbacks are already something that is available, and you can experiment fallbacks and make sure that you are actually having those fall backs, because if you don't, there's probably no point in running those chaos experiments in the first place.Going back to the overall discipline of chaos engineering and infrastructure experimentation, I think we can summarize and say that the single chaos engineering role that was originally focusing on just that chaos, has grown and extended our discipline, and we extended the range of experiments that we can run today.And those can be used by many teams in the company. So from that chaos experiment, we actually started running canneries that are run by any service in our infrastructure. Change experiments. Squeezes are usually running monthly to kind of monitor how your performance is doing over time. Unscoped chaos experiments are running quarterly whenever you need to verify that where your service is critical or non-critical, and so on.Data canaries, our priority load-shedding experiments, are also a popular experiment type. So the infrastructure experimentation today exists with that single purpose of enabling our software engineers to innovate as fast as possible, and also without compromising the safety and stability of Netflix. And at Netflix, it's no secret that we want to entertain the world.And as you could see in the stock, accomplishing this involves coordination of many systems that needs to work seamlessly in harmony with each other. But the final product, and delivering those moments of joy to our members makes it all worth it. Thank you very much for attention.</p>]]></summary>
    <content type="html"><![CDATA[<h2>Transcript</h2>
<p>[Rob] Good afternoon, everyone. How you doing? (audience members whoop) That's what I like to hear. It is my honor to welcome you to NFX 303, better known as, The Evolution of Chaos Engineering at Netflix. My name is Rob Hilton, and I'm a Principal Solutions Architect supporting Netflix as a customer.And basically what that means is, I've spent roughly the last four years of my life learning from, and collaborating with all of Netflix's best and brightest engineers, including my friend right over here to my right, Ales Plsek, who's gonna tell you a little bit more about resilience. Netflix is well known as being an innovator in a wide array of different tech spaces.One of the arguably most compelling of those is their contributions to application resilience. Now, that's a huge and widely varying topic, but one of the magic words in that space that's been coined by Netflix, and one of the ones that brings us all together today, is that magic word, chaos. But technology spaces evolve constantly.As Ales knows, one year is roughly 10 years in tech speak. So given the fact that chaos engineering was coined by Netflix over a decade ago, one wonders how they've continued to evolve in that space today. And with that, give it up for Ales, so we can all find out. (audience applauds) - Hi, thank you. Thank you for joining us for The Evolution of Chaos Engineering at Netflix.My name is Ales Plsek. I'm a Senior Software Engineer at Netflix. I'm part of the Resilience Team, and I lead our chaos engineering efforts in this space. And today, I will hopefully be your favorite historian, because we'll be talking for the next hour about history, and evolution of chaos engineering.And there is a lot to talk about. Chaos engineering has been alive for more than a decade. In software engineering years, that's more than 100. So let's get into it, we have a century to cover. First, I would like to talk about the history of chaos engineering at Netflix. We'll talk about some of the turning points and technologies that we've built over the years, and that will hopefully illustrate how our thinking about this discipline has evolved over these years.And then, I would like to show you how the chaos experimentation looks like at Netflix today. And finally, we'll talk about how chaos engineering has grown beyond the scope of its original goal, and how it transformed many phases of our software development lifecycle. And how it impacts the lives of not only SREs or chaos engineers, or resilience engineers, but any software engineer at our company.And it would not be a Netflix presentation without screenshots of some of my colleague software engineers who are hard at work. So let's start with this brief history of chaos. So your Netflix experience, as you may probably know, is largely composed of two large technologies. One, is the cloud, made out of these little instances, and then there's the Open Connect CDNs that we own.And those are running and storing all the video bits that are served to your device when you click play. Once you click play, we call it a stream start. That stream start, we keep number of those, and that we call SPS, Stream Start Per Second. That is the key metric that we monitor. Here is a beautiful vintage graph from our Atlas monitoring system showing how SPS is changing day by day.And focusing on the cloud itself, that one is made of these little tiny instances, and as we all know, they can be quite finicky. They can come and go as they want, they can be impacted by failures, and it's just something that we need to learn to accept. That's kind of this cycle of life, or something like that.And so, when Netflix moved its services into the cloud, there was a need to make sure that the streaming experience is not impacted by these little instances going down or failing. And that's why, originally, we have built Chaos Monkey. Chaos Monkey was used to test the resilience of our streaming infrastructure towards the failures of individual nodes.And the tool would randomly pick a couple of instances in the data center, and would start shutting them down on a pretty fine schedule. And early on in this chaos journey, it was a very simple, yet very effective approach. It helped our services to build in that resiliency towards the nodes failing down. And although it's a very crude tool, it has become a synonym of chaos engineering for many years.In chaos engineering terminology, we can categorize the treatment that Chaos Monkey is serving as a failure. And we say that, that failure is scope to an individual instance. And as you will see, we'll be using this terminology throughout this talk. Today, Chaos Monkey is still used at Netflix, but the value it provides is minimal.The services have simply moved on. They are resilient toward failures of individual nodes. And so we don't really see much benefit of running Chaos Monkey today in the data center. The use of that tool has declined, but it's also because our backend architecture is a lot more complex than just a set of instances.Speaking of which, here can see a visualization of our cloud architecture. (audience members chuckle) And for those of you taking notes, I will pause this for a minute. And here's another, kind of a bird's view of that same diagram. But if we really simplified it, what we have here is, our members and their devices on the right side talking to our Netflix cloud data center, sending the request to our Netflix cloud data center.These requests are entering the cloud through the edge gateway. And then they start propagating through these layers of microservices or applications, or services as we call them, and here represented as individual graphs, individual nodes of that graph. So taking this architecture into account, we wanted to be more resilient than just at the level of individual nodes.Moreover, in 2014, Netflix experienced an outage, a service responsible for managing the subscriber information was experiencing some internal errors. And although this service is very important for the business, for the company, because it's managing the subscriber or it's managing the signup of the new users.It's managing whenever you want to create or modify a profile. It's not really critical for the streaming experience. It's not really demanding that their service needs to be up, because you as a authenticated device, you should still be able to stream your favorite TV show. Yet during this outage, our members were not able to stream their favorite shows.And what happened was that the service was in trouble, and was correctly serving the fallbacks. But the colors of these fallbacks, the colors of the service were not able to process these fallbacks correct correctly. Because this outage never happened before, there was never any time to kind of test that the fallbacks are being properly processed in the layers above this service.And so the streaming architecture was not really resilient towards these failures of an uncritical service, and that's why we had a failure. So we realized that we needed to simulate these kind of scenarios, and we needed to be able to inject failures into the services themselves. And that is why we built FIT.FIT is our Failure Injection Technology. And it allows us to achieve that precision of failure injection. So for any given service in our infrastructure, FIT allows us to define injection points. And those are the points where we will be able to inject these failures. We support many different types of injection points.We have, for example, injection points for the IPC libraries. That's when you when talk through gRPC or REST, or GraphQL. To honor the service, we are able to inject failures either on a server side or client side of the communication. We have database library injection points where you can inject failures into the call that is trying to retrieve a certain data point from your Cassandra key space, and so on.We have injection points for caches or Kafka, S3 buckets and so on. Also, FIT allows us to define the treatment that we wanna inject in that injection point. The treatment will be set by that injection point, and it can be of many different types. Right now we are recognizing the failure. We can either serve the failure delay or both.Both meaning that for that request impacted into the injection point, we would first delay the request, and then we would fail it as well. And then there's the scope. The scope is used to define which injection point's gonna get triggered. So far we have seen scoping to instances, and now we are also able to scope to clusters.And then a scenario. Scenario is a blueprint of are chaos experiment. It defines a set of injection points, set of treatments, and the scope. So, excuse me. So it exactly defines what is gonna happen during that chaos experiment. And finally, if the scenario is a blueprint, the session is a running scenario for that given FIT scenario.And let me show you how that works in practice. So we can create a scenario affecting integration communication between service A and service B. And we can be more precise than that. We can say that injection point is gonna be a gRPC client talking to service B, and we'll scope this to cluster A, and we'll still serve the treatment, which will be the failure.And as you can see, in terms of precision, comparing to Chaos Monkey, that is much better. And this enable us to do game days. During such a day, a team owning a service would gather in a room, they would create a FIT scenario and then they would launch it, and then they would observe how their service is behaving.They would look at the errors for that service, other system metrics, errors in services that are calling their service, and so on. They would also be looking at the SPS graph. And that way, they would be able to emulate a certain outage or certain failures. And we use the game day technique to validate that the subscriber fallback would be properly handled by the clients.We use the game technique, so we created a FIT scenario where the gRPC client, the injection point would be a gRPC client talking to the subscriber. We would scope that to the playback service, which is the service that's handling our streaming functionality. And we would inject the failures. And using this FIT session, we were able to trigger the fallbacks and validate that these fallbacks are either properly or not properly handled.And that way we could file tickets and those issues will be addressed by the engineers. So using that FIT session, we were able to make sure that, that 2014 subscriber outage would never occur again. And game days actually represent another phase of chaos engineering after the Chaos Monkey. But as you can imagine, it is an evolution in a right step direction, but it requires lots of amount of effort and time from many people to sit in that room and manually monitor what is happening with your system.And this is still quite a crude approach because here we are failing all the requests between a service A and service B. And so we decided to increase or improve our scoping ability even more. And to do that we used a request context technology or as we call it, CRR, and let me explain how that works. So for a single request, as you probably know, the single request is composed of headers and a body.And CRR allows us to attach custom tags to every header, every request that we are seeing in our infrastructure. And that way we will be able to mark a certain request with the FIT failures. And as this request is propagating through our services and microservices, this request context information is passed through.And as the request is going through every individual injection point, that injection point will always be able to inspect the headers and see whether that injection point should get triggered for that particular request. And that way we can precisely mark a given request to fail for a certain FIT scenario. So we have dramatically improved our scoping ability going from instance, cluster, to a request.It doesn't get more granular than that. And so we have built FIT filter, and incorporated it into our edge gateway. So FIT filter will actually do this tagging for us. Whenever we see a request we wanna tag, the FIT filter will attach these headers to the request, and then the request is propagating through our infrastructure.Here's another example that we have. If we revisit the scenario, but we wanna fail only those requests coming from this simple, single device. So we still define injection point as gRPC client talking to service B, but in the scope, not only we say the cluster A, but also we define that only the requests coming from the customer ID of this particular customer ID, of this particular device will get the the treatment, which will be the failure.And as these requests are traveling from the device through the edge gateway where they are marked with the FIT tags, these FIT tags get propagated through the infrastructure, and only those requests that are tagged and actually reach that injection point of a gRPC client to service B from cluster A, those will fail.And this is scoped a single device only, only that one device is impacted. And as simple as it is, this was a turning point in our chaos engineering, because it enabled our software developers to just create these FIT sessions and apply chaos testing directly on their own devices. And they would be able to see firsthand how every particular FIT scenario is impacting the customer.And we build this into a simple product, it's called FIT. So we have a UI where any software engineer that company can go create, or select where they want to inject the failure, which scenario they wanna use. And then they would also scope that session to a particular customer id. And once they launch this FIT session, they can see whether it is actually affecting the user experience.And this really proved to be groundbreaking, for the first time ever, the Netflix engineer would be able to go and experiment with chaos without requiring assistance of a chaos engineer or resilience engineer. And they would be able to configure this FIT session, and within seconds they would see if there is an impact or not.One of the examples where this was used very recently was when we were launching this new double thumbs up feature. So we let our users rate any different content that they watched with thumbs down, thumbs up, or double thumbs up. And so, by the way, if you're gonna be using your rating session for this talk, you can use double thumbs up as well, before I forget.So when we launched this feature, this feature is served by the rating service. And again, it's not really a feature that is critical to our streaming experience. It doesn't matter whether you're able to retrieve whatever your rating was for that given content, or whether you are able to set it correctly, you should still be able to press play and the content should start.And so it's really a non-critical feature. And so to validate that, the developer themselves who was launching this feature, was able to create a FIT scenario where they would be injecting failures to the ratings service from the playback session, again, for their certain device. And that way, again, they would be able to validate that there was zero SPS impact.There was zero SPS impact to their device, and that way they can extrapolate that there will be no SPS impact to our members. And that's why they were able to launch the feature safely and correctly. Now, if there was an impact, since for every FIT session that we are running, we are also recording all the traces.So this is a very useful information, because you'll be able to see where the failure was injected, how the system reacted, which fallbacks were triggered, how this failure was returned to callers, and where this experience actually broke. Because many times, the fallback is handled correctly by the immediate color, but as this fallback is propagated back to subsequent colors, this whole experience gets broken.So here the software engineers can just go and see what are the traces for this given failure. And the same interaction is available in our prod and test environments. Soon engineers started actually integrating these FIT headers into their smoke tests and integration tests, and that way the FIT become kind of a part of the regular release life cycle.So this was really a turning point. And even now years later, FIT testing is still a very popular method by our engineers, especially when something breaks, they can very quickly and easily go create a FIT session and see for themselves, kind of like reproduce that back on their own device. So this drum particularly reduces also the lead time to debugging any issue.Around the same time, a different technology was making its debut. So we have realized, as you can see on this footage of one of our engineers deploying to production without any safeguards, (audience members chuckle) that it can be relatively risky or stressful experience. So how do we provide safe methods of deployment without adding extra barriers that would slow the innovation, because Netflix engineers are making hundreds of changes to production every day? So in the face of these overwhelming odds, we were left with only one option.We decided to use science. So that is why we took the randomized control experiment and we applied it to their risking our deployments. It is a very popular experiment design. Let's say you are developing a new drug, and you wanna see what is the effect of the drug. So you take a population of people, users, and let's say, a hundred thousand people, and you split them randomly into two groups, the treatment group, and the control group.And then the treatment group will get the treatment, while the control group gets the placebo or nothing. And then you let the experiment run for a while, and then you follow and collect results. And once you are comparing the results, since these groups were randomly assigned, there should be no bias. And any effect or difference between the results of these two groups can be safely associated to the impact of that treatment that you applied.So we took this approach and we applied it to our infrastructure, and that's why we created this canary strategy, or started using the canary strategy. So when running a canary for a certain service, service A, it means that we set up two additional clusters for that service, baseline cluster and canary cluster.And then these clusters register to take some small and random portion of the traffic in production. And then we observe how these two clusters behave against each other. So we look at system metrics and we evaluate how the system is doing comparing the baseline and canary signals. And this is a very simple, yet very effective technique, and it has become defacto deployment, and deployment standard of practice in the industry.So it was only natural that we decided to marry these two technologies, canary strategy and FIT. So we still created a canary experiment, but also we would create a FIT session for that canary experiment. So that way we would still have the injection point for the gRPC client talking to service B, but the scope would be updated to only affect the cluster, A-canary, that's the canary cluster that we set up.And then we would still be injecting the failure. And that way as the experiment is running, we would be comparing how the canary cluster is behaving in terms of system metrics, error counters, in comparison to the baseline. So this was already our first kind of venture into a large scale chaos experimentation, but automated chaos experimentation, because here we would be able to automatically measure and compare the signals from the baseline and canary clusters.And this was very well, this was a very successful avenue or approach. And canary's in general provide tremendous value to our company. But if you look at the canary itself, you realize that this approach does not tell the complete story. While this approach is very relatively low risk and easy to set up, it does not explicitly tell us what is the member experiencing, what are the member devices experiencing? Because we are focusing only on service level metrics.We look at these two clusters, maybe look at client-side service metrics, but that's all. In reality, servers may be happily serving requests, yet our members may not be able to stream. Let me illustrate it on these two examples. First problem that we can see here is that the request that goes to the canary cluster will fail.And since these requests are randomly assigned to clusters, when we do the retry, randomly, that request can go to the baseline cluster, and succeed. So that will mask this problem that is happening associated with the canary cluster. And the service owner may not even realize that there's something wrong happening because these requests are non-sticky, and they kind of are bouncing back from the canary to the baseline and succeeding.So we may not spot this problem until we actually deploy to production. Second example that we have is, the request succeeds going back from the canary cluster, and it is correctly processed by the caller. But then as this request is then becoming part of the results for the upstream dependencies, it may actually cause a problem to our member device, and fail there.And we would never know because we are looking only at the canary reports for those two clusters. So therefore, we needed a solution that would give us the ability to directly measure member impact. And so to solve the retry problem of the request, we extended our FIT filter, and we added a new type of a header, we added a FIT override header, and that way we would be able to explicitly tell for every request where it's supposed to go.We say that we make the the request sticky, let me show you how that works. So when the requests are being assigned in our edge gateway to a canary or based on population, they get the tag. They get the tag, either they are canary or they are a baseline request. And then as these tags are again propagating through our infrastructure, once they reach the point where they are supposed to go to service A, the VIP override, the override in the tag will kick in and will direct the request either to a canary cluster or a baseline cluster.And even if that request fails and comes back to the client call and retries, the overrides again will kick in and send a request back to the canary cluster. So this is really locking or sticking the request to its population, and to its cluster. So it's creating this strong signal because the request is locked in into this experience for the entire duration of the experiment, and we can clearly see whether it's being impacted.A second improvement we've made was related to the way how we assign requests and members, or users to our experiment. So we extended again our FIT filter with a user allocation algorithm. And that way the user allocation algorithm is implemented as a consistent hashing function. And that way, each time we see a request from a member device, we are able to hash the request into the range.Here on this example, we are assigning 1% of the request to the canary population, 1% to the baseline population. And the rest is just not affected by the experiment. So that way for each request, we can see from which device it came from, and that way we hash the device ID and we get where into the range it is belonging.If it's a canary or a baseline request. And that way we can always consistently look at the request and determine whether it was in the experiment or not. And this is the first step to actually know which devices were in that experiment, and somehow the first step that would enable us to compute that effect of the experiment on these two populations of users.Speaking about measuring and monitoring, running these experiments may not always go as expected, as illustrated here by our chaos engineers from the Umbrella Academy project. That is why we really needed a good monitoring solution. So at Netflix we've been always using our Atlas monitoring system. That is a really good system that is monitoring the system metrics of all our backend services and nodes, and infrastructure.But we have also built a different monitoring system that is more focused on the member experience. Here, if we zoom only on this part of our infrastructure, we are seeing the customer devices, the gateway, and the first tier of services. So we started collecting logs from the devices. And these logs would be describing to us what is exactly happening on the device.So indeed, they would be sent along with the regular requests through our infrastructure to the Zuul gateway, where they would be redirected to our queue processing infrastructure. And these log events would be for example, representing events such as stream start, whenever the device started streaming the content, or stream start error whenever the device attempted to stream and failed, or app crashes and so on.All these events are being collected in real time by our events infrastructure. And similarly, our first year services also collect these member specific events. For example, stream start, again, per each member. And those stream start represent the state for every member as we see it from our backend infrastructure.So that way, collectively these two sources of events collect the full picture about what is happening for any particular device or member device. And since we are sending these requests to our real time queues, we can further process them in real time. So that's why we implemented this experiment monitoring system that only look at these events.So we have constructed this event-based monitoring system. So here we are collecting all the events coming from the devices and from the first tier services, and we filter them down because we have that user allocation algorithm that can help us to filter down only to those events that are coming from the devices in the experiment.So we filter them down, and we do two things with them. First, we push them into elastic search. So later on we can debug to see what was happening for any particular device, but also we turn them into counters, and that way we can monitor these signals in real time. For example, here we have been running an experiment, and this graph represents all the events happening on the devices that led to an SPS error on the client side.And as these events are pushed to our infrastructure and turned into the counters, we can see that the number of events happening for our canary population was larger than the baseline population. You can see there's always some noise where there's always some errors happening in both populations, but as long as there is no deviation, we let the experiment run.But as soon as we detect there is a deviation, there is an increase in canary population errors, we terminate the experiment earlier. And so what is important here to realize is that the signal we are looking at only represents the errors happening on the devices in the experiment. So that is a major difference between this event-based monitoring system, and the generic monitoring systems that we've been using at Netflix.And this data has per second resolution. So as the experiment's progressing, we are looking at these baseline canary population signals that are along many dimensions. For example, we are looking at the SPS errors or SPS access events on both server and client side. And since the experiment is sticky, are not only the requests, but also the users are locked into the experiment for better or worse.So if they're experiencing any kind of pain, they are locked in that experiment. We usually run experiments for 20, 40 minutes to collect enough data so that we can evaluate, get that confidence that the experiment is not, or the change is not impacting our SPS. But we are monitoring the data with per second granularity, because for 40 minutes that user cannot escape the experiment.And that's why each time there's a deviation, we are able to detect that, and within seconds we are able to shut down that experiment. And that brings us to where we are today. From a simple Chaos Monkey, to game days, to that single user FIT session, to an automated chaos experiments. So we got to the point where we can final execute, save, and precise and autonomous chaos experiments.So let's review what were all the technologies that we needed to get here. So in our FIT filter, we are annotating the requests with the proper tags, then our CRR request routing technology lets us route the request where we need them. And then we are using canary strategy, and the FIT scoping and FIT treatment to actually scope the treatment only to the canary cluster.And finally, we are using the user allocation algorithm to assign members to the experiment, and also to filter out the events so that we can monitor how the devices are doing. And all of this is orchestrated by our chaos experimentation platform. And today, so we built this into a tool called CHAP. So today, any software engineer can go in the tool, set up an experiment, pick a certain FIT scenario, and run this experiment randomly in production on a random set of actual production users and see whether there is an impact.And if there is an impact, the experiment's terminated early and the user can then investigate. So what would previously take numerous hours and numerous people sitting in a game day room for all day, can now be done automatically in a couple of minutes. Here we can see we've been running a subscriber experiment for that same outage that happened years ago.So now we are able to run that experiment monthly, and see what is the impact to our members. And if there is any impact, the experiment will shut down as you can see here, within a couple of minutes. And then service owners can go and investigate. And so we have built this, what we believe is an amazing tool that runs chaos experiments.But in doing so, we have discovered something more. We have developed a tool that can precisely measure impact of a failure in a software on our members. But not only that, we can measure impact of any software change on our members. It allows us to measure the butterfly effect of a software change somewhere deep in the infrastructure, on a certain little service, directly on our members.And we can quantify what is the butterfly effect of that change. And we call this a sticky canary, or a sticky experiment. And our engineers quickly noticed. So they have realized that when they run a sticky canary, it is the only way how can they be absolutely sure that there is no negative impact to SPS, to our members, whenever they wanna push a new change or new software change.So over the past decade, in search of this perfect chaos experiment that would only benefit this narrow group of engineers, we have evolved into a tool that can redefine how we measure and deploy all the different changes into our production. And as a result of perfecting chaos, we have developed this precision and safety when manipulating our infrastructure.And chaos has become just one of many tools that we are using in our tool box. And so from chaos experiments we have moved on to infrastructure experimentation. And so this is the term that we use that when we are running these experiments. And over the years we have identified many use cases where infrastructure experimentation can be applied.Let me walk you through some of them. So first, it's the sticky experiment. That's the base experiment that we use to measure effect of a software change. And in this scenario, the treatment is actually a change. Change can be a code change, a property change running on a new instance type, and you can still measure how that impacts our members.Then chaos just becomes one different type of a sticky experiment where the change we are validating is that, that fault injection in that cluster is not impacting our members. And then we have the unscoped chaos. So this is an interesting application of an unscoped experiment where we are actually not scoping the failures or the experimentation to any particular cluster.Excuse me. So, we are still annotating, or we are still assigning member devices to the population, to the experiment. So we have two groups of devices, we have the canary and baseline members, and we still tag their requests with canary or baseline tags, but we do not scope to a single cluster. Instead, we still wanna inject to our gRPC client injection points talking to service B.Which means that as these requests are propagating through the infrastructure, whenever they reach such an injection point and they wanna talk to service B, the error will be injected, and those requests will fail. And that way we can real nicely simulate, for example, scenario where the whole service is experiencing the whole data center wide outage, and it just becomes unavailable for any system call, from wherever it's being called.So this way we can simulate these outages, and we can validate and quickly determine that a certain service is either critical or non-critical to our streaming experience. Last year I've been running this with a user, with our software engineer, and we've been running an unscoped chaos on a simple database, and the owner of the database said, "this is not a critical path, it's gonna be great." And couple of minutes later, a different engineer comes running into the room saying that "Bandersnatch is broken, because we've broken that interactive experience in the Bandersnatch episodes." And that way how we have realized this service is actually critical, and we need to treat it differently.Another type of an experiment that we have here, is a data experiment. Here we have extended the way how the number of treatments that we can serve. In this case the treatment we are serving is the new data file. And what is happening here is that when the canary cluster is trying to access a certain data object, they will be served, for example, a new version of the data object that we are currently canarying.So that is the change that is happening, and that we can measure how that new data object is actually impacting our devices. And then there's the squeeze. Squeeze is another interesting experiment type, because here we are still using the canary strategy, but we have also used that ability that we can precisely control how much traffic we send to every cluster.So as the squeeze experiment is running, it is our kind of a performance evolution tool or experiment where we are increasing how many requests there goes into the canary cluster. And we do that in well-defined steps, where we are every five minutes, we bump up the number of requests that go to the cluster, and then we can still see how that cluster is behaving comparing to the baseline.And that is a very popular expert type because we can look at different performance characteristics of the service. We can tune, concurrence, limit or threat pools. We can for example also tune how your service is behaving when you give it a different number or different container resources. And you can also define or determine what is your max throughput for the given service.And that is valuable information when you do autoscaling or failovers, and cost resizing. So that is also very popular. And then we have the priority load-shedding experiment, which is another type where we actually take the experimentation discipline, and we are not experimenting on anything that is happening in our data center, but we have extended the injection point family with a new injection point, which is the edge.And that way we can serve different treatments in that edge layer. And here we've been able to run experiments that are validating our load-shedding algorithms. We assign users to the experiment, and those that are coming from the canary population, those requests, if they are lower priority requests, then they're throttled, but higher priority requests are still getting through.And that way we can see where that experience is impacting our members. And here's an animation that shows the priority load-shedding in action. It was captured by one of our engineers. Again, they run a FIT session on their device, and they were able to verify that even though the errors are happening for low priority requests and they're not able to fetch some of the information for the content, when they click play, they're still able to initiate that streaming session.Another new avenue that we opened was the orchestration of chaos experiments outside of our backend infrastructure. So if you remember those little open connect boxes that are storing in our catalog. So we started injecting chaos into those, and we were still able to measure how that affects our member experience.And we are for example, still verify that if that single box goes down, the devices can still reconnect through a different box or directly to our data center in AWS. So that way we've been able to exercise fall backs that were happening completely outside of our data center. So as you can see, there's many different types of experiments we have designed over the years, and it's a very modular approach.And when we create these new experiments, the only thing that is changing are these three parameters, treatment, allocation, and scope. And we can mix and match them. And you can see that it's a very modular approach that lets us create many different experiment types and FIT scenarios. So as you can see, for treatments we usually serve changes, failures or data changes.For allocation, we usually have sticky or non-sticky. And for scope, we either scope the experiment to a certain cluster, or we don't scope it at all. And every time our resilience team is approached in designing a new experiment, we are usually able to satisfy those requests by just designing an experiment type that is varying these three parameters.And then the experiment is still able to profit from all that real time monitoring and safety that we have built into the experimentation. Now a few words about adopting chaos engineering at your organizations. So introducing or building chaos engineering at your infrastructure, or that introducing that practice is a journey.It takes time, but no matter where you are on this journey and your where your company is, there's still that one next step that you can take. So, for example, if you feel like you could be affected by individual nodes going down, you can try the Chaos Monkey approach. You can either use Chaos Monkey that is open sourced, or you can shut down instances by yourself.There's a also high chance that by running on Kubernetes, you are probably already resilient toward node failures. And also you could probably use AWS Fault Injection Simulator to simulate these kind of failures. Then the next stage are canaries. I think that is a very good technology by itself that you can use in your organization and really quickly benefit from that technology right away without chaos.We have open source, Spinnaker and Kayenta. So you can really, either there's a canary stage that you can run a canary, and you can use Kayenta to analyze the system metrics. And that way, moving on to a release cycle, where you have the canaries in the pipelines, in the development or deployment workflows, is a great evolution of your organization because you are already measuring signals, comparing baseline and canary signals.So you will develop that muscle that is needed when you want to experiment with chaos. And then tracing is also an important and interesting technology that will bring you forward or closer to where, for example, our chaos experimentation is at Netflix. Because if you are using something like Zipkin, there's a high chance that your headers, request headers are already being propagated through the infrastructure, so that way you would be able to attach custom headers to those requests as well.And finally, fault injection is also something that can be added to the mix. We are as an industry in a much better place than we've been 10 years ago when Netflix was building FIT for the first time. Because with the evolution of service mesh, for example, Envoy is already supporting some kind of basic fault injection technology.And that way for example, the interceptors or site cars are an excellent injection point where you can implement that logic of injecting some kind of a failure or treatment. Also, spring boot fallbacks are already something that is available, and you can experiment fallbacks and make sure that you are actually having those fall backs, because if you don't, there's probably no point in running those chaos experiments in the first place.Going back to the overall discipline of chaos engineering and infrastructure experimentation, I think we can summarize and say that the single chaos engineering role that was originally focusing on just that chaos, has grown and extended our discipline, and we extended the range of experiments that we can run today.And those can be used by many teams in the company. So from that chaos experiment, we actually started running canneries that are run by any service in our infrastructure. Change experiments. Squeezes are usually running monthly to kind of monitor how your performance is doing over time. Unscoped chaos experiments are running quarterly whenever you need to verify that where your service is critical or non-critical, and so on.Data canaries, our priority load-shedding experiments, are also a popular experiment type. So the infrastructure experimentation today exists with that single purpose of enabling our software engineers to innovate as fast as possible, and also without compromising the safety and stability of Netflix. And at Netflix, it's no secret that we want to entertain the world.And as you could see in the stock, accomplishing this involves coordination of many systems that needs to work seamlessly in harmony with each other. But the final product, and delivering those moments of joy to our members makes it all worth it. Thank you very much for attention.</p>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">office copilot</title>
    <id>https://blog.ruizhou.cf/english/news/microsoft-office-copilot.html</id>
    <link href="https://blog.ruizhou.cf/english/news/microsoft-office-copilot.html"/>
    <updated>2024-10-09T02:08:51.928Z</updated>
    <summary type="html"><![CDATA[<h2>video</h2>
]]></summary>
    <content type="html"><![CDATA[<h2>video</h2>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">高频词汇</title>
    <id>https://blog.ruizhou.cf/english/vocabulary/high-frequency-vocabulary.html</id>
    <link href="https://blog.ruizhou.cf/english/vocabulary/high-frequency-vocabulary.html"/>
    <updated>2024-10-09T02:08:51.932Z</updated>
    <summary type="html"><![CDATA[<h2>高频词汇</h2>
<p>枚举很多常用的词汇，短语搭配等</p>
<p>routine 常规；惯例；例行公事</p>
<p>commitment 承诺；投入，奉献；花费；已承诺的事</p>
<p>cast 全体演员；扮演；打石膏；投掷</p>
<h2>词汇</h2>
<h3>rob</h3>
<p>robe：古代抢劫所得的主要掠夺品，robe 长袍和 rob 抢劫，拼写接近，来自日耳曼语，同源，由于古代打劫获得的主要战利品就是敌人身上的衣服，所以 robe 逐渐产生衣服的含义，通常表示高档的礼服，长袍</p>
<p>robber：n. 强盗</p>
<p>robbery：n. 抢劫</p>]]></summary>
    <content type="html"><![CDATA[<h2>高频词汇</h2>
<p>枚举很多常用的词汇，短语搭配等</p>
<p>routine 常规；惯例；例行公事</p>
<p>commitment 承诺；投入，奉献；花费；已承诺的事</p>
<p>cast 全体演员；扮演；打石膏；投掷</p>
<h2>词汇</h2>
<h3>rob</h3>
<p>robe：古代抢劫所得的主要掠夺品，robe 长袍和 rob 抢劫，拼写接近，来自日耳曼语，同源，由于古代打劫获得的主要战利品就是敌人身上的衣服，所以 robe 逐渐产生衣服的含义，通常表示高档的礼服，长袍</p>
<p>robber：n. 强盗</p>
<p>robbery：n. 抢劫</p>
<p>robe：长袍，礼服</p>
<p>bathrobe：浴衣，睡衣</p>
<p>brew：酿造，酝酿</p>
<h3>拟声词</h3>
<p>|                                      |                             |                                                                            |
|</p>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">词根词缀</title>
    <id>https://blog.ruizhou.cf/english/vocabulary/root.html</id>
    <link href="https://blog.ruizhou.cf/english/vocabulary/root.html"/>
    <updated>2024-10-09T02:08:51.935Z</updated>
    <summary type="html"><![CDATA[<h2>常用词根词缀</h2>
<p>枚举很多常用的词根词缀</p>
<h3>agri-，agro-，agr- = field，land，土地，<strong>农业</strong></h3>
<p>agribusiness 农业经营</p>
<p>agriculture 农业</p>
<h3>ag- ar-</h3>
<p>朝，向，去或者弱化为强调；在字母 b，f，g，l，n，p，r，s，t 前同化为 ab-，af-，ag-，al-，an-，ap-，ar-，as-，at-，在 c，k，qu 前同化为 ac-，在 sc，sp，st 前缩写成 a-</p>
<h3>aqua- = water，水</h3>]]></summary>
    <content type="html"><![CDATA[<h2>常用词根词缀</h2>
<p>枚举很多常用的词根词缀</p>
<h3>agri-，agro-，agr- = field，land，土地，<strong>农业</strong></h3>
<p>agribusiness 农业经营</p>
<p>agriculture 农业</p>
<h3>ag- ar-</h3>
<p>朝，向，去或者弱化为强调；在字母 b，f，g，l，n，p，r，s，t 前同化为 ab-，af-，ag-，al-，an-，ap-，ar-，as-，at-，在 c，k，qu 前同化为 ac-，在 sc，sp，st 前缩写成 a-</p>
<h3>aqua- = water，水</h3>
<p>aquaria 水族馆；养鱼池</p>
<p>aquatic 水生动物</p>
<p>Aquarius 水瓶座♒️</p>
<h3>ars-，ard-，= to burn，燃烧 🔥</h3>
<p>ardent 热心的；激动的</p>
<p>ardor 热情，热忱</p>
<p>arson 纵火</p>
<h3>aug- = increase 增加</h3>
<p>augment 增加</p>
<h3>carb- 碳</h3>
<p>carbon 碳</p>
<p>carbohydrate：碳水化合物</p>
<h3>camp- = field，田野</h3>
<p>camp 露营</p>
<p>campaign 竞选运动；作战</p>
<p>campsite 营地</p>
<h3>cast = to throw，投</h3>
<p>broadcast 广播</p>
<p>cast 投掷；演员阵容</p>
<p>forecast 预测</p>
<h3>celebr-</h3>
<p>celebrant 主持仪式的人；教父</p>
<p>celebrate 庆祝，祝贺</p>
<p>celebratory 庆祝的</p>
<p>celebrity 名声；名人</p>
<h3>charg- = to load，装载，词源来自于car- 车</h3>
<p>charge 指控；费用；电荷；承担</p>
<p>overcharge 过度充电；超载</p>
<p>recharge 再充电；再控告</p>
<p>surcharge 追加罚款</p>
<p>undercharge 低的索价</p>
<p>uncharge 宣告无罪</p>
<p>discharge 解雇；<strong>离开</strong>；放电；退伍</p>
<h3>corona-，corolla-，= wreath，crown，花冠，花环</h3>
<p>coronavirus 管状病毒🦠</p>
<h3>curt-，scr-，shr- = short，短，切开，分开</h3>
<p>curt 简略的，简短的</p>
<p>curtail 缩减</p>
<p>shred 碎片；极少量</p>
<p>scar 疤痕</p>
<h3>de- 从离开，从向下，表没有，相反；另外由于离开，因而表示整个，表示加强</h3>
<p>加强的：depict 描写</p>
<p>despite 轻视；prep 尽管（spic-，spect- = look，see，看）</p>
<h3>dict- = say，declare，说话，断言</h3>
<p>indict 起诉</p>
<p>diction：措辞；用语</p>
<p>interdict：禁止；封锁</p>
<p>predict：预言</p>
<p>dedicate：贡献</p>
<h3>dig- 挖，刺</h3>
<p>dig 挖</p>
<p>digging n. 挖掘</p>
<p>dike 筑堤防护</p>
<p>digger 挖掘者</p>
<h3>dom-，domin-，tam- = house，屋，家，控制</h3>
<p>condominium 共同统治</p>
<p>dimain 领域，领土</p>
<h3>dom- =hourse，家</h3>
<p>domain</p>
<h3>duct- to lead = 带领，带来</h3>
<p>duct n. 管道，导体；vt. 通过管道传输</p>
<p>conduct，指导，指挥；传导；induct，指引，使入门；subduct，减去，拿掉</p>
<h3>e- 从离开，从向外</h3>
<h3>estim- = value，价值</h3>
<p>esteem 尊敬；尊重；好评</p>
<p>estimable 可尊敬的</p>
<p>estimate 估计，判断</p>
<h3>im- 同 in-，在内，进入</h3>
<h3>pro- 向前，变体 pur-，por-</h3>
<h3>sub-，sus 从上到下，子的，副手，下一级</h3>
<p>subhealth 亚健康</p>
<p>suspect 被怀疑</p>
<p>suspend 悬浮</p>
<p>suspense 悬念，暂停</p>
<p>sustain 在下面握住，支撑，承受</p>
<h3>sur- = over，above，beyond，in addition，超过，在上面，和 super-同源</h3>
<p>surpass 超过</p>
<p>surplus 过剩</p>
<h3>spire- = breathe，呼吸，引申为渴望</h3>
<p>aspire 渴望；立志</p>
<p>conspire 共谋；协力；阴谋</p>
<p>inspire 进入渴望；鼓励；鼓舞</p>
<p>perspire 全身呼吸，出汗</p>
<p>respire 呼吸</p>
<p>suspire 向下呼吸，叹气</p>
<h3>grav-，griev- = heavy 重</h3>
<p>grief 悲伤；不幸</p>
<p>grieve 使伤心；使悲伤</p>
<p>aggrieve 使委屈；使悲痛</p>
<h3>spic-，spect- = look，see，看（源自拉丁语 specere）</h3>
<p>aspect 方面</p>
<p>inspect 检测</p>
<p>despict 轻视；尽管</p>
<h3>scent- = climb 爬</h3>
<h3>proach- = near 接近</h3>
<p>approach：n. 办法；vt. 来临；靠近；商量，征求</p>
<p>reproach 过分靠近就是责骂的意思</p>
<p>rapprochement</p>
<h3>merg- 沉，没</h3>
<p>如 merge merg 沉，e 向外，一个向下一个向外，就是合并的意思</p>
<p>emerge e 出现，merge 沉没，不是出现合并的东西，而是出现沉没的东西，表示浮现</p>
<h3>gran-，grain- = grain，颗粒</h3>
<p>grain 谷粒；颗粒</p>
<p>granular 颗粒的</p>
<h3>tract- = draw 拉</h3>
<p>attract：吸引</p>
<p>contract：合同</p>
<p>detract：减去，贬低；转移，分散</p>
<h3>tir- = draw 拉</h3>
<p>retire 退休</p>
<h3>seism-，seismo- = earthquake，地震，来自希腊语 seismos/seiein 地震，晃动</h3>
<p>seismic：地震的，重大的</p>
<h3>sur- = over，above，beyond，in addtion，超过，在上面，来自拉丁语，和 supre- 同源</h3>
<p>surpass 超过，凌驾</p>
<h3>tempor- = time，age，season，表时间或者时间引起的现象</h3>
<p>temporary 暂时的，临时的</p>
<p>contemporary 属于同一时期的</p>
<p>temporize 拖延；妥协；迎合潮流</p>
<h3>hydr- = water 水，九头蛇海德拉（Hydra）</h3>
<p>hydra 九头蛇，难以根除的祸害</p>
<p>hydrant 水龙头；消防栓</p>
<p>hydrate 水合物</p>
<p>hydration 水合作用</p>
<p>dehydrate 脱水</p>
<p>dehydration 脱水</p>
<h3>feder- = league，联盟</h3>
<p>federal 联邦的</p>
<p>confederate 同盟者，同盟国</p>
<p>confederacy 联盟</p>
<h3>tract- = draw，拉</h3>
<p>attract 吸引</p>
<p>contract 合约</p>
<p>detract 减去，贬低</p>
<p>distract 转移</p>
<p>extract 榨取；摘录</p>
<p>subtract 减法</p>
<h3>ornitho- = bird，鸟</h3>
<p>ornithology 鸟类学</p>
<h3>semble- = alike，same，相似的，一样的</h3>
<p>assemble 集合（as- 不断，朝着）</p>
<p>dissemble 掩饰，假装不知道</p>
<h3>sphere = globe，球</h3>
<p>biosphere 生物圈</p>
<p>atmosphere 大气层</p>
<h3>sult- 闷热</h3>
<p>sultry 闷热的</p>
<p>sultrily 闷热地</p>
<p>swelter vi 闷热；vt. 使闷热</p>
<h3>mal- = bad，wretched，坏，恶</h3>
<p>malady 疾病</p>
<p>dismal 阴沉的</p>
<h3>herb- = grass，草</h3>
<p>herbage 草本，草的柔软部分</p>
<p>herbivore 食草动物</p>
<h3>mess-，mit-，miss- = send，cast，送，放出</h3>
<p>demisson 辞职；放弃</p>
<p>emission 排放</p>
<p>remiss 不送出去，怠慢的</p>
<p>remissive 宽恕的；减轻的</p>
<p>submission 屈服；服从</p>
<h3>tain-，ten-，tin- = hold，拿住</h3>
<p>contain 包含</p>
<p>detain 扣留</p>
<p>entertain 招待；娱乐（enter 在中间，相互，内）</p>
<p>maintain 维持</p>
<p>obtain 获得（ob- 加强）</p>
<p>retain 保持</p>
<p>sustain 支撑，忍受，承受</p>
<h3>tend- = stretch，伸展</h3>
<p>contend 奋斗，竞争</p>
<p>contender 竞争者</p>
<h3>thus- = theo，神</h3>
<p>enthusiast 热心玩家；狂热者</p>
<p>theology 神学</p>
<h3>pens- = hang，悬挂</h3>
<p>suspend 悬，吊，使悬浮</p>
<p>suspense 悬疑，焦虑</p>
<p>suspension 悬挂；暂停</p>
<h3>scribe- = write，写</h3>
<p>subscribe 订阅（下面 + 写）</p>
<p>transcribe 抄写，转录（跨越 + 写）</p>
<p>describe 描述（向下 + 写）</p>
<h3>sper-，spair = hope</h3>
<p>prosper 繁荣</p>
<p>despair 绝望</p>
<h3>ministr- 部长，管理</h3>
<p>ministry 部长</p>
<p>minister 部长，牧师</p>
<p>administer 管理员</p>
<h3>sume- = take，拿，取</h3>
<p>assume 假装；承担（完全不确定）</p>
<p>consume 消费</p>
<p>resume 恢复</p>
<p>subsume 把..归类</p>
<p>presume 假定，推测（几乎确定）</p>
<h3>sper- = hope，希望</h3>
<p>despair 绝望</p>
<p>desperate 令人绝望的；不顾一切的</p>
<p>prosper 繁荣</p>
<h3>maj-，may-，magn-，max- = great，大，伟大</h3>
<p>major 主要的；大部分的；主修课；成年人</p>
<p>magnate 大官，大亨，巨头</p>
<p>magnific 壮丽的；宏伟的</p>
<p>mayor 市长</p>
<h3>mine 挖掘</h3>
<p>undermine 往下挖，渐渐破坏</p>
<p>mining 采矿</p>
<p>mineral 矿物；矿物的</p>
<h3>fer-，fero- = wild，野</h3>
<p>feral 凶猛的，野兽的</p>
<p>ferity 野性</p>
<p>ferocious 残忍的</p>
<p>fierce 凶猛的</p>
<h3>gross- = greate，大</h3>
<p>engross 独占；使全神贯注</p>
<h3>lex-，lexic- = word，speech，词汇</h3>
<p>lexical 字典的</p>
<p>lexicon 词汇</p>
<p>lexicology 词汇学</p>
<h3>merch- = trade，交易</h3>
<p>mercantile 商业的；商人的</p>
<p>mercer 绸缎商人</p>
<p>mercy 仁慈；宽恕</p>
<p>merchandise 商品，货物，周边</p>
<h3>vol-，volv-，volut- = roll，turn，卷，转</h3>
<p>evolution 进化</p>
<p>involute 内卷的，复杂的</p>
<p>involution 内卷；回旋</p>
<p>revolution 革命，改革</p>
<h3>radic- = root，根</h3>
<p>eradicate 根除</p>
<p>radical 根本的；基本的</p>
<h3>surge- = to rise，升起</h3>
<p>resurge 复活</p>
<p>surge 汹涌澎湃；猛冲</p>
<h3>mand-，mend- = order，命令</h3>
<p>command 命令</p>
<p>commend 委托，嘉奖</p>
<p>demand 要求</p>
<p>recommend 推荐，介绍</p>
<p>mandate 命令</p>
<p>mandatory 命令的；托管的</p>
<h3>ment- = mind，思考，神智</h3>
<p>dement 使发狂</p>
<h3>vast- = empty，空</h3>
<p>devastate 毁坏</p>
<p>evacuate 疏散；排泄</p>
<p>evacuant 排泄的</p>
<p>vacuity 空虚；无意义的事</p>
<p>vacant 空的；空白的</p>
<h3>vestig- = foot print，track，脚印，踪迹</h3>
<p>investigate 调查</p>
<p>vestige 痕迹；遗迹；残余</p>
<h3>ven，vent- = come，来</h3>
<p>advent 来到，来临</p>
<p>convent 女修道会</p>
<p>convene 集合；召集</p>
<p>event 事件</p>
<p>invent 发明；创作</p>
<p>prevent 阻止；妨碍</p>
<p>venture 冒险</p>
<p>avenue 大街</p>
<p>revenue 收益</p>
<p>supervene 意外发生</p>
<p>venue 犯罪地点</p>
<h3>vice- 副；代理</h3>
<p>vice-chairman 副主席</p>
<p>vice-governor 副州长</p>
<p>vice- president 副总裁</p>
<h3>vit-，vive- = life，生命</h3>
<p>revive 使复苏</p>
<p>survive 幸存</p>
<p>vital 生命的</p>
<p>vivid 生动的</p>
<p>vivify 使生动</p>
]]></content>
    <category term="英文"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">MySQL</title>
    <id>https://blog.ruizhou.cf/software/mysql/</id>
    <link href="https://blog.ruizhou.cf/software/mysql/"/>
    <updated>2024-10-09T02:08:51.958Z</updated>
    <summary type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="/software/mysql/intro.html" target="_blank">介绍</a></li>
<li><a href="/software/mysql/compare.html" target="_blank">5.7 版本与 8 的比较</a></li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="/software/mysql/intro.html" target="_blank">介绍</a></li>
<li><a href="/software/mysql/compare.html" target="_blank">5.7 版本与 8 的比较</a></li>
</ul>
]]></content>
    <author>
      <name>李欣桐</name>
    </author>
    <contributor>
      <name>李欣桐</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 李欣桐</rights>
  </entry>
  <entry>
    <title type="text">5.7 与 8</title>
    <id>https://blog.ruizhou.cf/software/mysql/compare.html</id>
    <link href="https://blog.ruizhou.cf/software/mysql/compare.html"/>
    <updated>2024-10-09T02:08:51.958Z</updated>
    <summary type="html"><![CDATA[<h2>MySql 5.7 和 MySql 8 的区别</h2>
<ol>
<li>
<p>NoSql 存储</p>
<p>Mysql 从 5.7 版本提供了 NoSQL 的存储功能,在 8.0 中这部分得到一些修改。</p>
<ul>
<li>
<p>关系型数据库 (SQL)
通过外键关联来建立表与表之间的关系</p>
</li>
<li>
<p>非关系型数据库 (NOSQL)
通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定</p>
</li>
</ul>
</li>
<li>
<p>隐藏索引</p>
<p>隐藏索引的特性对于性能调试非常有用,在 8.0 中,索引可以被隐藏和显示,当一个索引隐藏时,他不会被查询优化器所使用</p>
<p>也就是说可以隐藏一个索引,然后观察对数据库的影响.如果性能下降,就说明这个索引是有效的,于是将其”恢复显示”即可;如果数据库性能看不出变化,说明这个索引是多于的,可以删掉了</p>
</li>
<li>
<p>设置持久化</p>
<p>MySQL 的设置可以在运行时通过 <code>SET GLOBAL</code> 命令来更改，但是这种更改只会临时生效，到下次启动时数据库又会从配置文件中读取。</p>
<p>MySQL 8.0 新增了 <code>SET PERSIST</code> 命令，
例如: <code>SET PERSIST max_connections = 500;</code>
MySQL 会将该命令的配置保存到数据目录下的 <code>mysqld-auto.cnf</code> 文件中，下次启动时会读取该文件，用其中的配置来覆盖缺省的配置文件。</p>
</li>
<li>
<p>UTF-8 编码</p>
<p>从 MySQL 8.0 开始，数据库的缺省编码将改为 utf8mb4，这个编码包含了所有 emoji 字符。
多少年来我们使用 MySQL 都要在编码方面小心翼翼，生怕忘了将缺省的 latin 改掉而出现乱码问题。从此以后就不用担心了。</p>
</li>
<li>
<p>通用表表达式 (Common Table Expressions)</p>
<p>看上去层次和区域都更加分明，改起来也更清晰的知道要改哪一部分。</p>
</li>
<li>
<p>窗口函数 (Window Functions)</p>
<p>从 8.0 开始，MySQL 新增了一个叫窗口函数的概念，它可以用来实现若干新的查询方式。</p>
<p>窗口函数有点像是 <code>SUM()</code>、<code>COUNT()</code> 那样的集合函数，但它并不会将多行查询结果合并为一行，而是将结果放回多行当中。也就是说，窗口函数是不需要 <code>GROUP BY</code> 的。</p>
</li>
<li>
<p>新的系统字典表</p>
<p>整合了存储有关数据库对象信息的事务数据字典，所有的元数据都用 <code>InnoDB</code> 引擎进行存储</p>
</li>
<li>
<p>安全和用户管理</p>
<p>新增 <code>caching_sha2_password</code> 认证插件，并且是默认的身份认证插件。性能和安全方面加强</p>
<p>权限支持 role</p>
<p>新增密码历史记录功能，限制重复使用以前的密码</p>
</li>
<li>
<p>innodb 增强</p>
<p>新增 <code>INFORMATION_SCHEMA.INNODB_CACHED_INDEXES</code>，查看每个索引缓存在 <code>InnoDB</code> 缓冲池中的索引页数</p>
<p>新增 <code>INFORMATION_SCHEMA.INNODB_TABLESPACES_BRIEF</code> 视图</p>
<p>新增了动态配置项 <code>innodb_deadlock_detect</code>，用来禁用死锁检查，因为在高并发系统中，当大量线程等待同一个锁时，死锁检查会大大拖慢数据库</p>
<p>支持使用 <code>innodb_directories</code> 选项在服务器脱机时将表空间文件移动或恢复到新位置</p>
<p>新增 <code>innodb_dedicated_server</code>，让 <code>InnoDB</code> 根据服务器上检测到的内存量自动配置 <code>innodb_buffer_pool_size</code>, <code>innodb_log_file_size，innodb_flush_method</code>。</p>
<p><code>innodb_dedicated_server</code>: 自动配置缓冲池大小</p>
</li>
<li>
<p>直方图</p>
<p>MySQL 8.0 版本开始支持期待已久直方图。优化器会利用 <code>column_statistics</code> 的数据，判断字段的值的分布，得到更准确的执行计划。</p>
<p>可以使用 <code>ANALYZE TABLE table_name [UPDATE HISTOGRAM on col_name with N BUCKETS |DROP HISTOGRAM ON clo_name]</code> 来收集或者删除直方图信息</p>
<p>支持会话级别 <code>SET_VAR</code> 动态调整部分参数，有利于提升语句性能。</p>
</li>
<li>
<p>InnoDB 性能提升</p>
<p>废除 <code>buffer pool mutex</code>, 将原来一个 <code>mutex</code> 拆分成多个，提高并发拆分 <code>LOCK_thd_list</code> 和 <code>LOCK_thd_remove</code> 这两个 <code>mutex</code>，大约可提高线程链接效率 5%。</p>
<ol>
<li>
<p>行缓存</p>
<p>MySQL 8.0 的优化器可以估算将要读取的行数，因此可以提供给存储引擎一个合适大小的 <code>row buffer</code> 来存储需要的数据。大批量的连续数据扫描的性能将受益于更大的 <code>record buffer</code>。</p>
</li>
<li>
<p>改进扫描性能</p>
<p>改进 <code>InnoDB</code> 范围查询的性能，可提升全表查询和范围查询 5-20%的性能。</p>
</li>
<li>
<p>成本模型</p>
<p><code>InnoDB</code> 缓冲区可以估算缓存区中的有多少表和索引，这可以让优化器选择访问方式时知道数据是否可以存储在内存中还是必须存储到磁盘上。</p>
</li>
</ol>
</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>MySql 5.7 和 MySql 8 的区别</h2>
<ol>
<li>
<p>NoSql 存储</p>
<p>Mysql 从 5.7 版本提供了 NoSQL 的存储功能,在 8.0 中这部分得到一些修改。</p>
<ul>
<li>
<p>关系型数据库 (SQL)
通过外键关联来建立表与表之间的关系</p>
</li>
<li>
<p>非关系型数据库 (NOSQL)
通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定</p>
</li>
</ul>
</li>
<li>
<p>隐藏索引</p>
<p>隐藏索引的特性对于性能调试非常有用,在 8.0 中,索引可以被隐藏和显示,当一个索引隐藏时,他不会被查询优化器所使用</p>
<p>也就是说可以隐藏一个索引,然后观察对数据库的影响.如果性能下降,就说明这个索引是有效的,于是将其”恢复显示”即可;如果数据库性能看不出变化,说明这个索引是多于的,可以删掉了</p>
</li>
<li>
<p>设置持久化</p>
<p>MySQL 的设置可以在运行时通过 <code>SET GLOBAL</code> 命令来更改，但是这种更改只会临时生效，到下次启动时数据库又会从配置文件中读取。</p>
<p>MySQL 8.0 新增了 <code>SET PERSIST</code> 命令，
例如: <code>SET PERSIST max_connections = 500;</code>
MySQL 会将该命令的配置保存到数据目录下的 <code>mysqld-auto.cnf</code> 文件中，下次启动时会读取该文件，用其中的配置来覆盖缺省的配置文件。</p>
</li>
<li>
<p>UTF-8 编码</p>
<p>从 MySQL 8.0 开始，数据库的缺省编码将改为 utf8mb4，这个编码包含了所有 emoji 字符。
多少年来我们使用 MySQL 都要在编码方面小心翼翼，生怕忘了将缺省的 latin 改掉而出现乱码问题。从此以后就不用担心了。</p>
</li>
<li>
<p>通用表表达式 (Common Table Expressions)</p>
<p>看上去层次和区域都更加分明，改起来也更清晰的知道要改哪一部分。</p>
</li>
<li>
<p>窗口函数 (Window Functions)</p>
<p>从 8.0 开始，MySQL 新增了一个叫窗口函数的概念，它可以用来实现若干新的查询方式。</p>
<p>窗口函数有点像是 <code>SUM()</code>、<code>COUNT()</code> 那样的集合函数，但它并不会将多行查询结果合并为一行，而是将结果放回多行当中。也就是说，窗口函数是不需要 <code>GROUP BY</code> 的。</p>
</li>
<li>
<p>新的系统字典表</p>
<p>整合了存储有关数据库对象信息的事务数据字典，所有的元数据都用 <code>InnoDB</code> 引擎进行存储</p>
</li>
<li>
<p>安全和用户管理</p>
<p>新增 <code>caching_sha2_password</code> 认证插件，并且是默认的身份认证插件。性能和安全方面加强</p>
<p>权限支持 role</p>
<p>新增密码历史记录功能，限制重复使用以前的密码</p>
</li>
<li>
<p>innodb 增强</p>
<p>新增 <code>INFORMATION_SCHEMA.INNODB_CACHED_INDEXES</code>，查看每个索引缓存在 <code>InnoDB</code> 缓冲池中的索引页数</p>
<p>新增 <code>INFORMATION_SCHEMA.INNODB_TABLESPACES_BRIEF</code> 视图</p>
<p>新增了动态配置项 <code>innodb_deadlock_detect</code>，用来禁用死锁检查，因为在高并发系统中，当大量线程等待同一个锁时，死锁检查会大大拖慢数据库</p>
<p>支持使用 <code>innodb_directories</code> 选项在服务器脱机时将表空间文件移动或恢复到新位置</p>
<p>新增 <code>innodb_dedicated_server</code>，让 <code>InnoDB</code> 根据服务器上检测到的内存量自动配置 <code>innodb_buffer_pool_size</code>, <code>innodb_log_file_size，innodb_flush_method</code>。</p>
<p><code>innodb_dedicated_server</code>: 自动配置缓冲池大小</p>
</li>
<li>
<p>直方图</p>
<p>MySQL 8.0 版本开始支持期待已久直方图。优化器会利用 <code>column_statistics</code> 的数据，判断字段的值的分布，得到更准确的执行计划。</p>
<p>可以使用 <code>ANALYZE TABLE table_name [UPDATE HISTOGRAM on col_name with N BUCKETS |DROP HISTOGRAM ON clo_name]</code> 来收集或者删除直方图信息</p>
<p>支持会话级别 <code>SET_VAR</code> 动态调整部分参数，有利于提升语句性能。</p>
</li>
<li>
<p>InnoDB 性能提升</p>
<p>废除 <code>buffer pool mutex</code>, 将原来一个 <code>mutex</code> 拆分成多个，提高并发拆分 <code>LOCK_thd_list</code> 和 <code>LOCK_thd_remove</code> 这两个 <code>mutex</code>，大约可提高线程链接效率 5%。</p>
<ol>
<li>
<p>行缓存</p>
<p>MySQL 8.0 的优化器可以估算将要读取的行数，因此可以提供给存储引擎一个合适大小的 <code>row buffer</code> 来存储需要的数据。大批量的连续数据扫描的性能将受益于更大的 <code>record buffer</code>。</p>
</li>
<li>
<p>改进扫描性能</p>
<p>改进 <code>InnoDB</code> 范围查询的性能，可提升全表查询和范围查询 5-20%的性能。</p>
</li>
<li>
<p>成本模型</p>
<p><code>InnoDB</code> 缓冲区可以估算缓存区中的有多少表和索引，这可以让优化器选择访问方式时知道数据是否可以存储在内存中还是必须存储到磁盘上。</p>
</li>
</ol>
</li>
</ol>
<h2>MySql 5.7 和 8 的选择</h2>
<p>MySQL 8 会使用更多内存。</p>
<p>对运行相同轻量级工作负载的 MySQL 8 和 MySQL 5.7 (实际上它们是 Percona Server 版本) 的 1GB VM 进行基本测试。</p>
<p>MySQL 8 使用了大约 200MB 的 <code>swap</code> 分区，并且使用更少的系统缓存，被分配更多内存。</p>
<p>如果我们查看 <code>top</code> 命令的输出，我们会看到 MySQL 8 使用的更多常驻内存和虚拟内存。特别是“可怕的”虚拟内存，因为它远远超过这些 VM 上可用的 1GB 物理内存。当然，虚拟内存使用 (VSZ) 是现代应用程序实际内存需求的一个很差的指标，但它确实证实了更高的内存需求这个事。</p>
<p>实际上，正如我们从 <code>vmstat</code> 输出中所知道的那样，即使没有太多的“空间”，MySQL 8 和 MySQL 5.7 都不会在低负载下使用 <code>swap</code> 分区。</p>
<p>如果您有多个连接或希望在同一个 VM 上运行某些应用程序，则可以使用 <code>swap</code> (如果未启用交换，则可能导致 OOM)。这是一个有趣的实验，能看看我有多少可以驱动 MySQL 5.7 和 MySQL 8 的内存消耗。</p>
<p>总结在开发环境中迁移到 MySQL 8 时，请记住，使用相同的设置需要比 MySQL 5.7 配置更多的内存。</p>
]]></content>
    <author>
      <name>李欣桐</name>
    </author>
    <contributor>
      <name>李欣桐</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 李欣桐</rights>
  </entry>
  <entry>
    <title type="text">简介</title>
    <id>https://blog.ruizhou.cf/software/mysql/intro.html</id>
    <link href="https://blog.ruizhou.cf/software/mysql/intro.html"/>
    <updated>2024-10-09T02:08:51.960Z</updated>
    <summary type="html"><![CDATA[<p>MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，属于 Oracle 旗下产品。</p>
<p>它是最流行的关系型数据库管理系统之一，是最好的 RDBMS 关系数据库管理系统应用软件之一</p>
<p>MySQL 使用 SQL 语言，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站都选择 MySQL 作为网站数据库。</p>
<h2>安装</h2>
<p>下载地址: <a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/downloads/</a></p>]]></summary>
    <content type="html"><![CDATA[<p>MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，属于 Oracle 旗下产品。</p>
<p>它是最流行的关系型数据库管理系统之一，是最好的 RDBMS 关系数据库管理系统应用软件之一</p>
<p>MySQL 使用 SQL 语言，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站都选择 MySQL 作为网站数据库。</p>
<h2>安装</h2>
<p>下载地址: <a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/downloads/</a></p>
<p>在这个下载界面会有几个版本的选择,</p>
<ol>
<li>
<p>MySQL Community Server 社区版本，开源免费，但不提供官方技术支持。</p>
</li>
<li>
<p>MySQL Enterprise Edition 企业版本，需付费，可以试用 30 天。</p>
</li>
<li>
<p>MySQL Cluster 集群版，开源免费。可将几个 MySQL Server 封装成一个 Server。</p>
</li>
<li>
<p>MySQL Cluster CGE 高级集群版，需付费。</p>
</li>
<li>
<p>MySQL Workbench ( GUITOOL )一款专为 MySQL 设计的 ER/数据库建模工具。它是著名的数据库设计工具 DBDesigner4 的继任者。</p>
<p>MySQL Workbench 又分为两个版本，分别是社区版( MySQL Workbench OSS )、商用版( MySQL WorkbenchSE )。</p>
</li>
</ol>
<p>MySQL Community Server 是开源免费的，这也是我们通常用的 MySQL 的版本。</p>
<ol>
<li>
<p>下载后得到 <code>.zip</code> 压缩包.</p>
</li>
<li>
<p>解压到自己想要安装到的目录</p>
</li>
<li>
<p>添加环境变量: 我的电脑 → 属性 → 高级 → 环境变量</p>
<p>选择 PATH，在其后面添加: mysql 安装文件下面的 bin 文件夹</p>
</li>
<li>
<p>新建 mysql 配置文件</p>
<p>在 mysql 文件夹中新建 <code>my.ini</code> 文件,编辑 <code>my.ini</code> 文件,注意替换路径位置</p>
<div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">basedir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">D:\Program Files\mysql-5.7\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">datadir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">D:\Program Files\mysql-5.7\data\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">3306</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">skip-grant-tables</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>启动管理员模式下的 CMD，输入 <code>cd /d bin目录路径</code> 将路径切换至 mysql 下的 bin 目录，然后输入 <code>mysqld –install</code> (安装 mysql )</p>
</li>
<li>
<p>再输入 <code>mysqld --initialize-insecure --user=mysql</code> 初始化数据文件</p>
</li>
<li>
<p>然后输入 <code>net start mysql</code> 再次启动 mysql,然后用命令 <code>mysql –u root –p</code> 进入 mysql 管理界面 (密码可为空)</p>
</li>
<li>
<p>进入界面后更改 root 密码</p>
<p><code>update mysql.user set authentication_string=password('123456') where user='root' and Host = 'localhost';</code></p>
</li>
<li>
<p>刷新权限 <code>flush privileges;</code></p>
</li>
</ol>
<figure><figcaption>flush privileges</figcaption></figure>
<ol>
<li>
<p>修改 <code>my.ini</code> 文件删除最后一句 <code>skip-grant-tables</code></p>
<div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">basedir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">D:\work\mysql-5.7.19\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">datadir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">D:\work\mysql-5.7.19\data\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">3306</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#skip-grant-tables</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>重启 mysql 即可正常使用</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">net </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mysql</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">net </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mysql</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>连接上测试出现以下结果就安装好了
</p>
</li>
</ol>
<h2>连接数据库</h2>
<ol>
<li>
<p>打开 MySQL 命令窗口</p>
<ul>
<li>在 DOS 命令行窗口进入 安装目录 <code>\mysql\bin</code></li>
<li>可设置环境变量，设置了环境变量，可以在任意目录打开</li>
</ul>
</li>
<li>
<p>输入连接数据库语句:
<code>mysql -h 服务器主机地址 -u 用户名 -p 用户密码</code></p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p><code>-p</code> 后面不能多加空格，否则会被当做密码的内容，导致登录失败。</p>
</div>
</li>
</ol>
<h2>几个基本的数据库操作命令</h2>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mysql -h 服务器主机地址 -u 用户名 -p 用户密码 连接数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'123456'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'root'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; 修改密码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flush privileges; 刷新数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show databases; 显示所有数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dbname；打开某个数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show tables; 显示数据库 mysql 中所有的表</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">describe user; 显示表 mysql 数据库中 user 表的列信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> database</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; 创建数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> databasename; 选择数据库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">exit; 退出 Mysql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">? 命令关键词 : 寻求帮助</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表示注释</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>数据库基本操作</h2>
<h3>操作数据库</h3>
<ol>
<li>
<p>创建数据库</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DATABASE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>显示数据库</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show databases;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>注意: 为了不再显示的时候乱码，要修改数据库默认编码。以下以 <code>GBK</code> 编码页面为例进行说明:</p>
<ol>
<li>
<p>修改 MYSQL 的配置文件: <code>my.ini</code> 里面修改 <code>default-character-set=gbk</code></p>
</li>
<li>
<p>代码运行时修改:</p>
<ol>
<li>Java 代码: <code>jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=gbk</code></li>
<li>PHP 代码: <code>header("Content-Type:text/html;charset=gb2312");</code></li>
<li>C 语言代码: <code>int mysql_set_character_set( MYSQL * mysql, char * csname)；</code>
该函数用于为当前连接设置默认的字符集。字符串 <code>csname</code> 指定了 1 个有效的字符集名称。连接校对成为字符集的默认校对。该函数的工作方式与 <code>SET NAMES</code> 语句类似，但它还能设置 mysql → charset 的值，从而影响了由 <code>mysql_real_escape_string()</code> 设置的字符集。</li>
</ol>
</li>
</ol>
</li>
<li>
<p>删除数据库</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> database</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>删除一个已经确定存在的数据库</li>
</ul>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> database</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>删除一个不确定存在的数据库</li>
</ul>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> database</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> exists</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>选择数据库</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>use 语句可以通过 MySQL 把 name 数据库作为默认 (当前) 数据库使用，用于后续语句。该数据库保持为默认数据库，直到语段的结尾，或者直到发布一个不同的 USE 语句</p>
<p>使用 use 语句为一个特定的当前的数据库做标记，不会阻碍您访问其它数据库中的表。下面的例子可以从 db1 数据库访问作者表，并从 db2 数据库访问编辑表</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> USE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> db1;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> author_name,editor_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> author,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">db2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">editor</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    -</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        WHERE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">editor_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> db2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">editor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.editor_id;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>USE 语句被设立出来，用于与 Sybase 相兼容。</p>
<p>use 数据库后，使用 <code>show databases</code> 就能查询所有数据库，如果想跳到其他数据库，用 use 其他数据库名字就可以了。</p>
</li>
<li>
<p>当前选择的数据库</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>MySQL 中 <code>SELECT</code> 命令类似于其他编程语言里的 <code>print</code> 或者 <code>write</code>，您可以用它来显示一个字符串、数字、数学表达式的结果等等,</p>
<ol>
<li>
<p>显示 MYSQL 的版本</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">+</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
</li>
</ol>
]]></content>
    <author>
      <name>李欣桐</name>
    </author>
    <contributor>
      <name>李欣桐</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 李欣桐</rights>
  </entry>
  <entry>
    <title type="text">Git</title>
    <id>https://blog.ruizhou.cf/software/git/</id>
    <link href="https://blog.ruizhou.cf/software/git/"/>
    <updated>2024-10-09T02:08:52.033Z</updated>
    <summary type="html"><![CDATA[<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。在开发中分布式文件管理系统，可以便于多人协作开发。</p>
<div class="hint-container info">
<p class="hint-container-title">交互式学习</p>
<p>如果您觉得本文太枯燥，这里有一个 <a href="http://learngitbranching.js.org/" target="_blank" rel="noopener noreferrer">交互式的分支演示与学习网站</a>。您可以在这里领略 Git 的魅力。</p>
<p>但 Mr.Hope 仍建议您操作完再系统的学习并阅读以下内容。</p>
</div>
]]></summary>
    <content type="html"><![CDATA[<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。在开发中分布式文件管理系统，可以便于多人协作开发。</p>
<div class="hint-container info">
<p class="hint-container-title">交互式学习</p>
<p>如果您觉得本文太枯燥，这里有一个 <a href="http://learngitbranching.js.org/" target="_blank" rel="noopener noreferrer">交互式的分支演示与学习网站</a>。您可以在这里领略 Git 的魅力。</p>
<p>但 Mr.Hope 仍建议您操作完再系统的学习并阅读以下内容。</p>
</div>
<!-- more -->
<h2>Git 安装</h2>
<ul>
<li><a href="/software/git/install.html" target="_blank">安装教程</a></li>
</ul>
<h2>Git 教程</h2>
<ul>
<li>
<p><a href="/software/git/intro.html" target="_blank">Git 介绍</a></p>
</li>
<li>
<p><a href="/software/git/create-repo.html" target="_blank">创建版本库</a></p>
</li>
<li>
<p><a href="/software/git/status.html" target="_blank">纵向查看</a></p>
</li>
<li>
<p><a href="/software/git/recall.html" target="_blank">撤销操作</a></p>
</li>
<li>
<p><a href="/software/git/reset.html" target="_blank">版本回退</a></p>
</li>
<li>
<p><a href="/software/git/working-directory.html" target="_blank">工作区和暂存区</a></p>
</li>
<li>
<p><a href="/software/git/change.html" target="_blank">修改管理</a></p>
</li>
<li>
<p><a href="/software/git/remote.html" target="_blank">远程仓库</a></p>
</li>
<li>
<p><a href="/software/git/branch.html" target="_blank">分支管理</a></p>
</li>
<li>
<p><a href="/software/git/tag.html" target="_blank">标签管理</a></p>
</li>
<li>
<p><a href="/software/git/ignore.html" target="_blank">忽略特殊文件</a></p>
</li>
</ul>
<h2>深入 Git</h2>
<ul>
<li>
<p><a href="/software/git/working.html" target="_blank">Git 原理</a></p>
</li>
<li>
<p><a href="/software/git/custom.html" target="_blank">自定义 Git</a></p>
</li>
<li>
<p><a href="/software/git/gitLFS.html" target="_blank">大文件管理存储</a></p>
</li>
<li>
<p><a href="/software/git/server.html" target="_blank">搭建 Git 服务器</a></p>
</li>
<li>
<p><a href="/software/git/merge.html" target="_blank">高级合并</a></p>
</li>
</ul>
<h2>扩展阅读</h2>
<ul>
<li>
<p><a href="https://git-scm.com/doc" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</li>
<li>
<p><a href="https://mrhope.site/file/git/gitCheatSheet.pdf" target="_blank" rel="noopener noreferrer">Git-cheatSheet</a> (PDF)</p>
</li>
<li>
<p><a href="https://mrhope.site/file/git/progit_v2.1.45.pdf" target="_blank" rel="noopener noreferrer">Pro Git</a> (PDF)</p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">TODO</p>
<ol>
<li>完善分支合并部分，加入更多命令介绍。如 <code>cherry-pick</code> <code>squash-merge</code>。</li>
<li>介绍 Git Hook</li>
</ol>
</div>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">分支管理</title>
    <id>https://blog.ruizhou.cf/software/git/branch.html</id>
    <link href="https://blog.ruizhou.cf/software/git/branch.html"/>
    <updated>2024-10-09T02:08:52.035Z</updated>
    <summary type="html"><![CDATA[<h2>概述</h2>
<p>分支就是科幻电影里面的平行宇宙，当您正在电脑前努力学习 Git 的时候，另一个您正在另一个平行宇宙里努力学习 SVN。</p>
<p>如果两个平行宇宙互不干扰，那对现在的您也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，您既学会了 Git 又学会了 SVN!</p>
<figure><figcaption>Learn branches</figcaption></figure>
<p>分支在实际中有什么用呢? 假设您准备开发一个新功能，但是需要两周才能完成，第一周您写了 50% 的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p>]]></summary>
    <content type="html"><![CDATA[<h2>概述</h2>
<p>分支就是科幻电影里面的平行宇宙，当您正在电脑前努力学习 Git 的时候，另一个您正在另一个平行宇宙里努力学习 SVN。</p>
<p>如果两个平行宇宙互不干扰，那对现在的您也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，您既学会了 Git 又学会了 SVN!</p>
<figure><figcaption>Learn branches</figcaption></figure>
<p>分支在实际中有什么用呢? 假设您准备开发一个新功能，但是需要两周才能完成，第一周您写了 50% 的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p>
<p>现在有了分支，就不用怕了。您创建了一个属于您自己的分支，别人看不到，还继续在原来的分支上正常工作，而您在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p>
<p>其他版本控制系统如 SVN 等都有分支管理，但是用过之后您会发现，这些版本控制系统创建和切换分支比蜗牛还慢，简直让人无法忍受，结果分支功能成了摆设，大家都不去用。</p>
<p>但 Git 的分支是与众不同的，无论创建、切换和删除分支，Git 在 1 秒钟之内就能完成! 无论您的版本库是 1 个文件还是 1 万个文件。</p>
<h2>创建与合并分支</h2>
<p>在版本回退里，您已经知道，每次提交，Git 都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在 Git 里，这个分支叫主分支，即 <code>master</code> 分支。<code>HEAD</code> 严格来说不是指向提交，而是指向 <code>master</code>，<code>master</code> 才是指向提交的，所以，<code>HEAD</code> 指向的就是当前分支。</p>
<p>一开始的时候，<code>master</code> 分支是一条线，Git 用 <code>master</code> 指向最新的提交，再用 <code>HEAD</code> 指向 <code>master</code>，就能确定当前分支，以及当前分支的提交点:</p>
<figure><figcaption>示意图</figcaption></figure>
<p>每次提交，<code>master</code> 分支都会向前移动一步，这样，随着您不断提交，<code>master</code> 分支的线也越来越长:</p>
<p>当我们创建新的分支，例如 dev 时，Git 新建了一个指针叫 <code>dev</code>，指向 <code>master</code> 相同的提交，再把 <code>HEAD</code> 指向 <code>dev</code>，就表示当前分支在 dev 上:</p>
<figure><figcaption>示意图</figcaption></figure>
<p>您看，Git 创建一个分支很快，因为除了增加一个 <code>dev</code> 指针，改改 <code>HEAD</code> 的指向，工作区的文件都没有任何变化!</p>
<p>不过，从现在开始，对工作区的修改和提交就是针对 dev 分支了，比如新提交一次后，<code>dev</code> 指针往前移动一步，而 <code>master</code> 指针不变:</p>
<figure><figcaption>示意图</figcaption></figure>
<p>假如我们在 dev 上的工作完成了，就可以把 dev 合并到 master 上。Git 怎么合并呢? 最简单的方法，就是直接把 master 指向 dev 的当前提交，就完成了合并:</p>
<figure><figcaption>示意图</figcaption></figure>
<p>所以 Git 合并分支也很快! 就改改指针，工作区内容也不变!</p>
<p>合并完分支后，甚至可以删除 dev 分支。删除 dev 分支就是把 dev 指针给删掉，删掉后，我们就剩下了一条 master 分支:</p>
<figure><figcaption>示意图</figcaption></figure>
<p>下面开始实战。首先，我们创建 dev 分支，然后切换到 dev 分支:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switched</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'dev'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git checkout</code> 命令加上 <code>-b</code> 参数表示创建并切换，相当于以下两条命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># nothing</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switched</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'dev'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，用 <code>git branch</code> 命令查看当前分支:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">* dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  master</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git branch</code> 命令会列出所有分支，当前分支前面会标一个 <code>*</code> 号。</p>
<p>然后，我们就可以在 dev 分支上正常提交，比如对 <code>readme.txt</code> 做个修改，加上一行:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Creating a new branch is quick.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>然后提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># nothing</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "branch test"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[dev b17d20e] branch test</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，dev 分支的工作完成，我们就可以切换回 master 分支:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switched</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'master'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>切换回 master 分支后，再查看一个 <code>readme.txt</code> 文件，刚才添加的内容不见了! 因为那个提交是在 dev 分支上，而 master 分支此刻的提交点并没有变:</p>
<figure><figcaption>示例图</figcaption></figure>
<p>现在，我们把 dev 分支的工作成果合并到 master 分支上:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Updating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> d46f35e..b17d20e</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Fast-forward</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> readme.txt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git merge</code> 命令用于合并指定分支到当前分支。合并后，再查看 readme.txt 的内容，就可以看到，和 dev 分支的最新提交是完全一样的。</p>
<p>注意到上面的 <code>Fast-forward</code> 信息，Git 告诉我们，这次合并是 “快进模式”，也就是直接把 master 指向 dev 的当前提交，所以合并速度非常快。当然，也不是每次合并都能 <code>Fast-forward</code>。合并完成后，就可以放心地删除 dev 分支了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Deleted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (was </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">b17d20e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除后，查看 <code>branch</code>，就只剩下 <code>master</code> 分支了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">* master</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>因为创建、合并和删除分支非常快，所以 Git 鼓励您使用分支完成某个任务，合并后再删掉分支，这和直接在 <code>master</code> 分支上工作效果是一样的，但过程更安全。</p>
<h3>分支小结</h3>
<ul>
<li>
<p>查看分支: <code>git branch</code></p>
</li>
<li>
<p>创建分支: <code>git branch &lt;name&gt;</code></p>
</li>
<li>
<p>切换分支: <code>git checkout &lt;name&gt;</code></p>
</li>
<li>
<p>创建+切换分支: <code>git checkout -b &lt;name&gt;</code></p>
</li>
<li>
<p>合并某分支到当前分支: <code>git merge &lt;name&gt;</code></p>
</li>
<li>
<p>删除分支: <code>git branch -d &lt;name&gt;</code></p>
</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">修改管理</title>
    <id>https://blog.ruizhou.cf/software/git/change.html</id>
    <link href="https://blog.ruizhou.cf/software/git/change.html"/>
    <updated>2024-10-09T02:08:52.106Z</updated>
    <summary type="html"><![CDATA[<h2>管理修改</h2>
<p>Git 比其他版本控制系统设计得优秀，因为 Git 跟踪并管理的是修改，而非文件。</p>
<p>您会问，什么是修改? 比如您新增了一行，这就是一个修改，删除了一行，也是一个修改，更改了某些字符，也是一个修改，删了一些又加了一些，也是一个修改，甚至创建一个新文件，也算一个修改。</p>
<p>为什么说 Git 管理的是修改，而不是文件呢? 我们还是做实验。第一步，对 readme.txt 做一个修改，比如加一行内容:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> control</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> system.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> software</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> under</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> has</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mutable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stage.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<h2>管理修改</h2>
<p>Git 比其他版本控制系统设计得优秀，因为 Git 跟踪并管理的是修改，而非文件。</p>
<p>您会问，什么是修改? 比如您新增了一行，这就是一个修改，删除了一行，也是一个修改，更改了某些字符，也是一个修改，删了一些又加了一些，也是一个修改，甚至创建一个新文件，也算一个修改。</p>
<p>为什么说 Git 管理的是修改，而不是文件呢? 我们还是做实验。第一步，对 readme.txt 做一个修改，比如加一行内容:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> control</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> system.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> software</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> under</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> has</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mutable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stage.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，添加:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># nothing</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  Changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git reset HEAD &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> unstage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        modified:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   readme.txt</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，再修改 readme.txt:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> control</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> system.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> software</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> under</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> has</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mutable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> called</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stage.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> files.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git tracks changes"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[master 519219b] git tracks changes</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交后，再看看状态:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> staged</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git add &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> what</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git checkout -- &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> discard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> working</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    modified:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   readme.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (use </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"git add"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and/or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git commit -a"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>怎么第二次的修改没有被提交? 我们回顾一下操作过程:</p>
<p>第一次修改 → <code>git add</code> → 第二次修改 → <code>git commit</code></p>
<p>您看，我们前面讲了，Git 管理的是修改，当您用 <code>git add</code> 命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code> 只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</p>
<p>提交后，用 <code>git diff HEAD -- readme.txt</code> 命令可以查看工作区和版本库里面最新版本的区别:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> diff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a/readme.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> b/readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 76d770f..a9c5755</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100644</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">Git 仓库</title>
    <id>https://blog.ruizhou.cf/software/git/create-repo.html</id>
    <link href="https://blog.ruizhou.cf/software/git/create-repo.html"/>
    <updated>2024-10-09T02:08:52.145Z</updated>
    <summary type="html"><![CDATA[<p>什么是仓库呢? 英文名<strong>repository</strong>，您可以简单理解成一个目录，这个目录里面的所有文件都可以被 Git 管理起来，每个文件的修改、删除， Git 都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>
]]></summary>
    <content type="html"><![CDATA[<p>什么是仓库呢? 英文名<strong>repository</strong>，您可以简单理解成一个目录，这个目录里面的所有文件都可以被 Git 管理起来，每个文件的修改、删除， Git 都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>
<!-- more -->
<h2>初始化仓库</h2>
<p>创建一个仓库非常简单，首先，选择一个合适的地方，创建一个空目录:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># open shell (PowerShell on Windows) in a proper directory</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> learngit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> learngit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pwd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/users/hope-studio/learngit</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pwd</code> 命令用于显示当前目录。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>使用 Windows 系统时，为了避免遇到各种莫名其妙的问题，请确保目录名(包括父目录)不包含中文。</li>
<li>为了确保能够执行跨平台的命令，请在 Windows 上安装 PowerShell 并设置为 VS Code 的默认终端。</li>
</ul>
</div>
<p>第二步，通过 <code>git init</code> 命令把这个目录变成 Git 可以管理的仓库:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Initialized</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> empty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> repository</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /users/hope-studio/learngit/.git/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>瞬间 Git 就把仓库建好了，而且告诉您是一个空的仓库(empty Git repository)，可以发现当前目录下多了一个.git 的目录，这个目录是 Git 来跟踪管理仓库的，如果这个目录里面的文件破坏了，Git 仓库也破坏了。</p>
<p>如果您没有看到 .git 目录，那是因为这个目录默认是隐藏的，用 <code>ls -ah</code> 命令就可以看见。</p>
<p>也不一定必须在空目录下创建 Git 仓库，选择一个已经有东西的目录也是可以的。</p>
<div class="hint-container caution">
<p class="hint-container-title">警告</p>
<p>请不要用已经在使用的项目练习 Git!</p>
</div>
<h2>把文件添加到仓库</h2>
<p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如 TXT 文件，网页，所有的程序代码等等，Git 也不例外。版本控制系统可以告诉您每次的改动，比如在第 5 行加了一个单词“Linux”，在第 8 行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从 100KB 改成了 120KB，但到底改了啥，版本控制系统不知道，也没法知道。(Microsoft 的 Word 格式是二进制格式，所以很不幸) 所以要使用版本控制系统，就要以纯文本方式编写文件。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>因为文本是有编码的，比如中文有常用的 GBK 编码，日文有 Shift_JIS 编码，如果没有历史遗留问题，强烈建议使用标准的 UTF-8 编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。</p>
<ul>
<li>具体详情请见 <a href="/code/basic/encoding.html" target="_blank">文件编码</a></li>
</ul>
</div>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>千万不要使用 Windows 自带的记事本编辑任何文本文件。</p>
<ul>
<li>具体详情请见 <a href="/code/windows/notepad.html" target="_blank">记事本遗留问题</a></li>
</ul>
</div>
<p>现在编写一个 readme.txt 文件，内容如下:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>一定要放到 <code>learngit</code> 目录下(子目录也行)，因为这是一个 Git 仓库，放到其他地方 Git 再厉害也找不到这个文件。</p>
<p>把一个文件放到 Git 仓库只需要两步:</p>
<ol>
<li>
<p>用命令 <code>git add</code> 告诉 Git，把文件添加到仓库:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>执行上面的命令，没有任何显示，这就对了，Unix 的哲学是“没有消息就是好消息”，说明添加成功。</p>
</li>
<li>
<p>用命令 <code>git commit</code> 告诉 Git，把文件提交到仓库:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "wrote a readme file"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[master (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">root</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) eaadf4e] wrote a readme file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git commit</code> 命令，<code>-m</code> 后面输入的是本次提交的说明，这样您就能从历史记录里方便地找到改动记录。</p>
<p><code>git commit</code> 命令执行成功后会告诉您，<code>1 file changed</code>: 1 个文件被改动(我们新添加的 readme.txt 文件)；<code>2 insertions</code>: 插入了两行内容(readme.txt 有两行内容)。</p>
</li>
</ol>
<p>为什么 Git 添加文件需要 <code>add</code>，<code>commit</code> 一共两步呢? 因为 <code>commit</code> 可以一次提交很多文件，所以您可以多次 <code>add</code> 不同的文件，比如:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file1.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file2.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file3.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "add 3 files."</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>小结</h2>
<ul>
<li>
<p>初始化一个 Git 仓库，使用 <code>git init</code> 命令。</p>
</li>
<li>
<p>添加文件到 Git 仓库，分两步:</p>
<ol>
<li>使用命令 <code>git add &lt;file&gt;</code>，可反复多次使用，添加多个文件；</li>
<li>使用命令 <code>git commit -m &lt;message&gt;</code>，完成。</li>
</ol>
</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">自定义 Git</title>
    <id>https://blog.ruizhou.cf/software/git/custom.html</id>
    <link href="https://blog.ruizhou.cf/software/git/custom.html"/>
    <updated>2024-10-09T02:08:52.147Z</updated>
    <summary type="html"><![CDATA[<p>在安装 Git 一节中，我们已经配置了 <code>user.name</code> 和 <code>user.email</code>，实际上，Git 还有很多可配置项。</p>
<p>比如，让 Git 显示颜色，会让命令输出看起来更醒目:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> color.ui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>在安装 Git 一节中，我们已经配置了 <code>user.name</code> 和 <code>user.email</code>，实际上，Git 还有很多可配置项。</p>
<p>比如，让 Git 显示颜色，会让命令输出看起来更醒目:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> color.ui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这样，Git 会适当地显示不同的颜色，比如 <code>git status</code> 命令，文件名就会标上颜色。</p>
<h2>配置别名</h2>
<p>有没有经常敲错命令? 比如 <code>git status</code>? <code>status</code> 这个单词真心不好记。</p>
<p>如果敲 <code>git st</code> 就表示 <code>git status</code> 那就简单多了，当然这种偷懒的办法我们是极力赞成的。</p>
<p>我们只需要敲一行命令，告诉 Git，以后 <code>st</code> 就表示 <code>status</code>:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.st</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>好了，现在敲 <code>git st</code> 看看效果。</p>
<p>当然还有别的命令可以简写，很多人都用 <code>co</code> 表示 <code>checkout</code>，<code>ci</code> 表示 <code>commit</code>，<code>br</code> 表示 <code>branch</code>:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.co</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.ci</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.br</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以后提交就可以简写成:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ci</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "bala bala bala..."</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><code>--global</code> 参数是全局参数，也就是这些命令在这台电脑的所有 Git 仓库下都有用。</p>
<p>在撤销修改一节中，我们知道，命令 <code>git reset HEAD file</code> 可以把暂存区的修改撤销掉(unstage)，重新放回工作区。既然是一个 <code>unstage</code> 操作，就可以配置一个 <code>unstage</code> 别名:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.unstage</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'reset HEAD'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>当您敲入命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> unstage</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.py</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>实际上 Git 执行的是:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.py</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>配置一个 <code>git last</code>，让其显示最后一次提交信息:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.last</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'log -1'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这样，用 <code>git last</code> 就能显示最近一次的提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> last</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> adca45d317e6d8a4b23f9811c3d7b7f0f180bfe2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Merge:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bd6ae48</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 291bea8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Mr-Hope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">mister-hope@outlook.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Thu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Aug</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 22:49:22</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2013</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    merge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hello.py</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>甚至还有人丧心病狂地把 <code>lg</code> 配置成了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias.lg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>来看看 <code>git lg</code> 的效果:</p>
<figure><figcaption>命令 git lg 示例图</figcaption></figure>
<p>为什么不早点告诉我? 别激动，咱不是为了多记几个英文单词嘛!</p>
<h2>配置文件</h2>
<p>配置 Git 的时候，加上 <code>--global</code> 是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p>
<p>配置文件放哪了? 每个仓库的 Git 配置文件都放在 <code>.git/config</code> 文件中:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .git/config</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[core]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    repositoryformatversion</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    filemode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    bare</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    logallrefupdates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ignorecase</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    precomposeunicode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[remote </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"origin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@github.com:michaelliao/learngit.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    fetch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +refs/heads/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">:refs/remotes/origin/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[branch </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"master"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> refs/heads/master</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[alias]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    last</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>别名就在 <code>[alias]</code> 后面，要删除别名，直接把对应的行删掉即可。</p>
<p>而当前用户的 Git 配置文件放在用户主目录下的一个隐藏文件 <code>.gitconfig</code> 中:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .gitconfig</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[alias]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    co</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ci</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    br</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    st</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[user]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Name</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> your@email.com</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置。</p>
<h3>别名小结</h3>
<ul>
<li>给 Git 配置好别名，就可以输入命令时偷个懒。我们鼓励偷懒。</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">Git Large File Storage</title>
    <id>https://blog.ruizhou.cf/software/git/gitLFS.html</id>
    <link href="https://blog.ruizhou.cf/software/git/gitLFS.html"/>
    <updated>2024-10-09T02:08:52.170Z</updated>
    <summary type="html"><![CDATA[
<p>Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.</p>
<h2>Getting Started</h2>
<ol>
<li>
<p>Download and install the Git command-line extension. Once downloaded and installed, set up Git LFS and its respective hooks by running:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>You’ll need to run this in your repository directory, once per repository.</p>
</li>
<li>
<p>Select the file types you’d like Git LFS to manage (or directly edit your .gitattributes). You can configure file extensions at anytime.</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> track</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "*.psd"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Make sure to track <code>.gitattributes</code></p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .gitattributes</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ol>]]></summary>
    <content type="html"><![CDATA[
<p>Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.</p>
<h2>Getting Started</h2>
<ol>
<li>
<p>Download and install the Git command-line extension. Once downloaded and installed, set up Git LFS and its respective hooks by running:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>You’ll need to run this in your repository directory, once per repository.</p>
</li>
<li>
<p>Select the file types you’d like Git LFS to manage (or directly edit your .gitattributes). You can configure file extensions at anytime.</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> track</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "*.psd"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Make sure to track <code>.gitattributes</code></p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .gitattributes</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ol>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">忽略特殊文件</title>
    <id>https://blog.ruizhou.cf/software/git/ignore.html</id>
    <link href="https://blog.ruizhou.cf/software/git/ignore.html"/>
    <updated>2024-10-09T02:08:52.171Z</updated>
    <summary type="html"><![CDATA[<p>有些时候，您必须把某些文件放到 Git 工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次 <code>git status</code> 都会显示 <code>Untracked files</code> ...，有强迫症的童鞋心里肯定不爽。</p>
<p>好在 Git 考虑到了大家的感受，这个问题解决起来也很简单，在 Git 工作区的根目录下创建一个特殊的 <code>.gitignore</code> 文件，然后把要忽略的文件名填进去，Git 就会自动忽略这些文件。</p>
<p>忽略文件的原则是:</p>
<ul>
<li>忽略操作系统自动生成的文件，比如缩略图等；</li>
<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的 <code>.class</code> 文件；</li>
<li>忽略您自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>有些时候，您必须把某些文件放到 Git 工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次 <code>git status</code> 都会显示 <code>Untracked files</code> ...，有强迫症的童鞋心里肯定不爽。</p>
<p>好在 Git 考虑到了大家的感受，这个问题解决起来也很简单，在 Git 工作区的根目录下创建一个特殊的 <code>.gitignore</code> 文件，然后把要忽略的文件名填进去，Git 就会自动忽略这些文件。</p>
<p>忽略文件的原则是:</p>
<ul>
<li>忽略操作系统自动生成的文件，比如缩略图等；</li>
<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的 <code>.class</code> 文件；</li>
<li>忽略您自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>
</ul>
<p>举个例子:</p>
<p>假设您在 Windows 下进行 Python 开发，Windows 会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有 <code>Desktop.ini</code> 文件，因此您需要忽略 Windows 自动生成的垃圾文件:</p>
<div class="language-gitignore line-numbers-mode" data-highlighter="shiki" data-ext="gitignore" data-title="gitignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Thumbs.db</span></span>
<span class="line"><span>ehthumbs.db</span></span>
<span class="line"><span>Desktop.ini</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，继续忽略 Python 编译产生的 <code>.pyc</code>、<code>.pyo</code>、<code>dist</code> 等文件或目录:</p>
<div class="language-gitignore line-numbers-mode" data-highlighter="shiki" data-ext="gitignore" data-title="gitignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>_.py[cod]</span></span>
<span class="line"><span>_.so</span></span>
<span class="line"><span>_.egg</span></span>
<span class="line"><span>_.egg-info</span></span>
<span class="line"><span>dist</span></span>
<span class="line"><span>build</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加上您自己定义的文件，最终得到一个完整的 <code>.gitignore</code> 文件，内容如下:</p>
<div class="language-gitignore line-numbers-mode" data-highlighter="shiki" data-ext="gitignore" data-title="gitignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># Windows:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Thumbs.db</span></span>
<span class="line"><span>ehthumbs.db</span></span>
<span class="line"><span>Desktop.ini</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Python:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>_.py[cod]</span></span>
<span class="line"><span>_.so</span></span>
<span class="line"><span>_.egg</span></span>
<span class="line"><span>_.egg-info</span></span>
<span class="line"><span>dist</span></span>
<span class="line"><span>build</span></span>
<span class="line"><span></span></span>
<span class="line"><span># My configurations:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.ini</span></span>
<span class="line"><span>deploy_key_rsa</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后一步就是把 <code>.gitignore</code> 也提交到 Git，就完成了! 当然检验 <code>.gitignore</code> 的标准是 <code>git status</code> 命令是不是说 <code>working directory clean</code>。</p>
<p>使用 Windows 的童鞋注意了，如果您在资源管理器里新建一个 <code>.gitignore</code> 文件，它会非常弱智地提示您必须输入文件名，但是在文本编辑器里“保存”或者“另存为”就可以把文件保存为 <code>.gitignore</code> 了。</p>
<p>有些时候，您想添加一个文件到 Git，但发现添加不了，原因是这个文件被 <code>.gitignore</code> 忽略了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> App.class</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> following</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> paths</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> are</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ignored</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> one</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .gitignore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> files:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">App.class</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Use</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> really</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> want</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> them.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您确实想添加该文件，可以用 <code>-f</code> 强制添加到 Git:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> App.class</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>或者您发现，可能是 <code>.gitignore</code> 写得有问题，需要找出来到底哪个规则写错了，可以用 <code>git check-ignore</code> 命令检查:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> check-ignore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> App.class</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">.gitignore:3:*.class</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    App.class</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>Git 会告诉我们，<code>.gitignore</code> 的第 3 行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p>
<h2>格式规范</h2>
<ul>
<li>
<p>所有空行或者以 # 开头的行都会被 Git 忽略。</p>
</li>
<li>
<p>可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。</p>
</li>
<li>
<p>匹配模式可以以(<code>/</code>)开头防止递归。</p>
</li>
<li>
<p>匹配模式可以以(<code>/</code>)结尾指定目录。</p>
</li>
<li>
<p>要忽略指定模式以外的文件或目录，可以在模式前加上叹号(<code>!</code>)取反。</p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">glob 模式</p>
<p>所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。星号(<code>*</code>)匹配零个或多个任意字符；<code>[abc]</code> 匹配任何一个列在方括号中的字符 (这个例子要么匹配一个 <code>a</code>，要么匹配一个 <code>b</code>，要么匹配一个 <code>c</code>)； 问号(<code>?</code>)只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配(比如 <code>[0-9]</code> 表示匹配所有 <code>0</code> 到 <code>9</code> 的数字)。使用两个星号(<code>**</code>)表示匹配任意中间目录，比如 <code>a/**/z</code> 可以匹配 <code>a/z</code> 、<code>a/b/z</code> 或 <code>a/b/c/z</code> 等。</p>
</div>
<p>一个具体的例子:</p>
<div class="language-gitignore line-numbers-mode" data-highlighter="shiki" data-ext="gitignore" data-title="gitignore" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略所有的 .a 文件</span></span>
<span class="line"><span>*.a</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 但跟踪所有的 lib.a，即便您在前面忽略了 .a 文件</span></span>
<span class="line"><span>!lib.a</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO</span></span>
<span class="line"><span>/TODO</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略任何目录下名为 build 的文件夹</span></span>
<span class="line"><span>build/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt</span></span>
<span class="line"><span>doc/*.txt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略 doc/ 目录及其所有子目录下的 .pdf 文件</span></span>
<span class="line"><span>doc/**/*.pdf</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>GitHub 有一个十分详细的针对数十种项目及语言的 .gitignore 文件列表， 您可以在 <a href="https://github.com/github/gitignore" target="_blank" rel="noopener noreferrer">https://github.com/github/gitignore</a> 找到它。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">多个 .gitignore</p>
<p>在最简单的情况下，一个仓库可能只根目录下有一个 .gitignore 文件，它递归地应用到整个仓库中。然而，子目录下也可以有额外的 .gitignore 文件。子目录中的 .gitignore 文件中的规则只作用于它所在的目录中。(Linux 内核的源码库拥有 206 个 .gitignore 文件。)</p>
</div>
<h2>小结</h2>
<ul>
<li>
<p>忽略某些文件时，需要编写 <code>.gitignore</code>；</p>
</li>
<li>
<p><code>.gitignore</code> 文件本身要放到版本库里，并且可以对 <code>.gitignore</code> 做版本管理!</p>
</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">安装与配置</title>
    <id>https://blog.ruizhou.cf/software/git/install.html</id>
    <link href="https://blog.ruizhou.cf/software/git/install.html"/>
    <updated>2024-10-09T02:08:52.175Z</updated>
    <summary type="html"><![CDATA[<h2>Git 下载</h2>
<p>官网在国外，网速较慢。在安装 Git 前推荐安装好 <a href="/software/vscode/" target="_blank">VS Code</a>。</p>
<ul>
<li><a href="https://git-scm.com/downloads/" target="_blank" rel="noopener noreferrer">官网下载</a></li>
</ul>
<h2>Git 的安装</h2>
<ol>
<li>
<p>同意协议并选择安装位置 (不建议更改安装位置)</p>
<figure><figcaption>安装协议</figcaption></figure>
<figure><figcaption>安装位置</figcaption></figure>
</li>
<li>
<p>启用 LFS 支持，其他随意 (影响不大)</p>
<figure><figcaption>组件选择</figcaption></figure>
</li>
<li>
<p>自行决定是否创建启动菜单</p>
<figure><figcaption>是否创建启动菜</figcaption></figure>
</li>
<li>
<p>选择使用 VS Code 作为 git 的默认编辑器。</p>
<figure><figcaption>设置默认编辑器</figcaption></figure>
</li>
<li>
<p>选择 Git 使用的默认分支名，GitHub 已经将默认分支名称改为 main。</p>
<figure><figcaption>设置默认分支名称</figcaption></figure>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>在 2020 年的黑人运动中，部分黑人认为 master 这个词是对它们的冒犯。</p>
</div>
</li>
<li>
<p>选择第二项，这将允许您在第三方工具中使用 Git，同时不会覆盖默认的 Windows 命令。</p>
<figure><figcaption>Git 命令行</figcaption></figure>
</li>
<li>
<p>使用 OpenSSL Library</p>
<figure><figcaption>Git SSL</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果自己公司有 CA，或者在开发中需要 Git 承认某些自签 CA，则需要选择第二项。</p>
</div>
</li>
<li>
<p>务必选择最后一项 “原样检出与提交”</p>
<figure><figcaption>Git 行尾设置</figcaption></figure>
</li>
<li>
<p>选择 Git 终端</p>
<figure><figcaption>Git 终端</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您对 VS Code 和 PowerShell 还不熟悉，建议选择 MinTTY，以方便您接下来在学习中对 Git Bash 的临时使用。</p>
</div>
</li>
<li>
<p>选择 <code>git pull</code> 的默认行为，保持默认不要改动</p>
<figure><figcaption>Git Pull Action</figcaption></figure>
</li>
<li>
<p>选择凭据储存管理器，请选择第一个跨平台管理器</p>
<figure><figcaption>凭据储存管理器设置</figcaption></figure>
</li>
<li>
<p>额外的选项确认，均勾选即可</p>
<figure><figcaption>额外选项</figcaption></figure>
</li>
<li>
<p>一些实验性的功能，通常不太稳定或有 bug，不同 Git 版本会有差异，可根据自身情况确定</p>
<figure><figcaption>实验性功能</figcaption></figure>
</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>Git 下载</h2>
<p>官网在国外，网速较慢。在安装 Git 前推荐安装好 <a href="/software/vscode/" target="_blank">VS Code</a>。</p>
<ul>
<li><a href="https://git-scm.com/downloads/" target="_blank" rel="noopener noreferrer">官网下载</a></li>
</ul>
<h2>Git 的安装</h2>
<ol>
<li>
<p>同意协议并选择安装位置 (不建议更改安装位置)</p>
<figure><figcaption>安装协议</figcaption></figure>
<figure><figcaption>安装位置</figcaption></figure>
</li>
<li>
<p>启用 LFS 支持，其他随意 (影响不大)</p>
<figure><figcaption>组件选择</figcaption></figure>
</li>
<li>
<p>自行决定是否创建启动菜单</p>
<figure><figcaption>是否创建启动菜</figcaption></figure>
</li>
<li>
<p>选择使用 VS Code 作为 git 的默认编辑器。</p>
<figure><figcaption>设置默认编辑器</figcaption></figure>
</li>
<li>
<p>选择 Git 使用的默认分支名，GitHub 已经将默认分支名称改为 main。</p>
<figure><figcaption>设置默认分支名称</figcaption></figure>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>在 2020 年的黑人运动中，部分黑人认为 master 这个词是对它们的冒犯。</p>
</div>
</li>
<li>
<p>选择第二项，这将允许您在第三方工具中使用 Git，同时不会覆盖默认的 Windows 命令。</p>
<figure><figcaption>Git 命令行</figcaption></figure>
</li>
<li>
<p>使用 OpenSSL Library</p>
<figure><figcaption>Git SSL</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果自己公司有 CA，或者在开发中需要 Git 承认某些自签 CA，则需要选择第二项。</p>
</div>
</li>
<li>
<p>务必选择最后一项 “原样检出与提交”</p>
<figure><figcaption>Git 行尾设置</figcaption></figure>
</li>
<li>
<p>选择 Git 终端</p>
<figure><figcaption>Git 终端</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您对 VS Code 和 PowerShell 还不熟悉，建议选择 MinTTY，以方便您接下来在学习中对 Git Bash 的临时使用。</p>
</div>
</li>
<li>
<p>选择 <code>git pull</code> 的默认行为，保持默认不要改动</p>
<figure><figcaption>Git Pull Action</figcaption></figure>
</li>
<li>
<p>选择凭据储存管理器，请选择第一个跨平台管理器</p>
<figure><figcaption>凭据储存管理器设置</figcaption></figure>
</li>
<li>
<p>额外的选项确认，均勾选即可</p>
<figure><figcaption>额外选项</figcaption></figure>
</li>
<li>
<p>一些实验性的功能，通常不太稳定或有 bug，不同 Git 版本会有差异，可根据自身情况确定</p>
<figure><figcaption>实验性功能</figcaption></figure>
</li>
</ol>
<h2>Git Bash</h2>
<p>安装完成后，您可以通过搜索找到“Git Bash” (Mac 上叫 Git Shell)，这是一个 Git 提供的命令窗口，您可以在这里运行 Git 命令。</p>
<figure><figcaption>Git Bash</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您对 VS Code 和 PowerShell 还不熟悉，您可以在接下来的学习与操作中使用 Git Bash。</p>
<p>否则，你可以:</p>
<ul>
<li>在 Linux 上直接通过终端来使用 Git。</li>
<li>在 Windows 上安装最新的 PowerShell，并在终端中使用 Git。</li>
</ul>
</div>
<h2>Git 的初次配置</h2>
<ol>
<li>
<p>为 Git 全局配置用户名和邮箱。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Your Name"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "email@example.com"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>将上方的字符串换成您自己的名字和邮箱。</p>
<p>如:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Mr.Hope"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "mister-hope@outlook.com"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>由于 Git 是一个多人协作的版本控制系统，首先您应当设置您的身份。</p>
</div>
</li>
<li>
<p>创建 SSH Key。打开 Shell (Windows 下打开 cmd)，创建 SSH Key:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "youremail@example.com"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>您需要把邮件地址换成您自己的邮件地址，然后一路回车，使用默认值即可，由于这个 Key 也不是用于军事目的，所以也无需设置密码。</p>
<p>如果一切顺利的话，可以在用户主目录里找到 .ssh 目录，里面有 id_rsa 和 id_rsa.pub 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa 是私钥，不能泄露出去，id_rsa.pub 是公钥，可以放心地告诉任何人。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>
<p>ssh-keygen 用来生成一堆密钥，作为您的身份识别信息，您可以放心的把公钥交给别人，留下自己的私钥。</p>
</li>
<li>
<p><code>.ssh</code> 目录是默认隐藏的。Win10 查看隐藏文件详见 <a href="/code/windows/hidden-file.html" target="_blank">显示隐藏的文件</a></p>
</li>
</ul>
</div>
<div class="hint-container info">
<p class="hint-container-title">RSA</p>
<p>RSA 是一种不对称加密，公钥的加密只能通过私钥解开，反之私钥的加密只能由公钥解开。也就是说当您给别人自己的公钥的时候，他们也无法冒充您。</p>
</div>
</li>
<li>
<p>打开 <a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a> 并选择 "Sign in" 注册自己的账号。</p>
<figure><figcaption>GitHub 界面简介</figcaption></figure>
<p>登陆 GitHub 后，点击右上角头像，进入设置。</p>
<p>进入 "安全设置" 下的 "SSH 公钥" 界面。</p>
<figure><figcaption>GitHub 界面简介</figcaption></figure>
<p>在标题中填写公钥的备注名称，把 id_rsa.pub 文件的内容粘贴到底下的输入框中，设置一个标识此电脑的备注。</p>
</li>
</ol>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Git 介绍</title>
    <id>https://blog.ruizhou.cf/software/git/intro.html</id>
    <link href="https://blog.ruizhou.cf/software/git/intro.html"/>
    <updated>2024-10-09T02:08:52.178Z</updated>
    <summary type="html"><![CDATA[<p>Git 是什么?</p>
<p>Git 是目前世界上最先进的分布式版本控制系统(没有之一)。</p>
]]></summary>
    <content type="html"><![CDATA[<p>Git 是什么?</p>
<p>Git 是目前世界上最先进的分布式版本控制系统(没有之一)。</p>
<!-- more -->
<h2>版本控制系统</h2>
<p>什么是“版本控制”? 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。您可以对任何类型的文件进行版本控制。</p>
<ul>
<li>如果您是位图形或网页设计师，可能会需要保存某一幅图片或页面布局文件的所有修订版本(这或许是您非常渴望拥有的功能)</li>
<li>如果您是一名作家，您可能需要保存您对作品的每一次修改以便将来如果随着情节发展需要变动可以撤销它们。</li>
<li>甚至您是一名学生，您的论文也可以进行版本控制。</li>
<li>哪怕您工作了，保存各种报表的各种版本也是没有坏处的。</li>
</ul>
<p>在很多情况下，采用版本控制系统(VCS)都是个明智的选择! 有了它您就可以将选定的文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，您可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等。使用版本控制系统通常还意味着，就算您乱来一气把整个项目中的文件改的改删的删，您也照样可以轻松恢复到原先的样子。但额外增加的工作量却微乎其微。</p>
<h3>本地版本控制系统</h3>
<p>许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。这么做唯一的好处就是简单，但是特别容易犯错。有时候会混淆所在的工作目录，一不小心会写错文件或者覆盖意想外的文件。为了解决这个问题，人们很久以前就开发了许多种本地版本控制系统，大多都是采用某种简单的数据库来记录文件的历次更新差异。</p>
<figure><figcaption>本地版本控制系统</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">RCS</p>
<p>其中最流行的一种叫做 RCS，现今许多计算机系统上都还看得到它的踪影。RCS 的工作原理是在硬盘上保存补丁集(补丁是指文件修订前后的变化)；通过应用所有的补丁，可以重新计算出各个版本的文件内容。</p>
</div>
<h3>集中化的版本控制系统</h3>
<p>接下来人们又遇到一个问题，如何让在不同系统上的开发者协同工作? 于是，集中化的版本控制系统(Centralized Version Control Systems，简称 CVCS)应运而生。这类系统，诸如 CVS、Subversion 以及 Perforce 等，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。多年以来，这已成为版本控制系统的标准做法。</p>
<p>集中式版本控制系统版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，您要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。</p>
<p>这种做法带来了许多好处，特别是相较于老式的本地 VCS 来说 现在，每个人都可以在一定程度上看到项目中的其他人正在做些什么。而管理员也可以轻松掌控每个开发者的权限，并且管理一个 CVCS 要远比在各个客户端上维护本地数据库来得轻松容易。</p>
<figure><figcaption>Git示例图</figcaption></figure>
<p>CVS 作为最早的开源而且免费的集中式版本控制系统，直到现在还有不少人在用。由于 CVS 自身设计的问题，会造成提交文件不完整，版本库莫名其妙损坏的情况。同样是开源而且免费的 SVN 修正了 CVS 的一些稳定性问题，是目前用得最多的集中式版本库控制系统。</p>
<p>事分两面，有好有坏。集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个 10M 的文件就需要 5 分钟。另外若中央服务器的单点故障。如果宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作。如果中心数据库所在的磁盘发生损坏，又没有做恰当备份，毫无疑问您将丢失所有数据——包括项目的整个变更历史，只剩下人们在各自机器上保留的单独快照。本地版本控制系统也存在类似问题，只要整个项目的历史记录被保存在单一位置，就有丢失所有历史更新记录的风险。</p>
<h3>分布式版本控制系统</h3>
<p>于是分布式版本控制系统(Distributed Version Control System，简称 DVCS)面世了。</p>
<p>分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，您工作的时候，就不需要联网了，因为版本库就在您自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢? 比方说您在自己电脑上改了文件 A，您的同事也在他的电脑上改了文件 A，这时，您们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p>
<p>和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。</p>
<figure><figcaption>分布式版本控制系统</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能您们俩不在一个局域网内，两台电脑互相访问不了，也可能今天您的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。</p>
</div>
<p>在这类系统中，像 Git、Mercurial、Bazaar 以及 Darcs 等，客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来，包括完整的历史记录。这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。</p>
<p>更进一步，许多这类系统都可以指定和若干不同的远端代码仓库进行交互。籍此，您就可以在同一个项目中，分别和不同工作小组的人相互协作。您可以根据需要设定不同的协作流程，比如层次模型式的工作流，而这在以前的集中式系统中是无法实现的。</p>
]]></content>
    <author>
      <name>Mr.Hope &amp; 廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>Mr.Hope &amp; 廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">高级合并</title>
    <id>https://blog.ruizhou.cf/software/git/merge.html</id>
    <link href="https://blog.ruizhou.cf/software/git/merge.html"/>
    <updated>2024-10-09T02:08:52.179Z</updated>
    <summary type="html"><![CDATA[<h2>Squash merge</h2>
<p>通过使用 <code>--squash</code> 选项，你可以在合并中将多个 commit 合并为一个。</p>
<p>也就是对于以下的例子</p>
<p><code>git merge feature</code> 得到的结果为:</p>
<p>而如果 <code>feature</code> 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 <code>git merge --squash feature</code> 得到:</p>
<h2>Cherry pick</h2>
<p>有些时候，我们可能需要提取其他分支的某个 commit，这个时候我们可以用 cherry pick 进行操作。</p>]]></summary>
    <content type="html"><![CDATA[<h2>Squash merge</h2>
<p>通过使用 <code>--squash</code> 选项，你可以在合并中将多个 commit 合并为一个。</p>
<p>也就是对于以下的例子</p>
<p><code>git merge feature</code> 得到的结果为:</p>
<p>而如果 <code>feature</code> 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 <code>git merge --squash feature</code> 得到:</p>
<h2>Cherry pick</h2>
<p>有些时候，我们可能需要提取其他分支的某个 commit，这个时候我们可以用 cherry pick 进行操作。</p>
<p>在这种情况下，我们可以回到 main 分支，执行 <code>git cherry-pick &lt;commit id&gt;</code> 来挑拣某个提交，当然，你可以一并在命令中提交挑拣多个 commit。</p>
<ul>
<li><code>git cherry-pick &lt;commit id 1&gt; &lt;commit id 2&gt;</code> 表示挑拣 commit id 1 和 commit id 2</li>
<li><code>git cherry-pick &lt;commit id 1&gt;...&lt;commit id 2&gt;</code> 表示挑拣 commit id 1 与 commit id 2 之间 (包括两者) 的所有提交</li>
<li><code>git cherry-pick &lt;branch&gt;</code> 表示挑拣该分支最新的提交</li>
</ul>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Git 代理</title>
    <id>https://blog.ruizhou.cf/software/git/proxy.html</id>
    <link href="https://blog.ruizhou.cf/software/git/proxy.html"/>
    <updated>2024-10-09T02:08:52.200Z</updated>
    <summary type="html"><![CDATA[<p>由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。</p>
<h2>代理设置</h2>
<p>通常情况下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>
<p>在 Windows 下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>
<details class="hint-container details"><summary>Windows 例子</summary>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HTTP_PROXY=http://127.0.0.1:1080</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HTTPS_PROXY=http://127.0.0.1:1080</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></details>]]></summary>
    <content type="html"><![CDATA[<p>由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。</p>
<h2>代理设置</h2>
<p>通常情况下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>
<p>在 Windows 下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>
<details class="hint-container details"><summary>Windows 例子</summary>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HTTP_PROXY=http://127.0.0.1:1080</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HTTPS_PROXY=http://127.0.0.1:1080</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>Linux 例子</summary>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> HTTP_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">1080</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> HTTPS_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">1080</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p>上述做法仅对当前终端有效，如果需要永久生效，可以将上述命令添加到系统环境变量 (Windows) 或 <code>~/.bashrc</code> (Linux) 中。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><a href="/code/windows/env-variable.html" target="_blank">Windows 添加环境变量</a></p>
</div>
<h2>SSH 配置</h2>
<p>如果你在使用 22 端口通过 SSH 使用 Git，那么你需要在用户目录下的 <code>.ssh</code> 目录新建 <code>config</code> 文件，并输入以下内容:</p>
<div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Host github.com</span></span>
<span class="line"><span>  User git</span></span>
<span class="line"><span>  Port 22</span></span>
<span class="line"><span>  Hostname github.com</span></span>
<span class="line"><span>  # 这里在 Windows 下需要替换成实际目录，如 "C:\Users\mister-hope\.ssh\id_rsa"</span></span>
<span class="line"><span>  IdentityFile "~/.ssh/id_rsa"</span></span>
<span class="line"><span>  TCPKeepAlive yes</span></span>
<span class="line"><span>  # Ubuntu 需要安装 corkscrew</span></span>
<span class="line"><span>  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p</span></span>
<span class="line"><span>  # Windows 可以改为 Git 安装目录下的 connect，如</span></span>
<span class="line"><span>  # ProxyCommand "C:\Program Files\Git\mingw64\bin\connect" -S 127.0.0.1:10808 -a none %h %p</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Host ssh.github.com</span></span>
<span class="line"><span>  User git</span></span>
<span class="line"><span>  Port 443</span></span>
<span class="line"><span>  Hostname ssh.github.com</span></span>
<span class="line"><span>  # 这里在 Windows 下需要替换成实际目录，如 "C:\Users\mister-hope\.ssh\id_rsa"</span></span>
<span class="line"><span>  IdentityFile "~/.ssh/id_rsa"</span></span>
<span class="line"><span>  TCPKeepAlive yes</span></span>
<span class="line"><span>  # Ubuntu 需要安装 corkscrew</span></span>
<span class="line"><span>  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p</span></span>
<span class="line"><span>  # Windows 可以改为 Git 安装目录下的 connect，如</span></span>
<span class="line"><span>  # ProxyCommand "C:\Program Files\Git\mingw64\bin\connect" -S 127.0.0.1:10808 -a none %h %p</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果在 WSL 使用，获取 Windows 的 IP 地址命令为 <code>ip route | grep default | awk '{print $3}'</code>。</p>
<p>特别注意，如不进行额外配置，每次重启后主机地址都会发生变化。</p>
</div>
<p>你可以使用 <code>ssh -T git@github.com</code> 来测试你的代理配置是否有效。</p>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">撤销操作</title>
    <id>https://blog.ruizhou.cf/software/git/recall.html</id>
    <link href="https://blog.ruizhou.cf/software/git/recall.html"/>
    <updated>2024-10-09T02:08:52.201Z</updated>
    <summary type="html"><![CDATA[<p>在任何一个阶段，您都有可能想要撤消某些操作。这里，我们将会学习几个撤消您所做修改的基本工具。注
意，有些撤消操作是不可逆的。这是在使用 Git 的过程中，会因为操作失误而导致之前的工作丢失的少有的几个
地方之一。</p>
<p>有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。此时，可以运行带有 <code>--amend</code> 选
项的提交命令来重新提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --amend</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>在任何一个阶段，您都有可能想要撤消某些操作。这里，我们将会学习几个撤消您所做修改的基本工具。注
意，有些撤消操作是不可逆的。这是在使用 Git 的过程中，会因为操作失误而导致之前的工作丢失的少有的几个
地方之一。</p>
<p>有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。此时，可以运行带有 <code>--amend</code> 选
项的提交命令来重新提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --amend</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这个命令会将暂存区中的文件提交。如果自上次提交以来您还未做任何修改(例如，在上次提交后马上执行了
此命令)， 那么快照会保持不变，而您所修改的只是提交信息。</p>
<p>文本编辑器启动后，可以看到之前的提交信息。编辑后保存会覆盖原来的提交信息。</p>
<p>例如，您提交后发现忘记了暂存某些需要的修改，可以像下面这样操作:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'initial commit'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> forgotten_file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --amend</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终您只会有一个提交——第二次提交将代替第一次提交的结果。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当您在修补最后的提交时，并不是通过用改进后的提交 原位替换 掉旧有提交的方式来修复
的， 理解这一点非常重要。从效果上来说，就像是旧有的提交从未存在过一样，它并不会出
现在仓库的历史中。</p>
<p>修补提交最明显的价值是可以稍微改进您最后的提交，而不会让“啊，忘了添加一个文件”或
者 “小修补，修正笔误”这种提交信息弄乱您的仓库历史。</p>
</div>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">远程仓库</title>
    <id>https://blog.ruizhou.cf/software/git/remote.html</id>
    <link href="https://blog.ruizhou.cf/software/git/remote.html"/>
    <updated>2024-10-09T02:08:52.202Z</updated>
    <summary type="html"><![CDATA[<h2>什么是远程仓库</h2>
<p>Git 是分布式版本控制系统，同一个 Git 仓库，可以分布到不同的机器上。怎么分布呢? 最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。</p>
<p>实际情况往往是这样，找一台电脑充当服务器的角色，每天 24 小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。</p>
<p>完全可以自己搭建一台运行 Git 的服务器，不过现阶段，为了学 Git 先搭个服务器绝对是小题大作。好在这个世界上有个叫 GitHub 的神奇的网站，从名字就可以看出，这个网站就是提供 Git 仓库托管服务的，所以，只要注册一个 GitHub 账号，就可以免费获得 Git 远程仓库。</p>]]></summary>
    <content type="html"><![CDATA[<h2>什么是远程仓库</h2>
<p>Git 是分布式版本控制系统，同一个 Git 仓库，可以分布到不同的机器上。怎么分布呢? 最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。</p>
<p>实际情况往往是这样，找一台电脑充当服务器的角色，每天 24 小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。</p>
<p>完全可以自己搭建一台运行 Git 的服务器，不过现阶段，为了学 Git 先搭个服务器绝对是小题大作。好在这个世界上有个叫 GitHub 的神奇的网站，从名字就可以看出，这个网站就是提供 Git 仓库托管服务的，所以，只要注册一个 GitHub 账号，就可以免费获得 Git 远程仓库。</p>
<p>在继续阅读后续内容前，请自行注册 GitHub 账号。由于您的本地 Git 仓库和 GitHub 仓库之间的传输是通过 SSH 加密的，所以，需要一点设置:</p>
<ul>
<li>
<p>第 1 步: 创建 SSH Key。在用户主目录下，看看有没有.ssh 目录，如果有，再看看这个目录下有没有 id_rsa 和 id_rsa.pub 这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开 Shell (Windows 下打开 Git Bash)，创建 SSH Key:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "youremail@example.com"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>您需要把邮件地址换成您自己的邮件地址，然后一路回车，使用默认值即可，由于这个 Key 也不是用于军事目的，所以也无需设置密码。</p>
<p>如果一切顺利的话，可以在用户主目录里找到.ssh 目录，里面有 id_rsa 和 id_rsa.pub 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa 是私钥，不能泄露出去，id_rsa.pub 是公钥，可以放心地告诉任何人。</p>
</li>
<li>
<p>第 2 步: 登陆 GitHub，点击右上角头像，进入设置。</p>
<p>进入安全设置下的 SSH 公钥界面。</p>
<p>在标题中填写公钥的备注名称，把 id_rsa.pub 文件的内容粘贴到底下的输入框中。</p>
</li>
</ul>
<p>为什么 GitHub 需要 SSH Key 呢? 因为 GitHub 需要识别出您推送的提交确实是您推送的，而不是别人冒充的，而 Git 支持 SSH 协议，所以，GitHub 只要知道了您的公钥，就可以确认只有您自己才能推送。</p>
<p>当然，GitHub 允许您添加多个 Key。假定您有若干电脑，您一会儿在公司提交，一会儿在家里提交，只要把每台电脑的 Key 都添加到 GitHub，就可以在每台电脑上往 GitHub 推送了。</p>
<p>最后友情提示，在 GitHub 上免费托管的 Git 仓库，任何人都可以看到喔(但只有您自己才能改)。所以，不要把敏感信息放进去。</p>
<p>如果您不想让别人看到 Git 库，一是让 GitHub 把公开的仓库变成私有的，这样别人就看不见了(不可读更不可写)。另一个办法是自己动手，搭一个 Git 服务器，因为是您自己的 Git 服务器，所以别人也是看不见的。</p>
<p>确保您拥有一个 GitHub 账号后，我们就即将开始远程仓库的学习。</p>
<h2>添加远程库</h2>
<p>现在的情景是，您已经在本地创建了一个 Git 仓库后，又想在 GitHub 创建一个 Git 仓库，并且让这两个仓库进行远程同步，这样，GitHub 上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。</p>
<p>首先，登陆 GitHub，然后，在右上角找到 “+” 按钮，点击 "New Repository"。</p>
<p>在项目填入 learngit，其他保持默认设置，点击“创建”按钮，就成功地创建了一个新的 Git 仓库:</p>
<p>目前，在 GitHub 上的这个 learngit 仓库还是空的，GitHub 告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到 GitHub 仓库。</p>
<p>现在，我们根据 GitHub 的提示，在本地的 learngit 仓库下运行命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@github.com:Hope-Studio/learngit.git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>请千万注意，把上面的 Hope-Studio 替换成您自己的 GitHub 账户名，否则，您在本地关联的就是希望工作室的远程库，关联没有问题，但是推送是推不上去的，因为您的 SSH Key 公钥不在希望工作室的账户列表中。</p>
<p>添加后，远程库的名字就是 <code>origin</code>，这是 Git 默认的叫法，也可以改成别的。</p>
<p>下一步，就可以把本地库的所有内容推送到远程库上:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Counting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 20,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Delta</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> compression</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> threads.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Compressing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (15/15), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Writing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (20/20), 1.64 KiB | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">560.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> KiB/s,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Resolving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deltas:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (5/5), done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github.com:Hope-Studio/learngit.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [new </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">branch]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">      master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'master'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> track</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'master'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'origin'.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把本地库的内容推送到远程，用 <code>git push</code> 命令，实际上是把当前分支 <code>master</code> 推送到远程。</p>
<p>由于远程库是空的，我们第一次推送 <code>master</code> 分支时，加上了 <code>-u</code> 参数，Git 不但会把本地的 <code>master</code> 分支内容推送的远程新的 <code>master</code> 分支，还会把本地的 <code>master</code> 分支和远程的 <code>master</code> 分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>
<p>推送成功后，可以立刻在 GitHub 页面中看到远程库的内容已经和本地一模一样:</p>
<p>从现在起，只要本地作了提交，就可以通过命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>把本地 <code>master</code> 分支的最新修改推送至 GitHub，现在，您就拥有了真正的分布式版本库!</p>
<h2>SSH 警告</h2>
<p>当您第一次使用 Git 的 clone 或者 push 命令连接 GitHub 时，会得到一个警告:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> authenticity</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'github.com (xx.xx.xx.xx)'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> can't be established.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">RSA key fingerprint is xx.xx.xx.xx.xx.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Are you sure you want to continue connecting (yes/no)?</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为 Git 使用 SSH 连接，而 SSH 连接在第一次验证 GitHub 服务器的 Key 时，需要您确认 GitHub 的 Key 的指纹信息是否真的来自 GitHub 的服务器，输入 <code>yes</code> 回车即可。</p>
<p>Git 会输出一个警告，告诉您已经把 GitHub 的 Key 添加到本机的一个信任列表里了:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Warning: Permanently added 'github.com' (RSA) to the list of known hosts.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这个警告只会出现一次，后面的操作就不会有任何警告了。</p>
<p>如果您实在担心有人冒充 GitHub 服务器，输入 <code>yes</code> 前可以对照 GitHub 的 RSA Key 的指纹信息是否与 SSH 连接给出的一致。</p>
<h3>关联小结</h3>
<p>要关联一个远程库，使用命令 <code>git remote add origin git@&lt;server-name&gt;:&lt;path&gt;/&lt;repo-name&gt;.git</code>；</p>
<p>关联后，使用命令 <code>git push -u origin master</code> 第一次推送 master 分支的所有内容；</p>
<p>此后，每次本地提交后，只要有必要，就可以使用命令 <code>git push origin master</code> 推送最新修改；</p>
<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而 SVN 在没有联网的时候是拒绝干活的! 当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了!</p>
<h2>从远程库克隆</h2>
<p>上次我们讲了先有本地库，后有远程库的时候，如何关联远程库。</p>
<p>现在，假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。</p>
<p>首先，登陆 GitHub，创建一个新的仓库，名字叫 <code>gitskills</code>:</p>
<p>我们勾选使用 “readme 初始化项目”，这样 GitHub 会自动为我们创建一个 README.md 文件。创建完毕后，可以看到 README.md 文件。</p>
<p>现在，远程库已经准备好了，下一步是用命令 <code>git clone</code> 克隆一个本地库:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@github.com:Hope-Studio/gitskills.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'gitskills'...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Counting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 3,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> done.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remote:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), pack-reused 3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Receiving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> objects:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 100%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (3/3), done.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。</p>
</div>
<p>注意把 Git 库的地址换成您自己的，然后进入 <code>gitskills</code> 目录看看，已经有 README.md 文件了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gitskills</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">README.md</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有多个人协作开发，那么每个人各自从远程克隆一份就可以了。</p>
<p>您也许还注意到，GitHub 给出的地址不止一个，还可以用 <a href="https://github.com/Hope-Studio/gitskills.git" target="_blank" rel="noopener noreferrer">https://github.com/Hope-Studio/gitskills.git</a> 这样的地址。实际上，Git 支持多种协议，默认的 <code>git://</code> 使用 ssh，但也可以使用 HTTPS 等其他协议。</p>
<p>使用 HTTPS 除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放 http 端口的公司内部就无法使用 ssh 协议而只能用 https。</p>
<h3>克隆小结</h3>
<p>要克隆一个仓库，首先必须知道仓库的地址，然后使用 <code>git clone</code> 命令克隆。</p>
<p>Git 支持多种协议，包括 https，但通过 ssh 支持的原生 git 协议速度最快。</p>
<h2>从远程仓库中抓取</h2>
<p>从远程仓库中获得数据，可以执行:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">remot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这个命令会访问远程仓库，从中拉取所有您还没有的数据。执行完成后，您将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。</p>
<p><code>git fetch origin</code> 会抓取克隆(或上一次抓取)后新推送的所有工作。必须注意 <code>git fetch</code> 命令只会将数据下载到您的本地仓库——它并不会自动合并或修改您当前的工作。当准备好时您必须手动将其合并入您的工作。</p>
<h2>推送到远程仓库</h2>
<p>当您想分享您的项目时，必须将其推送到上游。这个命令很简单: <code>git push &lt;remote&gt; &lt;branch&gt;</code>。当您
想要将 master 分支推送到 origin 服务器时(再次说明，克隆时通常会自动帮您设置好那两个名字)， 那么
运行这个命令就可以将您所做的备份到服务器:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>只有当您有所克隆服务器的写入权限，并且之前没有人推送过时，这条命令才能生效。当您和其他人在同一时间克隆，他们先推送到上游然后您再推送到上游，您的推送就会毫无疑问地被拒绝。您必须先抓取他们的工作并将其合并进您的工作后才能推送。</p>
<h2>查看某个远程仓库</h2>
<p>如果想要查看某一个远程仓库的更多信息，可以使用 <code>git remote show &lt;remote&gt;</code> 命令。如果想以一个特
定的缩写名运行这个命令，例如 origin，会得到像下面类似的信息:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">* remote origin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Fetch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> URL:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/schacon/ticgit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> URL:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/schacon/ticgit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">HEAD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branches:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracked</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dev-branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracked</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> configured</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'git pull':</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> merges</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ref</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> configured</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'git push':</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pushes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (up </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它同样会列出远程仓库的 URL 与跟踪分支的信息。这些信息非常有用，它告诉您正处于 master 分支，并且如果运行 <code>git pull</code>，就会抓取所有的远程引用，然后将远程 master 分支合并到本地 master 分支。它也会列出拉取到的所有远程引用。</p>
<h2>远程仓库的重命名与移除</h2>
<p>您可以运行 <code>git remote rename</code> 来修改一个远程仓库的简写名。例如，想要将 pb 重命名为 paul，可以用 <code>git remote rename</code> 这样做:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> paul</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">origin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">paul</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的是这同样也会修改您所有远程跟踪的分支名字。那些过去引用 <code>pb/master</code> 的现在会引用 <code>paul/master</code>。</p>
<p>如果因为一些原因想要移除一个远程仓库——您已经从服务器上搬走了或不再想使用某一个特定的镜像了，又或者某一个贡献者不再贡献了——可以使用 <code>git remote remove</code> 或 <code>git remote rm</code>:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> paul</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">origin</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦您使用这种方式删除了一个远程仓库，那么所有和这个远程仓库相关的远程跟踪分支以及配置信息也会一起被删除。</p>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">版本回退</title>
    <id>https://blog.ruizhou.cf/software/git/reset.html</id>
    <link href="https://blog.ruizhou.cf/software/git/reset.html"/>
    <updated>2024-10-09T02:08:52.207Z</updated>
    <summary type="html"><![CDATA[<p>修改 readme.txt 文件如下:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software distributed under the GPL.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>修改 readme.txt 文件如下:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software distributed under the GPL.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后尝试提交:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># nothing displayed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "append GPL"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[master 1094adb] append GPL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deletion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>像这样不断对文件进行修改，然后不断提交修改到版本库里，每当文件修改到一定程度的时候，就可以“保存一个快照”，这个快照在 Git 中被称为 <code>commit</code>。如果把文件改乱了，或者误删了文件，还可以从最近的一个 <code>commit</code> 恢复，然后继续工作，而不是把几个月的工作成果全部丢失。</p>
<p>现在，我们回顾一下 <code>readme.txt</code> 文件一共有几个版本被提交到 Git 仓库里了:</p>
<ul>
<li>版本 1: wrote a readme file</li>
</ul>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>版本 2: add distributed</li>
</ul>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>版本 3: append GPL</li>
</ul>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software distributed under the GPL.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><h2>查看版本信息</h2>
<p>版本控制系统用 <code>git log</code> 命令可以告诉我们历史记录，在 Git 中，我们查看:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1094adb7b9b3807259d8cb349e7df1d4d6477073</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 21:06:15</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> e475afc93c209a690c39c13a46716e8fa000c366</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 21:03:36</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 20:59:18</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    wrote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git log</code> 命令显示从最近到最远的提交日志，我们可以看到 3 次提交，最近的一次是 <code>append GPL</code>，上一次是 <code>add distributed</code>，最早的一次是 <code>wrote a readme file</code>。</p>
<p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上 <code>--pretty=oneline</code> 参数:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --pretty=oneline</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">1094adb7b9b3807259d8cb349e7df1d4d6477073</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) append GPL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc93c209a690c39c13a46716e8fa000c366</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wrote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一大串类似 <code>1094adb...</code> 的是 commit id (版本号)，和 SVN 不一样，Git 的 commit id 不是 1，2，3…… 递增的数字，而是一个 SHA1 计算出来的一个非常大的数字，用十六进制表示，为什么 commit id 需要用这么一大串数字表示呢? 因为 Git 是分布式的版本控制系统，多人在同一个版本库里工作，如果大家都用 1，2，3…… 作为版本号，那肯定就冲突了。</p>
<p>每提交一个新版本，实际上 Git 就会把它们自动串成一条时间线。如果使用可视化工具查看 Git 历史，就可以更清楚地看到提交历史的时间线:</p>
<figure><figcaption>Git 时间线</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">更多选项</p>
<p>关于 <code>git log</code> 的更多选项，请见 <a href="/file/git/progit_v2.1.45.pdf">ProGit 书籍</a> 的 P43。</p>
</div>
<h2>回退版本</h2>
<p>好了，现在准备把 readme.txt 回退到上一个版本，也就是 <code>add distributed</code> 的那个版本，怎么做呢?</p>
<p>首先，Git 必须知道当前版本是哪个版本，在 Git 中，用 <code>HEAD</code> 表示当前版本，也就是最新的提交 <code>1094adb...</code> (注意我的提交 ID 和您的肯定不一样)，上一个版本就是 <code>HEAD^</code>，上上一个版本就是 <code>HEAD^^</code>，当然往上 100 个版本写 100 个 <code>^</code> 比较容易数不过来，所以写成 <code>HEAD~100</code>。</p>
<p>现在，要把当前版本 <code>append GPL</code> 回退到上一个版本 <code>add distributed</code>，就可以使用 <code>git reset</code> 命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --hard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD^</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">HEAD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>看看 readme.txt 的内容是不是版本 add distributed:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> control</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> system.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>果然被还原了。</p>
<p>还可以继续回退到上一个版本 wrote a readme file，不过且慢，然我们用 <code>git log</code> 再看看现在版本库的状态:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> e475afc93c209a690c39c13a46716e8fa000c366</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 21:03:36</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 20:59:18</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    wrote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最新的那个版本 append GPL 已经看不到了! 肿么办?</p>
<p>办法其实还是有的，只要上面的命令行窗口还没有被关掉，您就可以顺着往上找啊找啊，找到那个 append GPL 的 commit id 是 1094adb...，于是就可以指定回到未来的某个版本:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --hard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1094a</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">HEAD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 83b0afe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>版本号没必要写全，前几位就可以了，Git 会自动去找。当然也不能只写前一两位，因为 Git 可能会找到多个版本号，就无法确定是哪一个了。</p>
<p>再小心翼翼地看看 readme.txt 的内容:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> control</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> system.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> software</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> under</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>果然，我胡汉三又回来了。</p>
<p>Git 的版本回退速度非常快，因为 Git 在内部有个指向当前版本的 <code>HEAD</code> 指针，当您回退版本的时候，Git 仅仅是把 <code>HEAD</code> 从指向 append GPL:</p>
<figure><figcaption>示例图4</figcaption></figure>
<p>改为指向 <code>add distributed</code>:</p>
<figure><figcaption>示例图5</figcaption></figure>
<p>然后顺便把工作区的文件更新了。所以您让 <code>HEAD</code> 指向哪个版本号，您就把当前版本定位在哪。</p>
<h2>找回 commit id</h2>
<p>如果回退到了某个版本找不到新版本的 <code>commit id</code>，在 Git 中，就无法用 <code>$ git reset --hard HEAD^</code> 回退。</p>
<p>所以 Git 提供了一个命令 <code>git reflog</code> 用来记录您的每一次命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reflog</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> moving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD^</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">1094adb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) HEAD@{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eaadf4e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (initial): wrote a readme file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reflog</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> moving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD^</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">1094adb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) HEAD@{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eaadf4e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (initial): wrote a readme file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>终于舒了口气，从输出可知，append GPL 的 commit id 是 1094adb，现在，您又可以乘坐时光机回到未来了。</p>
<h2>小结</h2>
<ul>
<li>
<p><code>HEAD</code> 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令 <code>git reset --hard commit_id</code>。</p>
</li>
<li>
<p>用 <code>git log</code> 可以查看提交历史，以便确定要回退到哪个版本。</p>
</li>
<li>
<p>用 <code>git reflog</code> 查看命令历史，以便确定要回到未来的哪个版本。</p>
</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">服务器搭建</title>
    <id>https://blog.ruizhou.cf/software/git/server.html</id>
    <link href="https://blog.ruizhou.cf/software/git/server.html"/>
    <updated>2024-10-09T02:08:52.234Z</updated>
    <summary type="html"><![CDATA[<p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>
<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>
]]></summary>
    <content type="html"><![CDATA[<p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>
<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>
<!-- more -->
<p>搭建 Git 服务器需要准备一台运行 Linux 的机器，强烈推荐用 Ubuntu 或 Debian，这样，通过几条简单的 <code>apt</code> 命令就可以完成安装。</p>
<ul>
<li>
<p><strong>Ubuntu</strong> 或 <strong>Debian</strong></p>
<p>假设您已经有 sudo 权限的用户账号，下面，正式开始安装。</p>
<ul>
<li>
<p>第一步，安装 git:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>第二步，创建一个 git 用户，用来运行 git 服务:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> adduser</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>第三步，创建证书登录:</p>
<p>收集所有需要登录的用户的公钥，就是他们自己的 <code>id_rsa.pub</code> 文件，把所有公钥导入到 <code>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>
</li>
<li>
<p>第四步，初始化 Git 仓库:</p>
<p>先选定一个目录作为 Git 仓库，假定是 <code>/srv/sample.git</code>，在 <code>/srv</code> 目录下输入命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --bare</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sample.git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Git 就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的 Git 仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的 Git 仓库通常都以 <code>.git</code> 结尾。然后，把 owner 改为 git:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git:git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sample.git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>第五步，禁用 shell 登录:</p>
<p>出于安全考虑，第二步创建的 git 用户不允许登录 shell，这可以通过编辑 <code>/etc/passwd</code> 文件完成。找到类似下面的一行:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">git:x:1001:1001:,,,:/home/git:/bin/bash</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>改为:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>这样，git 用户可以正常通过 ssh 使用 git，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。</p>
</li>
<li>
<p>第六步，克隆远程仓库:</p>
<p>现在，可以通过 <code>git clone</code> 命令克隆远程仓库了，在各自的电脑上运行:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@server:/srv/sample.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'sample'...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">warning:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> You</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> appear</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> have</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cloned</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> empty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> repository.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>剩下的推送就简单了。</p>
</li>
</ul>
</li>
<li>
<p><strong>Centos</strong></p>
<ol>
<li>
<p>安装 Git</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> curl-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> expat-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gettext-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> openssl-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zlib-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> perl-devel</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来创建一个 git 用户组和用户，用来运行 git 服务:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">groupadd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">useradd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>创建证书登录</p>
<p>收集所有需要登录的用户的公钥，公钥位于 <code>id_rsa.pub</code> 文件中，将公钥导入到 <code>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>
<p>如果没有该文件创建它:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /home/git/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 755</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .ssh/authorized_keys</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .ssh/authorized_keys</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>初始化 Git 仓库</p>
<p>首先我们选定一个目录作为 Git 仓库，假定是 <code>/home/gitrepo/test.git</code>，在 <code>/home/gitrepo</code> 目录下输入命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /home</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gitrepo</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> chown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git:git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gitrepo/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gitrepo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --bare</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Initialized</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> empty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> repository</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /home/gitrepo/runoob.git/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上命令 Git 创建一个空仓库，服务器上的 Git 仓库通常都以 <code>.git</code> 结尾。然后，把仓库所属用户改为 git:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git:git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> runoob.git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>克隆仓库</p>
</li>
</ol>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@192.168.45.4:/home/gitrepo/runoob.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Cloning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'runoob'...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">warning:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> You</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> appear</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> have</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cloned</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> empty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> repository.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Checking</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> connectivity...</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> done.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>192.168.45.4 为 Git 所在服务器 ip ，您需要将其修改为您自己的 Git 服务 ip。</p>
<p>这样我们的 Git 服务器安装就完成。</p>
</li>
</ul>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">纵向查看</title>
    <id>https://blog.ruizhou.cf/software/git/status.html</id>
    <link href="https://blog.ruizhou.cf/software/git/status.html"/>
    <updated>2024-10-09T02:08:52.236Z</updated>
    <summary type="html"><![CDATA[<p>我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，运行 <code>git status</code> 命令看看结果:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> staged</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git add &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> what</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git checkout -- &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> discard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> working</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    modified:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   readme.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (use </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"git add"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and/or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git commit -a"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>git status</code> 命令可以输出仓库当前的状态，上面的命令输出告诉我们，readme.txt 被修改过了，但还没有准备提交的修改。</p>
<div class="hint-container tip">
<p class="hint-container-title">简介输出</p>
<p><code>git status</code> 命令的输出十分详细，但其用语有些繁琐。Git 有一个选项可以帮您缩短状态命令的输出，这样可以以简洁的方式查看更改。如果您使用 <code>git status -s</code> 命令或 <code>git status --short</code> 命令，您将得到一种格式更为紧凑的输出。</p>
<p>输出中有两栏，左栏指明了暂存区的状态，右栏指明了工作区的状态。</p>
<p>新添加的未跟踪文件前面有 <code>??</code> 标记，新添加到暂存区中的文件前面有 <code>A</code> 标记，修改过的文件前面有 <code>M</code> 标记。</p>
<details class="hint-container details"><summary>案例</summary>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">&nbsp;M</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> README</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Rakefile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  lib/git.rb</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">M</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  lib/simplegit.rb</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">?? LICENSE.txt</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的状态报告显示: <code>README</code> 文件在工作区已修改但尚未暂存，而 <code>lib/simplegit.rb</code> 文件已修改且已暂存。<code>Rakefile</code> 文件已修改，暂存后又作了修改，因此该文件的修改中既有已暂存的部分，又有未暂存的部分。</p>
</details>
</div>
<p>Git 现在只告诉我们 readme.txt 被修改了，我们用 <code>git diff</code> 这个命令能看看具体修改了什么内容:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> diff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a/readme.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> b/readme.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 46d49bf..9247db6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100644</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">标签管理</title>
    <id>https://blog.ruizhou.cf/software/git/tag.html</id>
    <link href="https://blog.ruizhou.cf/software/git/tag.html"/>
    <updated>2024-10-09T02:08:52.272Z</updated>
    <summary type="html"><![CDATA[<h2>为什么要有 tag</h2>
<p>发布一个版本时，我们通常先在版本库中打一个标签 (<code>tag</code>)，这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。</p>
<p>Git 的标签虽然是版本库的快照，但其实它就是指向某个 <code>commit</code> 的指针(跟分支很像对不对? 但是分支可以移动，标签不能移动)，所以，创建和删除标签都是瞬间完成的。</p>
<p>Git 有 <code>commit</code>，为什么还要引入 <code>tag</code>?</p>]]></summary>
    <content type="html"><![CDATA[<h2>为什么要有 tag</h2>
<p>发布一个版本时，我们通常先在版本库中打一个标签 (<code>tag</code>)，这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。</p>
<p>Git 的标签虽然是版本库的快照，但其实它就是指向某个 <code>commit</code> 的指针(跟分支很像对不对? 但是分支可以移动，标签不能移动)，所以，创建和删除标签都是瞬间完成的。</p>
<p>Git 有 <code>commit</code>，为什么还要引入 <code>tag</code>?</p>
<p>“请把上周一的那个版本打包发布，<code>commit</code> 号是 6a5819e...”</p>
<p>“一串乱七八糟的数字不好找! ”</p>
<p>如果换一个办法:</p>
<p>“请把上周一的那个版本打包发布，版本号是 <code>v1.2</code>”</p>
<p>“好的，按照 <code>tag v1.2</code> 查找 <code>commit</code> 就行! ”</p>
<p>所以，<code>tag</code> 就是一个让人容易记住的有意义的名字，它跟某个 <code>commit</code> 绑在一起。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>推荐的标签规范是以小写字母 <code>v</code> 开头，后接 <code>x.x</code> 或 <code>x.x.x</code> 等若干位版本号。</p>
</div>
<h2>创建轻量标签</h2>
<p>在 Git 中打标签非常简单，首先，切换到需要打标签的分支上:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">* dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switched</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'master'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，敲命令 <code>git tag &lt;name&gt;</code> 就可以打一个新标签:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> output</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以用命令 <code>git tag</code> 查看所有标签:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">v1.0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认标签是打在最新提交的 <code>commit</code> 上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办?</p>
<p>方法是找到历史提交的 <code>commit id</code>，然后打上就可以了:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --pretty=oneline</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --abbrev-commit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">12a631b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (HEAD -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">master,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v1.0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin/master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) merged bug fix 101</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">4c805e2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bug</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 101</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e1e9c68</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> no-ff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">f52c633</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> merge</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cf810e4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> conflict</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fixed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">5dc6824</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">simple</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">14096d0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> AND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> simple</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">b17d20e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">d46f35e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">b84166e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">519219b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tracks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e43a48b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> understand</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> how</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stage</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> works</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">1094adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">e475afc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> distributed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eaadf4e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wrote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> readme</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比方说要对 <code>add merge</code> 这次提交打标签，它对应的 <code>commit id</code> 是 <code>f52c633</code>，敲入命令:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> f52c633</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">--no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> output</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>再用命令 <code>git tag</code> 查看标签:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">v0.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">v1.0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用 <code>git show &lt;tagname&gt;</code> 查看标签信息:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> f52c63349bc3c1593499807e5c8e972b82c8f286</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (tag: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v0.9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 21:56:54</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> merge</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a/readme.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> b/readme.txt</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，<code>v0.9</code> 确实打在 <code>add merge</code> 这次提交上。</p>
<h2>附注标签</h2>
<p>Git 还可以创建带有说明的标签，用 <code>-a</code> 指定标签名，<code>-m</code> 指定说明文字:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "version 0.1 released"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1094adb</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">--no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> output</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>用命令 <code>git show &lt;tagname&gt;</code> 可以看到说明文字:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Tagger:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 22:48:43</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">version</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> released</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1094adb7b9b3807259d8cb349e7df1d4d6477073</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (tag: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Author:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Michael</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Liao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">askxuefeng@gmail.co</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   Fri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 21:06:15</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2018</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +0800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    append</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GPL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a/readme.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> b/readme.txt</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>标签总是和某个 commit 挂钩。如果这个 commit 既出现在 master 分支，又出现在 dev 分支，那么在这两个分支上都可以看到这个标签。</p>
</div>
<h3>添加小结</h3>
<p>命令 <code>git tag &lt;tagname&gt;</code> 用于新建一个标签，默认为 <code>HEAD</code>，也可以指定一个 <code>commit id</code>；</p>
<p>命令 <code>git tag -a &lt;tagname&gt; -m "blablabla..."</code> 可以指定标签信息；</p>
<p>命令 <code>git tag</code> 可以查看所有标签。</p>
<h2>操作标签</h2>
<p>如果标签打错了，也可以删除:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Deleted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'v0.1'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (was </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">f15b0dd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。</p>
<p>如果要推送某个标签到远程，使用命令 <code>git push origin &lt;tagname&gt;</code>:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github.com:Hope-Studio/learngit.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [new </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">tag]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">         v1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v1.0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，一次性推送全部尚未推送到远程的本地标签:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --tags</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (delta </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), reused 0 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github.com:Hope-Studio/learngit.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [new </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">tag]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">         v0.9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v0.9</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Deleted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'v0.9'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (was </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">f52c633</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，从远程删除。删除命令也是 push，但是格式如下:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> :refs/tags/v0.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github.com:Hope-Studio/learngit.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [deleted]         v0.9</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要看看是否真的从远程库删除了标签，可以登陆 GitHub 查看。</p>
<h3>管理标签小结</h3>
<ul>
<li>
<p>命令 <code>git push origin &lt;tagname&gt;</code> 可以推送一个本地标签；</p>
</li>
<li>
<p>命令 <code>git push origin --tags</code> 可以推送全部未推送过的本地标签；</p>
</li>
<li>
<p>命令 <code>git tag -d &lt;tagname&gt;</code> 可以删除一个本地标签；</p>
</li>
<li>
<p>命令 <code>git push origin :refs/tags/&lt;tagname&gt;</code> 可以删除一个远程标签。</p>
</li>
</ul>
]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">工作区和暂存区</title>
    <id>https://blog.ruizhou.cf/software/git/working-directory.html</id>
    <link href="https://blog.ruizhou.cf/software/git/working-directory.html"/>
    <updated>2024-10-09T02:08:52.297Z</updated>
    <summary type="html"><![CDATA[<p>Git 和其他版本控制系统如 SVN 的一个不同之处就是有暂存区的概念。</p>
]]></summary>
    <content type="html"><![CDATA[<p>Git 和其他版本控制系统如 SVN 的一个不同之处就是有暂存区的概念。</p>
<!-- more -->
<h2>工作区(Working Directory)</h2>
<p>就是您在电脑里能看到的目录，比如 learngit 文件夹就是一个工作区:</p>
<h2>版本库(Repository)</h2>
<p>工作区有一个隐藏目录.git，这个不算工作区，而是 Git 的版本库。</p>
<p>Git 的版本库里存了很多东西，其中最重要的就是称为 stage(或者叫 index)的暂存区，还有 Git 为我们自动创建的第一个分支 <code>master</code>，以及指向 master 的一个指针叫 <code>HEAD</code>。</p>
<figure><figcaption>版本库图例</figcaption></figure>
<p>前面讲了我们把文件往 Git 版本库里添加的时候，提交更改，实际上就是把暂存区的所有内容提交到当前分支。我们创建 Git 版本库时，Git 自动为我们创建了唯一一个 <code>master</code> 分支，所以，现在，<code>git commit</code> 就是往 master 分支上提交更改。</p>
<p>您可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p>
<p>先对 readme.txt 做个修改，比如加上一行内容:</p>
<div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is a distributed version control system.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git is free software distributed under the GPL.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Git has a mutable index called stage.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在工作区新增一个 LICENSE 文本文件(内容随便写)。</p>
<p>先用 <code>git status</code> 查看一下状态:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> staged</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git add &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> what</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git checkout -- &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> discard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> working</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    modified:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   readme.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Untracked</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> files:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git add &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> what</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    LICENSE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (use </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"git add"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and/or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git commit -a"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Git 非常清楚地告诉我们，readme.txt 被修改了，而 LICENSE 还从来没有被添加过，所以它的状态是 <code>Untracked</code>。</p>
<p>现在，使用两次命令 <code>git add</code>，把 readme.txt 和 LICENSE 都添加后，用 <code>git status</code> 再查看一下:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Changes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> committed:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "git reset HEAD &lt;file&gt;..."</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> unstage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> file:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   LICENSE</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    modified:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   readme.txt</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，暂存区的状态就变成这样了:</p>
<figure><figcaption>状态示意图</figcaption></figure>
<p>所以，<code>git add</code> 命令实际上就是把要提交的所有修改放到暂存区(Stage)，然后，执行 <code>git commit</code> 就可以一次性把暂存区的所有修改提交到分支。</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "understand how stage works"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[master e43a48b] understand how stage works</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> files</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> changed,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> insertions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> LICENSE</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦提交后，如果您又没有对工作区做任何修改，那么工作区就是“干净”的:</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">On</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nothing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> working</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clean</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <author>
      <name>廖雪峰</name>
    </author>
    <category term="Git"/>
    <contributor>
      <name>廖雪峰</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 廖雪峰 Edited by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="text">Git 原理</title>
    <id>https://blog.ruizhou.cf/software/git/working.html</id>
    <link href="https://blog.ruizhou.cf/software/git/working.html"/>
    <updated>2024-10-09T02:08:52.299Z</updated>
    <summary type="html"><![CDATA[<p>Git 究竟是怎样的一个系统呢? 尽管 Git 用起来与其它的版本控制系统非常相似，但它在对信息的存储和认知方式上却有很大差异。</p>
<h2>直接记录快照，而非差异比较</h2>
<p>Git 和其它版本控制系统(包括 Subversion 和近似工具)的主要差别在于 Git 对待数据的方法。从概念上来说，其它大部分系统以文件变更列表的方式存储信息，这类系统(CVS、Subversion、Perforce、Bazaar 等等)将它们存储的信息看作是一组基本文件和每个文件随时间逐步累积的差异 (它们通常称作 基于差异(delta-based) 的版本控制)。</p>
<figure><figcaption>基于差异</figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<p>Git 究竟是怎样的一个系统呢? 尽管 Git 用起来与其它的版本控制系统非常相似，但它在对信息的存储和认知方式上却有很大差异。</p>
<h2>直接记录快照，而非差异比较</h2>
<p>Git 和其它版本控制系统(包括 Subversion 和近似工具)的主要差别在于 Git 对待数据的方法。从概念上来说，其它大部分系统以文件变更列表的方式存储信息，这类系统(CVS、Subversion、Perforce、Bazaar 等等)将它们存储的信息看作是一组基本文件和每个文件随时间逐步累积的差异 (它们通常称作 基于差异(delta-based) 的版本控制)。</p>
<figure><figcaption>基于差异</figcaption></figure>
<p>Git 不按照以上方式对待或保存数据。反之，Git 更像是把数据看作是对小型文件系统的一系列快照。在 Git 中，每当您提交更新或保存项目状态时，它基本上就会对当时的全部文件创建一个快照并保存这个快照的索引。为了效率，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。Git 对待数据更像是一个 <strong>快照流</strong>。</p>
<figure><figcaption>基于快照</figcaption></figure>
<h2>近乎所有操作都是本地执行</h2>
<p>在 Git 中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息。如果您习惯于所有操作都有网络延时开销的集中式版本控制系统，Git 在这方面会让您感到速度之神赐给了 Git 超凡的能量。因为您在本地磁盘上就有项目的完整历史，所以大部分操作看起来瞬间完成。举个例子，要浏览项目的历史，Git 不需外连到服务器去获取历史，然后再显示出来——它只需直接从本地数据库中读取。您能立即看到项目历史。如果您想查看当前版本与一个月前的版本之间引入的修改， Git 会查找到一个月前的文件做一次本地的差异计算，而不是由远程服务器处理或从远程服务器拉回旧版本文件再来本地处理。</p>
<h2>Git 保证完整性</h2>
<p>Git 中所有的数据在存储前都计算校验和，然后以校验和来引用。这意味着不可能在 Git 不知情时更改任何文件内容或目录内容。这个功能建构在 Git 底层，是构成 Git 哲学不可或缺的部分。若您在传送过程中丢失信息或损坏文件，Git 就能发现。</p>
<p>Git 用以计算校验和的机制叫做 SHA-1 散列(hash，哈希)。这是一个由 40 个十六进制字符(0-9 和 a-f)组成的字符串，基于 Git 中文件的内容或目录结构计算出来。Git 中使用这种哈希值的情况很多，您将经常看到这种哈希值。实际上，Git 数据库中保存的信息都是以文件内容的哈希值来索引，而不是文件名。</p>
<h2>Git 一般只添加数据</h2>
<p>您执行的 Git 操作，几乎只往 Git 数据库中 添加 数据。您很难让 Git 执行任何不可逆操作，或者让它以任何方式清除数据。同别的 VCS 一样，未提交更新时有可能丢失或弄乱修改的内容。但是一旦您提交快照到 Git 中， 就难以再丢失数据，特别是如果您定期的推送数据库到其它仓库的话。</p>
<p>这使得我们使用 Git 成为一个安心愉悦的过程，因为我们深知可以尽情做各种尝试，而没有把事情弄糟的危险。</p>
<h2>三种状态</h2>
<p>Git 有三种状态，您的文件可能处于其中之一: 已提交(committed)、已修改(modified) 和 已暂存(staged)。</p>
<ul>
<li>已修改表示修改了文件，但还没保存到数据库中。</li>
<li>已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</li>
<li>已提交表示数据已经安全地保存在本地数据库中。</li>
</ul>
<p>这会让我们的 Git 项目拥有三个阶段: 工作区、暂存区以及 Git 目录。</p>
<p>工作区是对项目的某个版本独立提取出来的内容。这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供您使用或修改。
暂存区是一个文件，保存了下次将要提交的文件列表信息，一般在 Git 仓库目录中。按照 Git 的术语叫做“索引”，不过一般说法还是叫“暂存区”。
Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。这是 Git 中最重要的部分，从其它计算机克隆仓库时，复制的就是这里的数据。
基本的 Git 工作流程如下:</p>
<ol>
<li>在工作区中修改文件。</li>
<li>将您想要下次提交的更改选择性地暂存，这样只会将更改的部分添加到暂存区。</li>
<li>提交更新，找到暂存区的文件，将快照永久性存储到 Git 目录。</li>
</ol>
<p>如果 Git 目录中保存着特定版本的文件，就属于 已提交 状态。如果文件已修改并放入暂存区，就属于 已暂存 状态。如果自上次检出后，作了修改但还没有放到暂存区域，就是 已修改 状态。</p>
]]></content>
    <category term="Git"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">工具软件</title>
    <id>https://blog.ruizhou.cf/software/tool/</id>
    <link href="https://blog.ruizhou.cf/software/tool/"/>
    <updated>2024-10-09T02:08:52.300Z</updated>
    <summary type="html"><![CDATA[<h2>目录</h2>
<ul>
<li>
<p><a href="/software/tool/power-toys.html" target="_blank">PowerToys</a>: Windows 实用工具合集</p>
</li>
<li>
<p><a href="https://github.com/huiyadanli/PasteEx" target="_blank" rel="noopener noreferrer">PasteEx</a>: Paste As File 把剪贴板的内容直接粘贴为文件</p>
</li>
<li>
<p><a href="https://www.typora.io/" target="_blank" rel="noopener noreferrer">typora</a>: 一个页面很漂亮的 Markdown 编辑器</p>
</li>
<li>
<p><a href="https://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="noopener noreferrer">Potplayer</a>: 心目中最 NB 的视频播放器，没有之一</p>
</li>
<li>
<p><a href="/software/tool/terminal/" target="_blank">Terminal</a>: Windows 终端</p>
</li>
<li>
<p><a href="/software/tool/powershell.html" target="_blank">PowerShell</a>: Windows 的命令行外壳程序和脚本环境</p>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<h2>目录</h2>
<ul>
<li>
<p><a href="/software/tool/power-toys.html" target="_blank">PowerToys</a>: Windows 实用工具合集</p>
</li>
<li>
<p><a href="https://github.com/huiyadanli/PasteEx" target="_blank" rel="noopener noreferrer">PasteEx</a>: Paste As File 把剪贴板的内容直接粘贴为文件</p>
</li>
<li>
<p><a href="https://www.typora.io/" target="_blank" rel="noopener noreferrer">typora</a>: 一个页面很漂亮的 Markdown 编辑器</p>
</li>
<li>
<p><a href="https://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="noopener noreferrer">Potplayer</a>: 心目中最 NB 的视频播放器，没有之一</p>
</li>
<li>
<p><a href="/software/tool/terminal/" target="_blank">Terminal</a>: Windows 终端</p>
</li>
<li>
<p><a href="/software/tool/powershell.html" target="_blank">PowerShell</a>: Windows 的命令行外壳程序和脚本环境</p>
</li>
</ul>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">PowerToys</title>
    <id>https://blog.ruizhou.cf/software/tool/power-toys.html</id>
    <link href="https://blog.ruizhou.cf/software/tool/power-toys.html"/>
    <updated>2024-10-09T02:08:52.300Z</updated>
    <summary type="html"><![CDATA[<h2>安装</h2>
<p>您可以 <a href="https://github.com/microsoft/PowerToys/releases" target="_blank" rel="noopener noreferrer">直接下载 exe</a> 进行安装。</p>
<div class="hint-container info">
<p class="hint-container-title">系统要求</p>
<p>Win10 版本 &gt; 1803，已安装 .NET Core 3.1 Desktop Runtime</p>
</div>
<p>或者使用 WinGet:</p>]]></summary>
    <content type="html"><![CDATA[<h2>安装</h2>
<p>您可以 <a href="https://github.com/microsoft/PowerToys/releases" target="_blank" rel="noopener noreferrer">直接下载 exe</a> 进行安装。</p>
<div class="hint-container info">
<p class="hint-container-title">系统要求</p>
<p>Win10 版本 &gt; 1803，已安装 .NET Core 3.1 Desktop Runtime</p>
</div>
<p>或者使用 WinGet:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WinGet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> powertoys</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>功能</h2>
<p>Power toys 主要功能:</p>
<ul>
<li>图片取色</li>
<li>窗口布局管理</li>
<li>更多文件预览支持</li>
<li>图片尺寸调整</li>
<li>快捷键管理器</li>
<li>强大的文件重命名</li>
<li>快捷键指南</li>
<li>PowerToys Run</li>
</ul>
<h2>Color Picker</h2>
<p>Color Picker 是一个可以在 Win10 系统全场景下使用的颜色提取工具，通过按键 <code>Win + Shift + C</code> 启动。</p>
<p>您可以用光标在当前桌面上任意色块提取颜色，系统会自动复制颜色的 HEX 或 RGB 值。</p>
<figure><figcaption>取色器演示</figcaption></figure>
<h3>FancyZones</h3>
<p>FancyZones 是一个实用的窗口增强管理器，它能让您快速地将程序窗口按照设置好的布局来调整大小和位置排布，快捷键为 <code>Win + `</code>。</p>
<p>FancyZones 实现了更高效地利用屏幕的面积，管理切换大量窗口而不杂乱，是大屏幕用户必备的效率工具。</p>
<p>当首次启动时，FancyZones 会要求您为当前显示器选择一个默认的布局。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>请注意 FancyZones 布局是基于显示器的，所以如果您有多个显示器，您需要分别设置它们。</p>
</div>
<figure><figcaption>布局选择</figcaption></figure>
<p>如果上述布局选择不能满足您的需求，您也可以点击 "Custom" 选项卡进行自定义。</p>
<figure><figcaption>自定义布局</figcaption></figure>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>更多详情，请见 <a href="https://github.com/microsoft/PowerToys/wiki/FancyZones-Overview" target="_blank" rel="noopener noreferrer">官方 Wiki</a></p>
</div>
<h2>资源管理器插件</h2>
<p>Preview Panel(预览窗格) 是一个轻量快速 Win10 的文件资源管理器插件，它能让您在无需打开文件的情况下，直接在文件资源管理器通过<strong>预览窗格</strong>预览文件内容，目前 <code>.svg</code> 与 <code>.md</code>。</p>
<figure><figcaption>SVG 预览</figcaption></figure>
<figure><figcaption>Markdown 预览</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这两个文件的预览对开发者是十分有用的。</p>
</div>
<h2>图片尺寸调整</h2>
<p>Image Resizer 是一个右键菜单的快速图片尺寸大小调整工具，您只需右键点击图片文件，即可选择修改一张或批量修改多张图片的大小尺寸、旋转图片方向或者转换图片格式。</p>
<figure><figcaption>图片尺寸调整</figcaption></figure>
<p>软件预设了大/中/小/手机等不同的常用模版，单击确定即可一键完成图片尺寸的批量调整。您也可以点击 Settings 进入设置，按自己需求的尺寸大小、是否转换格式等来配置自己的常用“模版”。</p>
<figure><figcaption>图片尺寸调整设置</figcaption></figure>
<p>对于经常有多张图片的大小需要处理，而对专业性要求不高的用户来说，这款工具能替代专门的图像处理器软件。</p>
<p>同时，用户不仅可以导出为其他格式，也可以设置默认编码器(在不能保存为原始格式时)。</p>
<p>在导出时，也支持修改 PNG、JPEG 和 TIFF 的图片保存设置，与是否保留原来的最后修改日期。</p>
<h2>快捷键管理器</h2>
<p>Keyboard Manager 是一款简单而又实用的键盘键位修改小工具。</p>
<p>它的主要作用能帮您将键盘上的某个按键映射为另一个按键，甚至还能将一组快捷键映射为另一组。在一些特殊的情况下，它能帮您的大忙。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Keyboard Manager 修改键位之后无需重启电脑即可立即生效。</p>
</div>
<h2>PowerRename</h2>
<p>PowerRename 是一个实用的右键菜单“批量重命名工具”，可以支持搜索/替换以及正则表达式匹配，可以添加文件名前缀后缀等。</p>
<p>为了避免出错，它在重命名之前可以让在界面上预览重命名后的结果，同时在重命名时，您可以很方便的选中全部您想要重命名的文件与文件夹，再排除指定的文件/文件夹。</p>
<div class="hint-container tip">
<p class="hint-container-title">一些设置选项的解释</p>
<ul>
<li><strong>使用正则表达式</strong>: 默认搜索框中为文字匹配，启用后将认为搜索框中为正则表达式。</li>
<li><strong>匹配所有出现的对象</strong>: 默认情况下只匹配项目中搜索文本的第一个实例，勾选后匹配所有。</li>
<li><strong>枚举项</strong>: 勾选后，会在在操作中修改的文件名后追加一个数字后缀。例如: <code>mrhope.jpg</code> -&gt; <code>mrhope (1).jpg</code></li>
</ul>
</div>
<h2>快捷键指南</h2>
<p>该工具负责提示您当前页面可用的 Windows 快捷键。(并不包含软件内的快捷键)。</p>
<p>长按 Windows 键即可呼出此工具。</p>
<figure><figcaption>快捷键指南</figcaption></figure>
<h2>PowerToys Run</h2>
<p>PowerToys Run 是一款快速启动器工具，按下 <code>Alt + Space</code> 即可随时呼出输入框。</p>
<h3>PowerToys Run 功能</h3>
<ul>
<li>
<p>搜索</p>
<p>直接输入名字后，它能快速找到对应的软件、搜索文件/文件夹，并回车迅速打开它们。</p>
<figure><figcaption>搜索</figcaption></figure>
</li>
<li>
<p>运行软件切换</p>
<p>PowerToys Run 也支持快速搜索当前正在运行的软件，并切换到它们的窗口去。</p>
</li>
<li>
<p>终端</p>
<p>输入 <code>&gt;</code> 加您需要执行的命令，即可快速调用终端执行。</p>
<figure><figcaption>终端命令</figcaption></figure>
</li>
<li>
<p>简单计算</p>
<p>您可以直接输入简单的数学表达式，PowerToys Run 会直接返回结果。</p>
<figure><figcaption>简单计算</figcaption></figure>
</li>
</ul>
<h3>快捷键</h3>
<p>| 捷径                   | 行动                                                     |
|</p>
]]></content>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Windows PowerShell</title>
    <id>https://blog.ruizhou.cf/software/tool/powershell.html</id>
    <link href="https://blog.ruizhou.cf/software/tool/powershell.html"/>
    <updated>2024-10-09T02:08:52.305Z</updated>
    <summary type="html"><![CDATA[<p>Powershell (Windows Powershell)是 Microsoft 为 Windows 设计的新的命令行程序，这个 Windows 内置的命令行 shell 包括交互式提示和脚本环境，它们可以独立使用也可以交互使用。</p>
]]></summary>
    <content type="html"><![CDATA[<p>Powershell (Windows Powershell)是 Microsoft 为 Windows 设计的新的命令行程序，这个 Windows 内置的命令行 shell 包括交互式提示和脚本环境，它们可以独立使用也可以交互使用。</p>
<!-- more -->
<p>我们平时所见的大多数的脚本(bat,perl,bash,sh)，接受(输入)和返回(输出)的都是文本。Powershell 是在 .Net 公共语言运行时(CLR-Common Language Runtime)和.Net Framework 的基础上构建的，所以 Powershell 可以接受和返回.Net 对象。也就是说，Powershell 是面向对象的脚本语言。</p>
<p>举个例子，如果其它的脚本语言是 C 语言(低级)，那么 Powershell 就是 Java 或是 C#(高级)。面向对象的能力使 Powershell 相比其它脚本语言有更高的开发效率，脚本更容易维护，更容易实现模块化和复用。</p>
<p>PowerShell 引入了 cmdlet 的概念(cmdlet 读作“command-let”,一看就是 cmd 的超集，事实也是如此，所有 cmd 命令都可以在 Powershell 中执行)，这是内置到 shell 中的一个简单的单一功能命令行工具。相比其它 shell，PowerShell 除了可以对计算机上文件系统的访问。还可以访问其他数据存储，如注册表和数字签名证书存储，就像访问文件系统一样容易。</p>
<h2>特点</h2>
<p>Powershell 提供了丰富的内置命令，相比其它 shell 尤其独特的优势: 您不必抛弃自己惯用的工具、命令，在 Powershell 中可以使用所有的 cmd 命令。</p>
<p>Powershell 不处理文本(不把文本当做文本处理，当做.Net 对象处理)，相反，它处理基于 .Net Framework 平台的对象。</p>
<p>Powershell 附带了具有一致格式(动词-名词)的大量内置命令。</p>
<p>所有的 Powershell 命令都使用同一命令分析程序，而不是每个工具(命令)使用不同的分析程序，可以同时学习大量的命令。</p>
<h2>官方教程</h2>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/powershell/scripting/learn/ps101/01-getting-started?view=powershell-7.1" target="_blank" rel="noopener noreferrer">官方教程</a></li>
</ul>
]]></content>
    <author>
      <name>沈启民</name>
    </author>
    <contributor>
      <name>沈启民</name>
    </contributor>
    <published>2024-01-27T00:00:00.000Z</published>
    <rights>Copyright by 沈启民</rights>
  </entry>
  <entry>
    <title type="text">VS Code</title>
    <id>https://blog.ruizhou.cf/software/vscode/</id>
    <link href="https://blog.ruizhou.cf/software/vscode/"/>
    <updated>2024-10-09T02:08:52.306Z</updated>
    <summary type="html"><![CDATA[<p>Visual Studio Code 是一个轻量级但功能强大的源代码编辑器，可在您的桌面上运行，并且可用于 Windows，macOS 和 Linux。它具有对 JavaScript，TypeScript 和 Node.js 的内置支持，并具有丰富的其他语言 (例如 C ++，C＃，Java，Python，PHP，Go) 和运行时 (例如 .NET 和 Unity) 扩展的生态系统。由微软出品，因其开源，可扩展和众多插件成为全球最受欢迎的代码编辑器。</p>
<h2>特点</h2>
<ul>
<li>
<p>智能代码补全</p>
<p>使用 IntelliSense 可以更智能地编写代码、变量，方法和导入模块的完成。</p>
</li>
<li>
<p>热门扩展</p>
<p>启用其他语言，主题，调试器，命令等。</p>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>Visual Studio Code 是一个轻量级但功能强大的源代码编辑器，可在您的桌面上运行，并且可用于 Windows，macOS 和 Linux。它具有对 JavaScript，TypeScript 和 Node.js 的内置支持，并具有丰富的其他语言 (例如 C ++，C＃，Java，Python，PHP，Go) 和运行时 (例如 .NET 和 Unity) 扩展的生态系统。由微软出品，因其开源，可扩展和众多插件成为全球最受欢迎的代码编辑器。</p>
<h2>特点</h2>
<ul>
<li>
<p>智能代码补全</p>
<p>使用 IntelliSense 可以更智能地编写代码、变量，方法和导入模块的完成。</p>
</li>
<li>
<p>热门扩展</p>
<p>启用其他语言，主题，调试器，命令等。</p>
</li>
</ul>
<h2>目录</h2>
<ul>
<li>
<p><a href="/software/vscode/install.html" target="_blank">安装</a></p>
</li>
<li>
<p><a href="/software/vscode/get-started.html" target="_blank">快速上手</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/" target="_blank">指南</a></p>
<ul>
<li>
<p><a href="/software/vscode/guide/basic.html" target="_blank">基础介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/customization.html" target="_blank">个性化介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/extension.html" target="_blank">扩展介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/file.html" target="_blank">文件介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/edit.html" target="_blank">编辑技巧</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/intellisense.html" target="_blank">智能补全</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/git.html" target="_blank">Git 支持</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/debug.html" target="_blank">调试介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/task.html" target="_blank">任务介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/command.html" target="_blank">命令行介绍</a></p>
</li>
</ul>
</li>
<li>
<p><a href="/software/vscode/ui.html" target="_blank">VS Code 用户界面</a></p>
</li>
<li>
<p><a href="/software/vscode/shortcut-key.html" target="_blank">VS Code 快捷键</a></p>
</li>
<li>
<p><a href="/software/vscode/settings.html" target="_blank">VS Code 设置</a></p>
</li>
<li>
<p><a href="/software/vscode/extension.html" target="_blank">VS Code 推荐扩展</a></p>
</li>
</ul>
<h2>官方文档</h2>
<ul>
<li>
<p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">VS Code 官网</a></p>
</li>
<li>
<p><a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</li>
<li>
<p><a href="https://code.visualstudio.com/docs/getstarted/introvideos" target="_blank" rel="noopener noreferrer">官方视频</a></p>
</li>
</ul>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">推荐扩展</title>
    <id>https://blog.ruizhou.cf/software/vscode/extension.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/extension.html"/>
    <updated>2024-10-09T02:08:52.306Z</updated>
    <summary type="html"><![CDATA[<p>以下是推荐的 VS Code 扩展:</p>
<h3>语言包</h3>
<h4>Chinese (Simplified) Language Pack for Visual Studio Code</h4>
<p>VS Code 原生为英文，本插件为 VS Code 提供简体中文支持，会更改页面为简体中文。</p>
<h3>外观</h3>
<h4>indent-rainbow</h4>
<p>为代码中的缩进上色，更容易判断缩进层数。</p>
<h4>Material Icon Theme</h4>
<p>为 VS Code 文件图标应用安卓的 Material 主题。</p>
<h4>One Dark Pro</h4>]]></summary>
    <content type="html"><![CDATA[<p>以下是推荐的 VS Code 扩展:</p>
<h3>语言包</h3>
<h4>Chinese (Simplified) Language Pack for Visual Studio Code</h4>
<p>VS Code 原生为英文，本插件为 VS Code 提供简体中文支持，会更改页面为简体中文。</p>
<h3>外观</h3>
<h4>indent-rainbow</h4>
<p>为代码中的缩进上色，更容易判断缩进层数。</p>
<h4>Material Icon Theme</h4>
<p>为 VS Code 文件图标应用安卓的 Material 主题。</p>
<h4>One Dark Pro</h4>
<p>为添加一款类 Atom 的一款暗色风格主题，配色会比 VS Code 默认风格好看一些。</p>
<h4>TODO Highlight</h4>
<p>高光显示特定注释，如 <code>TODO:</code> 等。</p>
<h3>工具</h3>
<h4>Bookmarks</h4>
<p>在代码中添加书签并支持快速跳转。</p>
<h4>filesize</h4>
<p>在 VS Code 底部状态栏显示文件大小。</p>
<h4>Project Manager</h4>
<p>快速打开特定项目或在多个项目之间切换。</p>
<h4>Svg Preview</h4>
<p>提供在 VS Code 直接打开 SVG 预览。</p>
<h4>Visual Studio IntelliCode</h4>
<p>基于 AI 的智能提示</p>
<h3>版本管理与多人协作</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>VS Code 不包含 Git，请自行安装 Git 并添加到 path 以实现版本管理。</p>
</div>
<h4>GitLens</h4>
<p>在文件中提供 Git 版本增强功能，包括但不限于行历史、文件历史、分支查看、本地与远程库提交查看与对比分析等。</p>
<h4>Live Share</h4>
<p>官方实时分享功能，可多人同时协作一份文件，也可做在线演示。</p>
<h4>Live Share Audio</h4>
<p>官方实时语音通话，可在多人协作或演示中使用。</p>
<h4>Remote Development</h4>
<p>远程仓库连接与控制。</p>
<h3>网页</h3>
<h4>Color Info</h4>
<p>为 CSS 颜色详情显示更多信息。</p>
<h4>ESLint</h4>
<p>需要 <code>eslint</code> 模块，进行 JS、TS 等文件的的错误检查、格式化。</p>
<h4>JavaScript (ES6) code snippets</h4>
<p>ES6 快速补全，提升代码编写利器。</p>
<h4>language-stylus</h4>
<p>Stylus 格式化，高亮支持。</p>
<h4>Live Server</h4>
<p>快速启动本地开发服务器。</p>
<h4>Quokka.js</h4>
<p>JavaScript TypeScript 及时运行与结果显示。</p>
<h4>SCSS IntelliSence</h4>
<p>SCSS 格式化、补全支持。</p>
<h4>stylelint</h4>
<p>CSS / SCSS / Less 格式化。</p>
<h4>Vue Language Features (Volar)</h4>
<p>为 VS Code 添加 <code>.vue</code> 文件的支持。</p>
<h3>小程序</h3>
<h4>minapp</h4>
<p>小程序标签属性补全。</p>
<h3>XML 与 JSON</h3>
<h4>JSON Organizer</h4>
<p>提供 json 到 js object 的相互转换。</p>
<h4>XML Tools</h4>
<p>提供 XML 补全、格式化等。</p>
<h3>PHP</h3>
<h4>PHP Debug</h4>
<p>PHP 逐行调试，需要提前在 PHP 中配置好 XDebug。</p>
<h4>PHP Intelephense</h4>
<p>提供 PHP 函数补全。</p>
<h4>phpcs</h4>
<p>PHP 错误检查与修复。</p>
<h3>APP 开发</h3>
<h4>Dart</h4>
<p>提供 dart 语言支持与调试。</p>
<h4>Flutter</h4>
<p>提供 Flutter 支持与调试。</p>
<h4>Gradle Language Support</h4>
<p>Gradle 语言支持。</p>
<h3>编程</h3>
<h4>C/C++</h4>
<p>提供代码格式化、自动完成、逐行调试等功能等。</p>
<h4>Code Runner</h4>
<p>提供多种编程语言的运行。</p>
<h4>Java Extension Pack</h4>
<p>Java 调试包。</p>
<h4>Python</h4>
<p>Python 格式化、调试支持。</p>
<h3>Markdown</h3>
<h4>Markdown All in One</h4>
<p>提供快速添加 Markdown 标记的支持。</p>
<h4>Markdown Emoji</h4>
<p>为 Markdown 添加表情支持。</p>
<h4>Markdown Preview GitHub Styling</h4>
<p>为 Markdown 预览应用 GitHub 风格。</p>
<h4>markdownlint</h4>
<p>检查 Markdown 文法错误。</p>
<h3>Node.js</h3>
<h4>Node.js Modules Intellisense</h4>
<p>提供 Node.js 模块智能提示。</p>
<h4>npm Intellisense</h4>
<p>为 VS Code 添加 npm 模块导入补全。</p>
<h3>LaTeX</h3>
<h4>LaTeX Workshop</h4>
<p>LaTeX 插件，支持常见功能与编译。</p>
<h4>latex-formatter</h4>
<p>提供 LaTeX 格式化。</p>
<h3>其他</h3>
<h4>YAML</h4>
<p>提供 YAML 格式化，高亮支持。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">快速上手</title>
    <id>https://blog.ruizhou.cf/software/vscode/get-started.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/get-started.html"/>
    <updated>2024-10-09T02:08:52.330Z</updated>
    <summary type="html"><![CDATA[<h2>VS Code 界面</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在完成 VS Code 安装并首次打开 VS Code 的时候，右下角会提示安装简体中文扩展，请点击安装。</p>
<p>如果忘记点击或没有弹窗，请到侧边栏扩展搜索找到 "Chinese (Simplified) Language Pack for Visual Studio Code" 扩展进行安装，即可将 VS Code 改为中文页面。</p>
</div>
<figure><figcaption>VS Code UI 页面</figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<h2>VS Code 界面</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在完成 VS Code 安装并首次打开 VS Code 的时候，右下角会提示安装简体中文扩展，请点击安装。</p>
<p>如果忘记点击或没有弹窗，请到侧边栏扩展搜索找到 "Chinese (Simplified) Language Pack for Visual Studio Code" 扩展进行安装，即可将 VS Code 改为中文页面。</p>
</div>
<figure><figcaption>VS Code UI 页面</figcaption></figure>
<p>VS Code 最上方有一排菜单栏，其中有大量的快捷操作，对应的组合键会标于快捷操作旁。如果不能记忆快捷键可以到最上方的菜单栏处查看。</p>
<p>最左侧是选项卡切换，从上至下依次是 <a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8">资源管理器</a>、<a href="#%E6%90%9C%E7%B4%A2">搜索</a>、<a href="#%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86">源代码管理</a>、<a href="#%E8%B0%83%E8%AF%95">调试</a> 和 <a href="#%E6%89%A9%E5%B1%95">扩展</a>。</p>
<p>最下方的一条是状态栏。从左到右依次是分支名称、同步状态、错误和警告个数、光标位置、缩进大小、编码格式、行尾序列、文件格式、反馈和通知。</p>
<h3>资源管理器</h3>
<p>资源管理器是最常使用的界面，快捷键为 <code>Ctrl + Shift + E</code>。资源管理器会列出当前项目内的所有文档，支持大纲展示。</p>
<h3>搜索</h3>
<p>搜索界面可以方便的对打开文件夹内的所有文本型文件进行关键字的搜索。搜索结果会详细的列出来，快捷键为 <code>Ctrl + Shift + F</code>。</p>
<p>搜索内容支持大小写敏感/不敏感、全字匹配、指定目录/文件搜索、正则表达式等高级功能。</p>
<h3>源代码管理</h3>
<p>源代码管理提供快速暂存、提交并同步更改的功能，快捷键为 <code>Ctrl + Shift + G</code>。源代码可以快速对当前项目文件进行暂存、打包与推送。</p>
<p>使用源代码需要安装 Git，详情请见请见 <a href="/software/git/" target="_blank">Git 使用说明</a>。</p>
<h3>调试</h3>
<p>在这里可以调试代码，快捷键为 <code>Ctrl + Shift + D</code>。针对不同的语言，您可能需要安装不同的扩展。</p>
<p>按下 F5 开始进行调试。在初次调试前，您可能要选择当前的环境与调试的内容。</p>
<h3>扩展</h3>
<p>VS Code 强大就强大在其丰富的扩展。尽管 VS Code 在安装后是一个轻量的编辑器，但是如果您安装了您所需的合适扩展，您完全可以将其配置成 IDE。</p>
<p>在商店中可以找到大量的扩展，快捷键为 <code>Ctrl + Shift + X</code>。对于功能相近的插件，尽量选择一些 star 数比较高的插件安装。</p>
<p>每个插件的主页通常会有对应的说明文件，安装插件后请仔细阅读说明文档以了解插件的用法。</p>
<h2>强大的扩展内容</h2>
<p>VS Code 扩展允许第三方添加对以下内容的支持:</p>
<ul>
<li>语言: 如 C++，C＃，Go，Java，Python，PHP，dart</li>
<li>工具: 如 ESLint，JSHint，PowerShell</li>
<li>调试器: Chrome，PHP XDebug，dart，Java</li>
<li>键盘映射: Vim，Sublime Text，IntelliJ，Emacs，Atom，Visual Studio，Eclipse</li>
</ul>
<p>扩展集成到 VS Code 的 UI，命令和任务运行系统中，因此您将发现通过 VS Code 的共享界面可以轻松使用不同的技术。</p>
<p>扩展可以通过按 <code>F1</code> 或者 <code>Ctrl + Shift + P</code> 来打开命令行窗口，并输入 <code>ext install 扩展名称</code> 来进行安装</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>一些非常有用的扩展请见 <a href="/software/vscode/guide/extension.html#%E6%89%A9%E5%B1%95%E5%BB%BA%E8%AE%AE" target="_blank">VS Code 扩展建议</a></p>
</div>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">VS Code 安装</title>
    <id>https://blog.ruizhou.cf/software/vscode/install.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/install.html"/>
    <updated>2024-10-09T02:08:52.331Z</updated>
    <summary type="html"><![CDATA[
<h2>下载</h2>
<p>在 <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">官网下载地址</a> 下载最新版安装包(Window User 64bit, 那个大的蓝色按钮就是)。</p>
<h2>安装</h2>
<ul>
<li>
<p>双击安装包打开</p>
</li>
<li>
<p>同意用户协议。</p>
</li>
<li>
<p>安装选项中，请务必 <strong>全选</strong> 以下选项:</p>
<figure><figcaption>安装 VS Code</figcaption></figure>
<p>勾选 <strong>添加到目录上下文菜单</strong>、<strong>添加到文件上下文菜单</strong>、<strong>将 code 注册为受支持的文件编辑器</strong>、<strong>添加到 path</strong>。</p>
</li>
<li>
<p>在 VS Code 初次启动后，若未提前安装 Git 可能会提示未找到 Git 软件，忽略即可</p>
</li>
<li>
<p>推荐立即执行简体中文扩展安装以保证界面语言为简体中文。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当您安装 VS Code 并第一次打开的时候，VS Code 会自动检测当前系统语言并在右下角推荐您安装对应语言的扩展，点击按钮即可自动安装。</p>
</div>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[
<h2>下载</h2>
<p>在 <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">官网下载地址</a> 下载最新版安装包(Window User 64bit, 那个大的蓝色按钮就是)。</p>
<h2>安装</h2>
<ul>
<li>
<p>双击安装包打开</p>
</li>
<li>
<p>同意用户协议。</p>
</li>
<li>
<p>安装选项中，请务必 <strong>全选</strong> 以下选项:</p>
<figure><figcaption>安装 VS Code</figcaption></figure>
<p>勾选 <strong>添加到目录上下文菜单</strong>、<strong>添加到文件上下文菜单</strong>、<strong>将 code 注册为受支持的文件编辑器</strong>、<strong>添加到 path</strong>。</p>
</li>
<li>
<p>在 VS Code 初次启动后，若未提前安装 Git 可能会提示未找到 Git 软件，忽略即可</p>
</li>
<li>
<p>推荐立即执行简体中文扩展安装以保证界面语言为简体中文。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当您安装 VS Code 并第一次打开的时候，VS Code 会自动检测当前系统语言并在右下角推荐您安装对应语言的扩展，点击按钮即可自动安装。</p>
</div>
</li>
</ul>
<h2>更新频率</h2>
<p>VS Code 每月发布一个具有新功能和重要错误修复的新版本。大多数平台都支持自动更新，并且会在新版本发布时提示您安装新版本。您还可以通过运行左下角 <strong>管理 → 检查更新</strong> 来手动检查更新。</p>
<h2>用 VS Code 打开文件和文件夹</h2>
<p>VS Code 支持打开文件和文件夹。</p>
<ul>
<li>
<p>打开文件时请在文件图标上单击右键—选择 <strong>使用 VS Code 打开</strong>；</p>
</li>
<li>
<p>打开文件夹请双击打开文件夹，在空白处单击右键——选择 <strong>用 VS Code 打开</strong>。</p>
</li>
</ul>
<h3>Mac 添加 <strong>通过 Code 打开</strong></h3>
<p>在 Mac 系统上，Finder 选中一个目录，右键菜单并没有 <strong>通过 Code 打开</strong> 这个操作。不过我们可以通过 Automator 自己添加这个操作。</p>
<p>先运行 Automator，选择 <strong>服务</strong>:</p>
<figure><figcaption>Automator Service</figcaption></figure>
<p>然后，执行以下操作:</p>
<figure><figcaption>Automator</figcaption></figure>
<ol>
<li>
<p>在右侧面板选择 <strong>服务</strong> 收到选定的 <strong>文件夹</strong>，位于 “Finder.app”，该选项是为了从 Finder 中接收一个文件夹；</p>
</li>
<li>
<p>在左侧面板选择 <strong>实用工具</strong>，然后找到 <strong>运行 Shell 脚本</strong>，把它拽到右侧面板里；</p>
</li>
<li>
<p>在右侧 <strong>运行 Shell 脚本</strong> 的面板里，选择 Shell <strong>/bin/bash</strong>，传递输入 <strong>作为自变量</strong>，然后修改 Shell 脚本如下:</p>
</li>
</ol>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> f</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">do</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    open</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Visual Studio Code"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">done</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存为 <strong>Open With VS Code</strong> 后，打开 Finder，选中一个文件夹，点击右键， <strong>服务</strong>，就可以看到 <strong>Open With VS Code</strong> 菜单:</p>
<figure><figcaption>Open with VS Code</figcaption></figure>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">配置 VS Code</title>
    <id>https://blog.ruizhou.cf/software/vscode/settings.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/settings.html"/>
    <updated>2024-10-09T02:08:52.332Z</updated>
    <summary type="html"><![CDATA[<p>这是 Mr.Hope 个人使用的 VS Code 设置，部分设置是<a href="/software/vscode/extension.html" target="_blank">这里</a>的插件配置</p>
<p>将下面内容拷贝至 setting.json 以更改 VS Code 设置</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 编辑器配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.accessibilitySupport"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"off"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.bracketPairColorization.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.bracketPairColorization.independentColorPoolPerBracketType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.cursorSmoothCaretAnimation"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.detectIndentation"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.fontFamily"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"'Fira Code', Consolas, 'Courier New', monospace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.fontLigatures"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.formatOnPaste"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.formatOnSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.guides.bracketPairs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.inlineSuggest.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.incrementalNaming"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"smart"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.mouseWheelZoom"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.rulers"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.quickSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "comments"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "strings"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "other"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.renderControlCharacters"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.renderWhitespace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"boundary"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.smoothScrolling"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.stickyScroll.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"first"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.tabSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.wordWrap"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.experimental.pasteActions.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // emmet 包含 wxml 视为 html</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "emmet.includeLanguages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "wxml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "axml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"xml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "emmet.variables"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "lang"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"zh-CN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "charset"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 文件相关</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.confirmDelete"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.confirmDragAndDrop"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.fileNesting.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.associations"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.cjson"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"jsonc"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxss"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"javascript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"wxml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.autoSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"off"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.eol"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.exclude"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.classpath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.project"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.settings"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.factorypath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.maxMemoryForLargeFilesMB"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 编辑器窗口设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.closeWhenEmpty"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.commandCenter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.dialogStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"custom"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.newWindowDimensions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"inherit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "breadcrumbs.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 工作台设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.activityBar.visible"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.colorTheme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"One Dark Pro"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.commandPalette.preserveInput"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.editor.scrollToSwitchTabs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.iconTheme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"material-icon-theme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.startupEditor"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"none"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "security.workspace.trust.untrustedFiles"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"open"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "material-icon-theme.folders.associations"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "global-components"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Global"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "about"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Command"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "intro"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Command"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "file"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Public"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "github"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"GitHub"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "composables"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Include"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "service-worker"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"config"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Vuex-store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Examples"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "basic"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Helper"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vuex"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Vuex-store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "module"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"plugin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "router"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Routes"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ".vuepress"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vuepress"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "node-js"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "react"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"React-components"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "workflows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ci"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "guide"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"content"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "git"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Git"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "mysql"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"DataBase"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "software"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"App"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "tool"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Tools"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vscode"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"VSCode"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "en"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"I18n"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "zh"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"I18n"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "types"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"typescript"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 提示设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "vsintellicode.modify.editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"automaticallyOverrodeDefaultValue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "problems.showCurrentInStatus"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 在线服务设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "telemetry.telemetryLevel"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 终端设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.external.linuxExec"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bash"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.confirmOnExit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hasChildProcesses"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.copyOnSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.enableBell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.defaultProfile.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.defaultProfile.linux"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bash"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.env.linux"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "NODE_OPTIONS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--max_old_space_size=4096"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.env.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "NODE_OPTIONS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--max_old_space_size=4096"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.profiles.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "source"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "overrideName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "icon"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"terminal-powershell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "args"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"-NoLogo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.shellIntegration.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.smoothScrolling"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.tabs.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // git</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "diffEditor.ignoreTrimWhitespace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "diffEditor.renderSideBySide"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.autofetch"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.confirmSync"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.enableSmartCommit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.mergeEditor"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "merge-conflict.autoNavigateNextConflict.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // npm 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.enableRunFromFolder"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.packageManager"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pnpm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.scriptExplorerAction"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"run"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.importQuotes"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.packageSubfoldersIntellisense"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.scanDevDependencies"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.showBuildInLibs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 特定格式文件设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[cpp]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ms-vscode.cpptools"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[css]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[dart]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.formatOnType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.selectionHighlight"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.suggest.snippetsPreventQuickSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"recentlyUsed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.tabCompletion"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.wordBasedSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[html]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[latex]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"James-Yu.latex-workshop"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[javascript]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[json]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[jsonc]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[matlab]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "files.encoding"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"gb2312"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[markdown]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[svelte]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"svelte.svelte-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[scss]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[typescript]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[typescriptreact]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[vue]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[xml]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"DotJoshJohnson.xml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[yaml]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // typescript 配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.format.semicolons"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.referencesCodeLens.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.suggest.completeFunctionCalls"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.preferences.quoteStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"double"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.updateImportsOnFileMove.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"always"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.locale"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"zh-CN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.enablePromptUseWorkspaceTsdk"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.format.semicolons"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.preferences.quoteStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"double"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.referencesCodeLens.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.suggest.completeFunctionCalls"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.updateImportsOnFileMove.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"always"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // php 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "php.validate.enable"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "php.validate.run"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"onType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // c++ 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.default.cppStandard"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"c++23"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 需要根据自己情况设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.default.includePath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed",</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/x86_64-w64-mingw32/include"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.clang_format_fallbackStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Google"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // dart</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "dart.debugSdkLibraries"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "dart.openDevTools"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"flutter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "java.jdt.ls.java.home"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"c:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Program Files</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Java</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jdk-18.0.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "python.languageServer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Pylance"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // css颜色提示配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "colorInfo.fields"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hex"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rgb"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"alpha"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css-color-name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"preview"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "colorInfo.languages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"sass"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"scss"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"less"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // eslint</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "eslint.packageManager"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pnpm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "eslint.validate"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "javascript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "javascriptreact"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "typescript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "typescriptreact"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // Git Lens 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultDateFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"YYYY-MM-DD HH:mm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultDateShortFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"YYYY-MM-DD"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultTimeFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HH:mm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.gitCommands.closeOnFocusOut"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.views.repositories.branches.layout"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.advanced.messages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "suppressCommitNotFoundWarning"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "suppressRebaseSwitchToTextWarning"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // markdown 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.extension.orderedList.marker"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.validate.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.extension.print.imgToBase64"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // markdownlint 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdownlint.config"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "default"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD003"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"atx"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD004"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dash"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD013"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD024"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "allow_different_nesting"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD035"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"---"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 根据自己情况设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown-pdf.executablePath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"C:/Users/mister-hope/AppData/Local/Google/Chrome/Application/chrome.exe"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // XML工具设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "xmlTools.enforcePrettySelfClosingTagOnFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "xmlTools.removeCommentsOnMinify"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 微信小程序</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "minapp-vscode.disableAutoConfig"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "minapp-vscode.wxmlFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"prettier"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "minapp-vscode.prettier"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "parser"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "printWidth"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // liveshare 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "liveshare.audio.joinCallBehavior"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"accept"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 项目管理器</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "projectManager.sortList"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Saved"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "projectManager.ignoreProjectsWithinProjects"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "projectManager.any.ignoredFolders"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "dist"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "node_modules"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "out"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "typings"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "__tests__"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "projectManager.git.baseFolders"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"C:/Projects/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // TODO Highlight 配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "todohighlight.keywords"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"WARNING: "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // stylelint 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "stylelint.packageManager"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pnpm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // Java</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "redhat.telemetry.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // github copilot</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "github.copilot.enable"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "yaml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "plaintext"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "markdown"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>这是 Mr.Hope 个人使用的 VS Code 设置，部分设置是<a href="/software/vscode/extension.html" target="_blank">这里</a>的插件配置</p>
<p>将下面内容拷贝至 setting.json 以更改 VS Code 设置</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 编辑器配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.accessibilitySupport"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"off"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.bracketPairColorization.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.bracketPairColorization.independentColorPoolPerBracketType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.cursorSmoothCaretAnimation"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.detectIndentation"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.fontFamily"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"'Fira Code', Consolas, 'Courier New', monospace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.fontLigatures"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.formatOnPaste"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.formatOnSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.guides.bracketPairs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.inlineSuggest.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.incrementalNaming"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"smart"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.mouseWheelZoom"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.rulers"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.quickSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "comments"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "strings"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "other"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.renderControlCharacters"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.renderWhitespace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"boundary"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.smoothScrolling"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.stickyScroll.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"first"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.tabSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.wordWrap"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.experimental.pasteActions.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // emmet 包含 wxml 视为 html</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "emmet.includeLanguages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "wxml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "axml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"xml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "emmet.variables"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "lang"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"zh-CN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "charset"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 文件相关</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.confirmDelete"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.confirmDragAndDrop"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "explorer.fileNesting.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.associations"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.cjson"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"jsonc"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxss"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"javascript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "*.wxml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"wxml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.autoSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"off"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.eol"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.exclude"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.classpath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.project"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.settings"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "**/.factorypath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "files.maxMemoryForLargeFilesMB"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 编辑器窗口设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.closeWhenEmpty"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.commandCenter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.dialogStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"custom"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "window.newWindowDimensions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"inherit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "breadcrumbs.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 工作台设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.activityBar.visible"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.colorTheme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"One Dark Pro"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.commandPalette.preserveInput"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.editor.scrollToSwitchTabs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.iconTheme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"material-icon-theme"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "workbench.startupEditor"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"none"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "security.workspace.trust.untrustedFiles"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"open"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "material-icon-theme.folders.associations"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "global-components"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Global"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "about"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Command"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "intro"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Command"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "file"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Public"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "github"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"GitHub"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "composables"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Include"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "service-worker"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"config"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Vuex-store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Examples"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "basic"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Helper"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vuex"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Vuex-store"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "module"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"plugin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "router"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Routes"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ".vuepress"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vuepress"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "node-js"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "react"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"React-components"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "workflows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ci"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "guide"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"content"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "git"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Git"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "mysql"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"DataBase"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "software"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"App"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "tool"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Tools"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "vscode"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"VSCode"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "en"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"I18n"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "zh"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"I18n"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "types"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"typescript"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 提示设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "vsintellicode.modify.editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"automaticallyOverrodeDefaultValue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "problems.showCurrentInStatus"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 在线服务设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "telemetry.telemetryLevel"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 终端设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.external.linuxExec"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bash"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.confirmOnExit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hasChildProcesses"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.copyOnSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.enableBell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.defaultProfile.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.defaultProfile.linux"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bash"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.env.linux"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "NODE_OPTIONS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--max_old_space_size=4096"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.env.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "NODE_OPTIONS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--max_old_space_size=4096"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.profiles.windows"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "source"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"PowerShell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "overrideName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "icon"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"terminal-powershell"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "args"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"-NoLogo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.shellIntegration.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.smoothScrolling"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "terminal.integrated.tabs.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // git</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "diffEditor.ignoreTrimWhitespace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "diffEditor.renderSideBySide"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.autofetch"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.confirmSync"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.enableSmartCommit"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "git.mergeEditor"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "merge-conflict.autoNavigateNextConflict.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // npm 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.enableRunFromFolder"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.packageManager"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pnpm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm.scriptExplorerAction"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"run"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.importQuotes"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.packageSubfoldersIntellisense"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.scanDevDependencies"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "npm-intellisense.showBuildInLibs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 特定格式文件设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[cpp]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ms-vscode.cpptools"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[css]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[dart]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.formatOnType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.selectionHighlight"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.suggest.snippetsPreventQuickSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.suggestSelection"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"recentlyUsed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.tabCompletion"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.wordBasedSuggestions"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[html]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[latex]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"James-Yu.latex-workshop"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[javascript]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[json]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[jsonc]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[matlab]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "files.encoding"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"gb2312"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[markdown]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[svelte]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"svelte.svelte-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[scss]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[typescript]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[typescriptreact]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[vue]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[xml]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"DotJoshJohnson.xml"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "[yaml]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.defaultFormatter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"esbenp.prettier-vscode"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // typescript 配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.format.semicolons"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.referencesCodeLens.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.suggest.completeFunctionCalls"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.preferences.quoteStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"double"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "javascript.updateImportsOnFileMove.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"always"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.locale"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"zh-CN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.enablePromptUseWorkspaceTsdk"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.format.semicolons"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.preferences.quoteStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"double"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.referencesCodeLens.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.suggest.completeFunctionCalls"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "typescript.updateImportsOnFileMove.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"always"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // php 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "php.validate.enable"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "php.validate.run"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"onType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // c++ 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.default.cppStandard"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"c++23"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 需要根据自己情况设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.default.includePath"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed",</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // "C:/Program Files/mingw-w64/x86_64-w64-mingw32/include"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "C_Cpp.clang_format_fallbackStyle"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Google"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // dart</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "dart.debugSdkLibraries"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "dart.openDevTools"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"flutter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "java.jdt.ls.java.home"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"c:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Program Files</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Java</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jdk-18.0.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "python.languageServer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Pylance"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // css颜色提示配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "colorInfo.fields"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hex"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rgb"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"alpha"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css-color-name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"preview"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "colorInfo.languages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"sass"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"scss"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "selector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"less"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "colors"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // eslint</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "eslint.packageManager"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pnpm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "eslint.validate"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "javascript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "javascriptreact"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "vue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "typescript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "typescriptreact"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // Git Lens 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultDateFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"YYYY-MM-DD HH:mm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultDateShortFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"YYYY-MM-DD"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.defaultTimeFormat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HH:mm"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.gitCommands.closeOnFocusOut"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.views.repositories.branches.layout"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "gitlens.advanced.messages"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "suppressCommitNotFoundWarning"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "suppressRebaseSwitchToTextWarning"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // markdown 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.extension.orderedList.marker"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.validate.enabled"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdown.extension.print.imgToBase64"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // markdownlint 设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "markdownlint.config"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "default"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD003"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"atx"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD004"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dash"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD013"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD024"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "allow_different_nesting"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "MD035"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      "style"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">VS Code 的简单介绍</title>
    <id>https://blog.ruizhou.cf/software/vscode/simple.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/simple.html"/>
    <updated>2024-10-09T02:08:52.488Z</updated>
    <summary type="html"><![CDATA[<h2>简介</h2>
<p>这是一款微软的代码编辑器，因其开源，可扩展和众多插件成为全球最受欢迎的代码编辑器。</p>
<h2>VS Code 的安装</h2>
<p>在<a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">官网下载地址</a>下载最新版 Win64User 安装包，双击安装包打开同意用户协议，一直下一步即可。</p>
<p>在 VS Code 初次启动后，若未提前安装 Git 可能会提示未找到 Git 软件，忽略即可；若提示安装简体中文扩展，请点击安装以保证界面语言为简体中文。</p>]]></summary>
    <content type="html"><![CDATA[<h2>简介</h2>
<p>这是一款微软的代码编辑器，因其开源，可扩展和众多插件成为全球最受欢迎的代码编辑器。</p>
<h2>VS Code 的安装</h2>
<p>在<a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">官网下载地址</a>下载最新版 Win64User 安装包，双击安装包打开同意用户协议，一直下一步即可。</p>
<p>在 VS Code 初次启动后，若未提前安装 Git 可能会提示未找到 Git 软件，忽略即可；若提示安装简体中文扩展，请点击安装以保证界面语言为简体中文。</p>
<h2>关于 VS Code 界面</h2>
<p>VS Code 上方有一排菜单栏，其中有大量的快捷操作，对应的组合键会标于快捷操作旁。如果不能记忆快捷键可以到最上方的菜单栏处查看。</p>
<p>最左侧是选项卡切换，从上至下依次是<a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8">资源管理器</a>、搜索、源代码管理、调试和扩展。</p>
<p>最下方的一条是状态栏。从左到右依次是分支名称、同步状态、错误和警告个数、光标位置、缩进大小、编码格式、行尾序列、文件格式、反馈(没用)和通知。</p>
<h3>资源管理器</h3>
<p>资源管理器是最常使用的界面，快捷键为 <code>Ctrl + Shift + E</code>。</p>
<h2>用 VS Code 打开文件和文件夹</h2>
<p>VS Code 支持打开文件和文件夹。</p>
<p>打开文件时请在文件图标上单击右键—选择使用 VS Code 打开；</p>
<p>打开文件夹请双击打开文件夹，在空白处单击右键——选择用 VS Code 打开。</p>
<h2>VS Code 快捷键</h2>
<h3>快速选中</h3>
<p>在任意位置单击放置光标，按住 <code>shift</code> 在第二个位置单击，即可选中两光标位置间的所有文字。</p>
<p><code>Ctrl + Alt + ↑/↓</code>: 向方向键方向的相邻行放置一个光标；</p>
<h3>移动文字</h3>
<p><code>Alt + ↑</code>: 光标所在行或选中的文字的所有行整体上移一行；</p>
<p><code>Alt + ↓</code>: 光标所在行或选中文字的所有行整体下移一行</p>
<h3>复制文字</h3>
<p><code>Alt + shift + ↑</code>: 光标所在行或选中的文字的所有行整体向下复制一行(如果选中了多行就是复制多行)；</p>
<p><code>Alt + shift + ↓</code>: 光标所在行或选中文字的所有行整体向上复制一行(如果选中了多行就是复制多行)；</p>
<h3>格式化代码</h3>
<p><code>Alt + shift + F</code></p>
<h3>其他 Windows 快捷键</h3>
<p><code>Ctrl + X</code>: 剪切；</p>
<p><code>Ctrl + C</code>: 复制；</p>
<p><code>Ctrl + V</code>: 粘贴；</p>
<p><code>Ctrl + A</code>: 全选；</p>
<p><code>Ctrl + Z</code>: 撤销；</p>
<p><code>Ctrl + Y</code>: 恢复；</p>
<p><code>Ctrl + F</code>: 查找；</p>
<p><code>Ctrl + H</code>: 替换。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">golang 语言</title>
    <id>https://blog.ruizhou.cf/tech/go/</id>
    <link href="https://blog.ruizhou.cf/tech/go/"/>
    <updated>2024-10-09T02:08:52.489Z</updated>
    <summary type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>正在完善中...</p>
</div>
]]></summary>
    <content type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>正在完善中...</p>
</div>
<!-- more -->
]]></content>
    <category term="Go"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">YAML 教程</title>
    <id>https://blog.ruizhou.cf/tech/other/yaml.html</id>
    <link href="https://blog.ruizhou.cf/tech/other/yaml.html"/>
    <updated>2024-10-09T02:08:52.489Z</updated>
    <summary type="html"><![CDATA[<p>编程免不了要写配置文件，怎么写配置也是一门学问。</p>
<p>YAML 是专门用来写配置文件的语言，非常简洁和强大。</p>
<h2>yaml 介绍</h2>
<p>YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>
<p>YAML 的全称是 YAML Ain’t Markup Language。</p>
<p>它的基本语法规则如下。</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用 Tab 键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>编程免不了要写配置文件，怎么写配置也是一门学问。</p>
<p>YAML 是专门用来写配置文件的语言，非常简洁和强大。</p>
<h2>yaml 介绍</h2>
<p>YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>
<p>YAML 的全称是 YAML Ain’t Markup Language。</p>
<p>它的基本语法规则如下。</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用 Tab 键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
</ul>
<p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。</p>
<p>YAML 支持的数据结构有三种。</p>
<ul>
<li>对象: 键值对的集合，又称为映射(mapping)/ 哈希(hashes) / 字典(dictionary)</li>
<li>数组: 一组按次序排列的值，又称为序列(sequence) / 列表(list)</li>
<li>纯量(scalars): 单个的、不可再分的值</li>
</ul>
<h2>如何打开或编辑 yaml</h2>
<p>推荐使用 VS Code，具体详见<a href="/software/vscode/simple.html" target="_blank">VS Code 简单介绍</a>。</p>
<h2>数据结构介绍</h2>
<h3>对象</h3>
<p>对象的一组键值对，使用冒号结构表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">pets</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pets"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Steve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Steve'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'bar'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>数组</h3>
<p>一组连词线开头的行，构成一个数组。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Goldfish</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Goldfish"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Goldfish</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Goldfish"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>数组也可以采用行内表示法。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>复合结构</h3>
<p>对象和数组可以结合使用，形成复合结构。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">languages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Ruby</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Perl</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">websites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  YAML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">yaml.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Ruby</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">ruby-lang.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Python</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">python.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Perl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">use.perl.org</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  languages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ruby"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Perl"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Python"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  websites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      YAML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"yaml.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Ruby</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ruby-lang.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Python</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"python.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Perl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"use.perl.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>纯量</h3>
<p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p>
<ul>
<li>字符串</li>
<li>布尔值</li>
<li>整数</li>
<li>浮点数</li>
<li>Null</li>
<li>时间</li>
<li>日期</li>
</ul>
<p>数值直接以字面量的形式表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12.30</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>布尔值用 <code>true</code> 和 <code>false</code> 表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">isSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  isSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>null</code> 用 <code>~</code> 表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">~</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>时间采用 ISO8601 格式。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iso8601</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2001-12-14t21:59:43.10-05:00</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  iso8601</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"2001-12-14t21:59:43.10-05:00"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日期采用复合 iso8601 格式的年、月、日表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1976-07-31</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1976-07-31"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>YAML 允许使用两个感叹号，强制转换数据类型。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">!!str</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">!!str</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'123'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'true'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>字符串</h3>
<p>字符串是最常见，也是最复杂的一种数据类型。</p>
<p>字符串默认不使用引号表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">这是一行字符串</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"这是一行字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容: 字符串"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容: 字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容\n字符串'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">字符串"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">n字符串'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">字符串'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"labor's day"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"labor's day"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">这是一段</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  多行</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  字符串</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"这是一段 多行 字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多行字符串可以使用 <code>|</code> 保留换行符，也可以使用 <code>&gt;</code> 折叠换行。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Bar</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Bar</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Bar</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo Bar</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><code>+</code> 表示保留文字块末尾的换行，<code>-</code> 表示删除字符串末尾的换行。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|-</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n\n\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>引用</h2>
<p>锚点 <code>&amp;</code> 和别名 <code>*</code>，可以用来引用。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">defaults</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">development</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_development</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_test</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等同于下面的代码。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">development</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_development</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_test</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&amp;</code> 用来建立锚点(defaults)，<code>&lt;&lt;</code> 表示合并到当前数据，<code>*</code> 用来引用锚点。</p>
<p>下面是另一个例子。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">showell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Steve</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Clark</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Brian</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Oren</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">showell</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Steve"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Clark"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Brian"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Oren"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Steve"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>函数和正则表达式的转换</h2>
<p>这是 JS-YAML 库特有的功能，可以把函数和正则表达式转为字符串。(官方 yaml 标准里不包含这个部分)</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># example.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">function () { return 1 }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/test/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析上面的 yml 文件的代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> yaml</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"js-yaml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> fs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"fs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> doc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> yaml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readFileSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"./example.yml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"utf8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">doc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> yaml</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"js-yaml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> fs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"fs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> obj</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  fn</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  reg</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75"> /test/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeFileSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"./example.yml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">yaml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dump</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"utf8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <category term="yaml"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">YAML 教程</title>
    <id>https://blog.ruizhou.cf/tech/yaml/</id>
    <link href="https://blog.ruizhou.cf/tech/yaml/"/>
    <updated>2024-10-09T02:08:52.517Z</updated>
    <summary type="html"><![CDATA[<p>编程免不了要写配置文件，怎么写配置也是一门学问。</p>
<p>YAML 是专门用来写配置文件的语言，非常简洁和强大。</p>
<h2>yaml 介绍</h2>
<p>YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>
<p>YAML 的全称是 YAML Ain’t Markup Language。</p>
<p>它的基本语法规则如下。</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用 Tab 键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>编程免不了要写配置文件，怎么写配置也是一门学问。</p>
<p>YAML 是专门用来写配置文件的语言，非常简洁和强大。</p>
<h2>yaml 介绍</h2>
<p>YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>
<p>YAML 的全称是 YAML Ain’t Markup Language。</p>
<p>它的基本语法规则如下。</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用 Tab 键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
</ul>
<p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。</p>
<p>YAML 支持的数据结构有三种。</p>
<ul>
<li>对象: 键值对的集合，又称为映射(mapping)/ 哈希(hashes) / 字典(dictionary)</li>
<li>数组: 一组按次序排列的值，又称为序列(sequence) / 列表(list)</li>
<li>纯量(scalars): 单个的、不可再分的值</li>
</ul>
<h2>如何打开或编辑 yaml</h2>
<p>推荐使用 VS Code，具体详见<a href="/software/vscode/simple.html" target="_blank">VS Code 简单介绍</a>。</p>
<h2>数据结构介绍</h2>
<h3>对象</h3>
<p>对象的一组键值对，使用冒号结构表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">pets</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pets"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Steve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Steve'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'bar'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>数组</h3>
<p>一组连词线开头的行，构成一个数组。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Goldfish</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Goldfish"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Goldfish</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Goldfish"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>数组也可以采用行内表示法。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  animal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Cat"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dog"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>复合结构</h3>
<p>对象和数组可以结合使用，形成复合结构。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">languages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Ruby</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Perl</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">websites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  YAML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">yaml.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Ruby</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">ruby-lang.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Python</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">python.org</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  Perl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">use.perl.org</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  languages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ruby"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Perl"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Python"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  websites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      YAML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"yaml.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Ruby</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ruby-lang.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Python</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"python.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      Perl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"use.perl.org"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>纯量</h3>
<p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p>
<ul>
<li>字符串</li>
<li>布尔值</li>
<li>整数</li>
<li>浮点数</li>
<li>Null</li>
<li>时间</li>
<li>日期</li>
</ul>
<p>数值直接以字面量的形式表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12.30</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>布尔值用 <code>true</code> 和 <code>false</code> 表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">isSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  isSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>null</code> 用 <code>~</code> 表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">~</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>时间采用 ISO8601 格式。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iso8601</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2001-12-14t21:59:43.10-05:00</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  iso8601</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"2001-12-14t21:59:43.10-05:00"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日期采用复合 iso8601 格式的年、月、日表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1976-07-31</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1976-07-31"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>YAML 允许使用两个感叹号，强制转换数据类型。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">!!str</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">!!str</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'123'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'true'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>字符串</h3>
<p>字符串是最常见，也是最复杂的一种数据类型。</p>
<p>字符串默认不使用引号表示。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">这是一行字符串</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"这是一行字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容: 字符串"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容: 字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容\n字符串'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">字符串"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">n字符串'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'内容</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">字符串'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"labor's day"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"labor's day"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">这是一段</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  多行</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  字符串</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"这是一段 多行 字符串"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多行字符串可以使用 <code>|</code> 保留换行符，也可以使用 <code>&gt;</code> 折叠换行。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Bar</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Bar</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Bar</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo Bar</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><code>+</code> 表示保留文字块末尾的换行，<code>-</code> 表示删除字符串末尾的换行。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">|-</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  Foo</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n\n\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Foo'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>引用</h2>
<p>锚点 <code>&amp;</code> 和别名 <code>*</code>，可以用来引用。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">defaults</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">development</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_development</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_test</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等同于下面的代码。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">development</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_development</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">myapp_test</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">postgres</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">localhost</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&amp;</code> 用来建立锚点(defaults)，<code>&lt;&lt;</code> 表示合并到当前数据，<code>*</code> 用来引用锚点。</p>
<p>下面是另一个例子。</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">showell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Steve</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Clark</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Brian</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Oren</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">showell</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转为 JavaScript 代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Steve"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Clark"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Brian"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Oren"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Steve"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>函数和正则表达式的转换</h2>
<p>这是 JS-YAML 库特有的功能，可以把函数和正则表达式转为字符串。(官方 yaml 标准里不包含这个部分)</p>
<div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># example.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">function () { return 1 }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/test/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析上面的 yml 文件的代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> yaml</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"js-yaml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> fs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"fs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> doc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> yaml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readFileSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"./example.yml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"utf8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">doc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> yaml</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"js-yaml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> fs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"fs"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> obj</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  fn</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  reg</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75"> /test/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeFileSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"./example.yml"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">yaml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dump</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"utf8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content>
    <category term="YAML"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">VS Code 指南</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/"/>
    <updated>2024-10-09T02:08:52.569Z</updated>
    <summary type="html"><![CDATA[<ul>
<li>
<p><a href="/software/vscode/guide/basic.html" target="_blank">基础介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/customization.html" target="_blank">个性化介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/extension.html" target="_blank">扩展介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/file.html" target="_blank">文件介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/edit.html" target="_blank">编辑技巧</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/intellisense.html" target="_blank">智能补全</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/git.html" target="_blank">Git 支持</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/debug.html" target="_blank">调试介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/task.html" target="_blank">任务介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/command.html" target="_blank">命令行介绍</a></p>
</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<ul>
<li>
<p><a href="/software/vscode/guide/basic.html" target="_blank">基础介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/customization.html" target="_blank">个性化介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/extension.html" target="_blank">扩展介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/file.html" target="_blank">文件介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/edit.html" target="_blank">编辑技巧</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/intellisense.html" target="_blank">智能补全</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/git.html" target="_blank">Git 支持</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/debug.html" target="_blank">调试介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/task.html" target="_blank">任务介绍</a></p>
</li>
<li>
<p><a href="/software/vscode/guide/command.html" target="_blank">命令行介绍</a></p>
</li>
</ul>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">基础内容介绍</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/basic.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/basic.html"/>
    <updated>2024-10-09T02:08:52.570Z</updated>
    <summary type="html"><![CDATA[<h2>入门</h2>
<p>打开 <strong>欢迎使用</strong> 页面，开始使用 VS Code 的基础知识。<strong>帮助 &gt; 欢迎</strong></p>
<figure><figcaption>欢迎使用</figcaption></figure>
<p>在 <strong>欢迎</strong> 页面的右下角，有一个指向 <strong>交互式游乐场</strong> 的链接，您可以在其中交互式地试用 VS Code 的功能。<strong>帮助 &gt; 交互式游乐场</strong></p>
<figure><figcaption>交互式游乐场</figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<h2>入门</h2>
<p>打开 <strong>欢迎使用</strong> 页面，开始使用 VS Code 的基础知识。<strong>帮助 &gt; 欢迎</strong></p>
<figure><figcaption>欢迎使用</figcaption></figure>
<p>在 <strong>欢迎</strong> 页面的右下角，有一个指向 <strong>交互式游乐场</strong> 的链接，您可以在其中交互式地试用 VS Code 的功能。<strong>帮助 &gt; 交互式游乐场</strong></p>
<figure><figcaption>交互式游乐场</figcaption></figure>
<h2>命令面板</h2>
<p>根据您的当前上下文访问所有可用命令。</p>
<p>键盘快捷键: <code>Ctrl + Shift + P</code></p>
<figure><figcaption>命令面板</figcaption></figure>
<h2>默认键盘快捷键</h2>
<p>所有命令都在命令面板中，并带有关联的键绑定(如果存在)。如果您忘记了键盘快捷键，请使用 <strong>命令面板</strong> 来帮助您。</p>
<figure><figcaption>查看命令与对应快捷键</figcaption></figure>
<h2>错误和警告</h2>
<p>键盘快捷键: <code>Ctrl + Shift + M</code></p>
<figure><figcaption>错误和警告</figcaption></figure>
<p>快速跳转到项目中的错误和警告。</p>
<p>通过 <code>F8</code> 或 <code>Shift + F8</code> 在错误中循环</p>
<p>您可以在问题面板右上角的筛选器中按类型 (errors, warnings) 或文本匹配来过滤问题。</p>
<h2>集成终端</h2>
<p>键盘快捷键: <code>Ctrl + `</code></p>
<div class="hint-container tip">
<p class="hint-container-title">深入了解</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/editor/integrated-terminal" target="_blank" rel="noopener noreferrer">集成终端文档</a></li>
<li><a href="https://www.growingwiththeweb.com/2017/03/mastering-vscodes-terminal.html" target="_blank" rel="noopener noreferrer">精通 VS Code 终端的文章</a></li>
</ul>
</div>
<h2>键盘参考表</h2>
<p><a href="/file/vscodeKeyboardShortcutsWindows.pdf">Windows 下 VS Code 快捷键指南</a> (英文)</p>
<h2>快速打开</h2>
<p>快速打开文件。</p>
<p>键盘快捷键: <code>Ctrl + P</code></p>
<figure><figcaption>快速打开</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>键入 <code>?</code> 查看命令建议。</p>
<figure><figcaption>命令建议</figcaption></figure>
<p>键入命令，例如 <code>edt</code> 和 <code>term</code> 后跟一个空格，将显示下拉列表。</p>
</div>
<h2>最近打开的文件之间的浏览</h2>
<p>重复快速打开键盘快捷键，以在最近打开的文件之间快速循环。</p>
<h2>从快速打开打开多个文件</h2>
<p>您可以通过按向鼠标右键从 <strong>快速打开</strong> 中打开多个文件。这将在后台打开当前选择的文件，您可以继续从 <strong>快速打开</strong> 中选择文件。</p>
<h2>最近打开的文件夹和工作区之间导航</h2>
<p>键盘快捷键: <code>Ctrl + R</code></p>
<p>显示快速挑选下拉从列表 <code>文件 &gt; 打开最近</code>。优先使用最近打开的文件夹和工作空间，然后是文件。</p>
<figure><figcaption>最近打开</figcaption></figure>
<h2>更改语言模式</h2>
<p>键盘快捷键: <code>Ctrl + K M</code></p>
<figure><figcaption>语言关联</figcaption></figure>
<p>如果要保留特定文件类型的语言模式，则可以使用 <strong>XX 的配置文件关联</strong> 命令将当前文件扩展名与安装的语言相关联。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">命令行</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/command.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/command.html"/>
    <updated>2024-10-09T02:08:52.571Z</updated>
    <summary type="html"><![CDATA[<p>VS Code 具有强大的命令行界面(CLI)，可让您自定义启动编辑器以支持各种情况的方式。</p>
<p>确保 VS Code 可执行文件已经添加到您的环境变量。只需键入 <code>code</code> 即可启动 VS Code。</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 code 打开当前文件夹</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 在最近使用面板</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开新窗口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 改编当前语言</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --locale=es</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开文件比较器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --diff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">1&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">2&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开文件并跳转到指定的行(和列)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --goto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> package.json:10:5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看帮助选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --help</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 禁用所有扩展</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --disable-extensions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[<p>VS Code 具有强大的命令行界面(CLI)，可让您自定义启动编辑器以支持各种情况的方式。</p>
<p>确保 VS Code 可执行文件已经添加到您的环境变量。只需键入 <code>code</code> 即可启动 VS Code。</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 code 打开当前文件夹</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 在最近使用面板</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开新窗口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 改编当前语言</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --locale=es</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开文件比较器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --diff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">1&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">2&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打开文件并跳转到指定的行(和列)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --goto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> package.json:10:5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看帮助选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --help</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 禁用所有扩展</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --disable-extensions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>.vscode 文件夹</h2>
<p>基于工作区的 <code>.vscode</code> 文件夹位于根目录下。例如任务运行对应的 <code>tasks.json</code> 配置文件和调试器对应的 <code>launch.json</code> 文件。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">个性化</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/customization.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/customization.html"/>
    <updated>2024-10-09T02:08:52.572Z</updated>
    <summary type="html"><![CDATA[<p>您可以做很多事情来个性化 VS Code。</p>
<ul>
<li>改变您的主题</li>
<li>改变您的文件图标</li>
<li>更改键盘快捷键</li>
<li>调整设置</li>
<li>安装扩展</li>
</ul>
<h2>更改主题</h2>
<p>键盘快捷键: <code>Ctrl + K Ctrl + T</code></p>
<p>您可以从 VS Code 扩展市场中安装更多主题。</p>
<p>此外，您可以安装和更改文件图标主题。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Mr.Hope 个人推荐 <code>One Dark Pro</code> 主题和 <code>Material Icon Theme</code> 文件图标主题。</p>
<p>您需要从扩展应用应用商店中安装它们。</p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>您可以做很多事情来个性化 VS Code。</p>
<ul>
<li>改变您的主题</li>
<li>改变您的文件图标</li>
<li>更改键盘快捷键</li>
<li>调整设置</li>
<li>安装扩展</li>
</ul>
<h2>更改主题</h2>
<p>键盘快捷键: <code>Ctrl + K Ctrl + T</code></p>
<p>您可以从 VS Code 扩展市场中安装更多主题。</p>
<p>此外，您可以安装和更改文件图标主题。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Mr.Hope 个人推荐 <code>One Dark Pro</code> 主题和 <code>Material Icon Theme</code> 文件图标主题。</p>
<p>您需要从扩展应用应用商店中安装它们。</p>
</div>
<h2>自定义键盘快捷键</h2>
<p>键盘快捷键: <code>Ctrl + K Ctrl + S</code></p>
<p>您可以搜索快捷方式并将自己的键绑定添加到 <code>keybindings.json</code> 文件中。</p>
<p>有关更多信息，请参见 <a href="/software/vscode/shortcut-key.html#%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%BC%96%E8%BE%91%E5%99%A8" target="_blank">快捷键键绑定</a>。</p>
<h2>调整您的设置</h2>
<p>默认情况下，VS Code 显示 <strong>设置</strong> 编辑器，您还可以通过使用 <strong>打开设置(JSON)</strong> 命令打开 <code>settings.json</code>。</p>
<p>键盘快捷键: <code>Ctrl + ,</code></p>
<p><strong>示例</strong>:</p>
<ul>
<li>
<p>更改各种 UI 元素的字体大小</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Main editor</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.fontSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Terminal panel</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"terminal.integrated.fontSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Output panel</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[Log]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "editor.fontSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>更改缩放等级</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"window.zoomLevel"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>字体连字</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.fontFamily"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Fira Code"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.fontLigatures"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这需要安装支持字体连字的字体。FiraCode 是 VS Code 团队中流行的字体。</p>
<p>Mr.Hope 也强力推荐安装并使用这一字体 (字体详见云文档共享文件)</p>
</div>
</li>
<li>
<p>自动保存</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"files.autoSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"afterDelay"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>您也可以使用 <code>文件 &gt; 自动保存</code> 从顶层菜单切换自动保存。</p>
</li>
<li>
<p>保存时格式化</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.formatOnSave"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>粘贴格式</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.formatOnPaste"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>更改制表符的大小</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.tabSize"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>空格或制表符</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.insertSpaces"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>渲染空白</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"editor.renderWhitespace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"all"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>默认情况下，在文本选择中呈现空白字符。</p>
</li>
<li>
<p>忽略文件/文件夹</p>
<p>从编辑器窗口中删除这些文件/文件夹。</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"files.exclude"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "some-folder/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "some-file"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从搜索结果中删除这些文件/文件夹。</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"search.exclude"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "some-folder/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "some-file"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
<p>以及许多其他定制。</p>
<h2>语言特定的设置</h2>
<p>您可以通过语言标识符来确定只需要特定语言的设置的范围。您可以在 <a href="https://code.visualstudio.com/docs/languages/identifiers" target="_blank" rel="noopener noreferrer">语言标识符</a> 参考中找到常用语言 ID 的列表。</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[language-id]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>您还可以使用 <strong>配置语言特定的设置</strong> 命令来创建特定于语言的设置。</p>
</div>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">调试</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/debug.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/debug.html"/>
    <updated>2024-10-09T02:08:52.575Z</updated>
    <summary type="html"><![CDATA[<h2>配置调试器</h2>
<p>打开命令面板(<code>Ctrl + Shift + P</code>)，然后选择 <strong>调试: 打开 launch.json</strong>，这将提示您选择与项目(Node.js，Python，C ++等)匹配的环境。这将生成一个 <code>launch.json</code> 文件。Node.js 支持是内置的，其他环境要求安装适当的语言扩展。有关更多详细信息，请参见 <a href="https://code.visualstudio.com/docs/editor/debugging" target="_blank" rel="noopener noreferrer">调试文档</a>。</p>]]></summary>
    <content type="html"><![CDATA[<h2>配置调试器</h2>
<p>打开命令面板(<code>Ctrl + Shift + P</code>)，然后选择 <strong>调试: 打开 launch.json</strong>，这将提示您选择与项目(Node.js，Python，C ++等)匹配的环境。这将生成一个 <code>launch.json</code> 文件。Node.js 支持是内置的，其他环境要求安装适当的语言扩展。有关更多详细信息，请参见 <a href="https://code.visualstudio.com/docs/editor/debugging" target="_blank" rel="noopener noreferrer">调试文档</a>。</p>
<figure><figcaption>配置调试</figcaption></figure>
<h2>断点并逐步执行</h2>
<p>在行号旁边放置断点。使用 <strong>调试</strong> 小部件向前导航。</p>
<figure><figcaption>调试</figcaption></figure>
<h2>数据检查</h2>
<p>在 <strong>运行</strong> 面板和控制台中检查变量。</p>
<figure><figcaption>数据检查</figcaption></figure>
<h2>内嵌值</h2>
<p>您可以设置 <code>"debug.inlineValues": true</code> 在调试器中内联查看变量值。此功能开销很大，并且可能会减慢步进速度，因此默认情况下禁用此功能。</p>
<h2>Log Points</h2>
<p>日志点的行为很像断点，但它们不会在命中时暂停调试器，而是在控制台中记录一条消息。日志点对于调试无法修改或暂停的生产服务器时注入日志特别有用。</p>
<p>使用左侧编辑器装订线中的 <strong>添加日志点</strong> 命令添加日志点，该日志点将显示为 🔸 形状的图标。日志消息是纯文本，但可以包含要在花括号('{}')中计算的表达式。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">编辑技巧</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/edit.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/edit.html"/>
    <updated>2024-10-09T02:08:52.575Z</updated>
    <summary type="html"><![CDATA[<p>这是编辑代码的一些常用功能。如果您不喜欢键盘快捷键，请考虑为旧的编辑器安装键盘映射扩展名。</p>
<h2>多光标选择</h2>
<p>要在任意位置添加光标，请用鼠标选择一个位置，然后使用 <code>Alt + Click</code>。</p>
<p>要将光标设置在当前位置之上或之下，请使用:</p>
<p>键盘快捷键: <code>Ctrl + Alt + ↑</code> 或 <code>Ctrl + Alt + ↓</code></p>
<p>您可以使用 <code>Ctrl + Shift + L</code> 将附加光标添加到当前选择的所有实例中。</p>
<p>如果不想添加所有当前选中项，则可以使用 <code>Ctrl + D</code> 代替。这只会选择您选择的选中项之后的下一个选中项，因此您可以一个一个地添加选择。</p>]]></summary>
    <content type="html"><![CDATA[<p>这是编辑代码的一些常用功能。如果您不喜欢键盘快捷键，请考虑为旧的编辑器安装键盘映射扩展名。</p>
<h2>多光标选择</h2>
<p>要在任意位置添加光标，请用鼠标选择一个位置，然后使用 <code>Alt + Click</code>。</p>
<p>要将光标设置在当前位置之上或之下，请使用:</p>
<p>键盘快捷键: <code>Ctrl + Alt + ↑</code> 或 <code>Ctrl + Alt + ↓</code></p>
<p>您可以使用 <code>Ctrl + Shift + L</code> 将附加光标添加到当前选择的所有实例中。</p>
<p>如果不想添加所有当前选中项，则可以使用 <code>Ctrl + D</code> 代替。这只会选择您选择的选中项之后的下一个选中项，因此您可以一个一个地添加选择。</p>
<h2>列(盒)选择</h2>
<p>您可以在拖动鼠标时按住 <code>Shift + Alt</code>(在 macOS 上为 <code>Shift + Option</code>)来选择文本块。一个单独的光标将被添加到每一行的末尾。</p>
<figure><figcaption>列文字选择</figcaption></figure>
<p>您也可以使用键盘快捷键来触发列选择。</p>
<h2>直标尺</h2>
<p>您可以使用该 <code>editor.rulers</code> 设置将垂直列标尺添加到编辑器中。</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "editor.rulers"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>快速滚动</h2>
<p>按 <code>Alt</code> 键可在编辑器和资源管理器中快速滚动。默认情况下，快速滚动使用 5 倍速倍增器，但是您可以使用 <code>editor.fastScrollSensitivity</code> 设置来控制倍增器。</p>
<h2>向上 / 向下复制行</h2>
<p>键盘快捷键: <code>Shift + Alt + ↑</code> 或 <code>Shift + Alt + ↓</code></p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>由于按键冲突，在 Linux 上，向上 / 向下复制行没有默认的快捷键，您可以自行通过 <code>editor.action.copyLinesUpAction</code> 和 <code>editor.action.copyLinesDownAction</code> 设置自己的首选键盘快捷键。</p>
</div>
<h2>上下移动行号</h2>
<p>键盘快捷键: <code>Alt + ↑</code> 或 <code>Alt + ↓</code></p>
<h2>缩小/扩大选择</h2>
<p>键盘快捷键: <code>Shift + Alt + ←</code> 或 <code>Shift + Alt + →</code></p>
<h2>转到文件中的符号</h2>
<p>键盘快捷键: <code>Ctrl + Shift + O</code></p>
<figure><figcaption>按符号查找</figcaption></figure>
<p>您可以通过添加冒号将符号按种类分组 <code>@:</code>。</p>
<h2>转到工作区中的符号</h2>
<p>键盘快捷键: <code>Ctrl + T</code></p>
<figure><figcaption>转到工作区中的符号</figcaption></figure>
<h2>大纲视图</h2>
<p><strong>文件资源管理器</strong> 中的 <strong>大纲</strong> 视图(默认折叠在底部)显示了当前打开文件的符号。</p>
<figure><figcaption>轮廓图</figcaption></figure>
<p>您可以按符号名称，类别和文件中的位置进行排序，并可以快速导航到符号位置。</p>
<h2>导航到特定行</h2>
<p>键盘快捷键: <code>Ctrl + G</code></p>
<h2>恢复光标位置</h2>
<p>键盘快捷键: <code>Ctrl + U</code></p>
<h2>修剪尾随空格</h2>
<p>键盘快捷键: <code>Ctrl + K Ctrl + X</code></p>
<h2>转换文本命令</h2>
<p>您可以使用 <strong>命令面板</strong> 中的 <strong>转换</strong> 命令将选定的文本更改为大写，小写和标题。</p>
<figure><figcaption>转换文字指令</figcaption></figure>
<h2>代码格式化</h2>
<p>当前选择的源代码: <code>Ctrl + K Ctrl + F</code></p>
<p>整个文档: <code>Shift + Alt + F</code></p>
<h2>代码折叠</h2>
<p>键盘快捷键: <code>Ctrl + Shift + [</code> 和 <code>Ctrl + Shift +]</code></p>
<p>您还可以使用全部折叠(<code>Ctrl + K Ctrl + 0</code>)和全部展开(<code>Ctrl + K Ctrl + J</code>)来折叠/展开编辑器中的所有区域。</p>
<p>您可以使用 <strong>折叠所有块注释</strong>(<code>Ctrl + K Ctrl + /</code>)折叠所有块注释。</p>
<h2>选择当前行</h2>
<p>键盘快捷键: <code>Ctrl + L</code></p>
<h2>导航到文件的开头和结尾</h2>
<p>键盘快捷键: <code>Ctrl + Home</code> 和 <code>Ctrl + End</code></p>
<h2>打开 Markdown 预览</h2>
<p>在 Markdown 文件中，使用</p>
<p>键盘快捷键: <code>Ctrl + Shift + V</code></p>
<figure><figcaption>Markdown 预览</figcaption></figure>
<h2>并排 Markdown 编辑和预览</h2>
<p>在 Markdown 文件中，使用</p>
<p>键盘快捷键: <code>Ctrl + K V</code></p>
<p>预览和编辑器将与您在任一视图中的滚动同步。</p>
<figure><figcaption>并排 Markdown 预览</figcaption></figure>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">扩展</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/extension.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/extension.html"/>
    <updated>2024-10-09T02:08:52.601Z</updated>
    <summary type="html"><![CDATA[<p>键盘快捷键: <code>Ctrl + Shift + X</code></p>
<h2>查找扩展</h2>
<ol>
<li>在 VS Code 应用商店</li>
<li>在 VS Code 侧边栏中的 <strong>扩展</strong> 选项卡</li>
<li>查看扩展建议</li>
<li>社区策划的扩展列表，例如 <a href="https://viatsko.github.io/awesome-vscode/" target="_blank" rel="noopener noreferrer">awesome-vscode</a>。</li>
</ol>
<figure><figcaption>扩展选项卡</figcaption></figure>]]></summary>
    <content type="html"><![CDATA[<p>键盘快捷键: <code>Ctrl + Shift + X</code></p>
<h2>查找扩展</h2>
<ol>
<li>在 VS Code 应用商店</li>
<li>在 VS Code 侧边栏中的 <strong>扩展</strong> 选项卡</li>
<li>查看扩展建议</li>
<li>社区策划的扩展列表，例如 <a href="https://viatsko.github.io/awesome-vscode/" target="_blank" rel="noopener noreferrer">awesome-vscode</a>。</li>
</ol>
<figure><figcaption>扩展选项卡</figcaption></figure>
<h2>安装扩展</h2>
<p>在扩展视图中，您可以通过搜索栏进行搜索，或单击 <strong>更多(...)</strong> 按钮以按安装数量进行过滤和排序。</p>
<h2>扩展建议</h2>
<p>在 <strong>扩展</strong> 视图中，单击 <strong>更多(...)</strong> 按钮菜单中的 <strong>显示推荐的扩展</strong>。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">文件</title>
    <id>https://blog.ruizhou.cf/software/vscode/guide/file.html</id>
    <link href="https://blog.ruizhou.cf/software/vscode/guide/file.html"/>
    <updated>2024-10-09T02:08:52.602Z</updated>
    <summary type="html"><![CDATA[<h2>切换侧边栏</h2>
<p>键盘快捷键: <code>Ctrl + B</code></p>
<h2>切换面板</h2>
<p>键盘快捷键: <code>Ctrl + J</code></p>
<h2>Zen 模式</h2>
<p>键盘快捷键: <code>Ctrl + K Z</code></p>
<p>进入无干扰禅宗模式。</p>
<p>按两次 <code>Esc</code> 键退出 Zen 模式。</p>
<h2>并排编辑</h2>
<p>键盘快捷键: <code>Ctrl + \</code></p>
<p>您还可以拖放编辑器以创建新的编辑器组，并在组之间移动编辑器。</p>]]></summary>
    <content type="html"><![CDATA[<h2>切换侧边栏</h2>
<p>键盘快捷键: <code>Ctrl + B</code></p>
<h2>切换面板</h2>
<p>键盘快捷键: <code>Ctrl + J</code></p>
<h2>Zen 模式</h2>
<p>键盘快捷键: <code>Ctrl + K Z</code></p>
<p>进入无干扰禅宗模式。</p>
<p>按两次 <code>Esc</code> 键退出 Zen 模式。</p>
<h2>并排编辑</h2>
<p>键盘快捷键: <code>Ctrl + \</code></p>
<p>您还可以拖放编辑器以创建新的编辑器组，并在组之间移动编辑器。</p>
<h2>编辑之间切换</h2>
<p>键盘快捷键: <code>Ctrl + 1</code>，<code>Ctrl + 2</code>，<code>Ctrl + 3</code></p>
<h2>移至资源管理器窗口</h2>
<p>键盘快捷键: <code>Ctrl + Shift + E</code></p>
<h2>创建或打开一个文件</h2>
<p>键盘快捷键: <code>Ctrl + Click</code></p>
<p>您可以通过将光标移动到文件链接并使用 <code>Ctrl + Click</code> 来快速打开文件或图像或创建新文件。</p>
<h2>关闭当前打开的文件夹</h2>
<p>键盘快捷键: <code>Ctrl + F4</code></p>
<h2>导航历史</h2>
<p>浏览整个历史记录: <code>Ctrl + Tab</code></p>
<p>向后导航: <code>Alt + ←</code></p>
<p>向前导航: <code>Alt + →</code></p>
<h2>文件关联</h2>
<p>为未正确检测到的文件创建语言关联。例如，许多带有自定义文件扩展名的配置文件实际上是 JSON。</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"files.associations"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  ".database"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"json"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>防止脏写入</h2>
<p>当您尝试保存已经再打开后再度在磁盘上发生更改的文件时，VS Code 将显示一条错误消息。VS Code 阻止保存文件，以防止覆盖在编辑器之外进行的更改。</p>
<p>为了解决保存冲突，请在错误消息中单击 <strong>比较</strong> 操作以打开差异编辑器，该差异编辑器将向您显示磁盘上文件的内容(左侧)，与 VS Code 中的内容(右侧)相比:</p>
<p>使用编辑器工具栏中的操作来解决保存冲突。您可以接受更改并覆盖磁盘上的所有更改，也可以还原为磁盘上的版本。还原意味着您的更改将丢失。</p>
<p>注意: 该文件将保持 <code>dirty</code> 状态，直到您选择两个解决冲突的操作之一后才能保存。</p>
]]></content>
    <category term="VS Code"/>
    <published>2024-01-27T00:00:00.000Z</published>
  </entry>
</feed>